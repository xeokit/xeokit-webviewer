{
  "title": "Building and viewing a SceneModel, without retaining geometry in Browser memory",
  "summary": "Create a Viewer with a WebGLRenderer, a Scene and one View. In the Scene, build a SceneModel containing a table-shaped model. Configure the SceneModel with retained: false, which causes it to not retain SceneObject, SceneMesh and SceneGeometrys in browser memory, which results in a smaller memory footprint. The Viewer then draws the model in the View's canvas, while the model's geometry and materials reside entirely in GPU memory.",
  "id": "SceneModel_retainedFalse",
  "type": "example",
  "template": "basicPage",
  "steps": [
    "--------------------------------------------------------------------------------\nCreate a \"non-retained\" SceneModel\n\nOur SceneModel is configured with retained: false, when we build our\nSceneModel, the SceneGeometry, SceneMesh and SceneObjects we created\nwithin it will be cleared from it to save browser memory.\n\nThe Viewer will then still contain ViewObjects for the SceneModel until we\ncall SceneModel.destroy().\n--------------------------------------------------------------------------------",
    "<<------------- Geometry, meshes and objects are not retained",
    "front\nright\ntop\nleft\nbottom",
    "Since our SceneModel was configured with retained: false, when we build our\nSceneModel, the SceneGeometry, SceneMesh and SceneObjects we created\nwithin it are cleared from it.",
    "The Viewer will still contain ViewObjects for the SceneObjects until we\ncall Scene.destroy()."
  ]
}