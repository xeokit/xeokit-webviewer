{
  "SceneModel_DataModel_build_table": {
    "id": "SceneModel_DataModel_build_table",
    "title": "Creating a 3D Model with Semantic Data",
    "description": "Using the xeokit SDK to create a 3D model with semantic data attached",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_DataModel_fromParams_IfcOpenHouse4": {
    "id": "SceneModel_DataModel_fromParams_IfcOpenHouse4",
    "title": "Using xeokit SDK to view an IFC model, loaded from JSON",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_box": {
    "id": "SceneModel_build_box",
    "title": "Creating a Cube",
    "description": "This example demonstrates how to use the xeokit SDK to create and display a 3D box in the browser.",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_box_compressedGeometry": {
    "id": "SceneModel_build_box_compressedGeometry",
    "title": "Creating a Cube from Pre-Compressed Geometry",
    "description": "Using the xeokit SDK to build and display a 3D cube in the browser, defined using compressed geometry data.",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_geometries": {
    "id": "SceneModel_build_geometries",
    "title": "Creating Various Geometries",
    "description": "Using the xeokit SDK to create and view a model containing objects with various shapes, using the SDK's geometry genorator functions.",
    "isTutorial": true,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "SceneModel_build_lines": {
    "id": "SceneModel_build_lines",
    "title": "Creating a Wireframe Model",
    "description": "Using the xeokit SDK to create and view a multi-object wireframe model with line geometries.",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_points": {
    "id": "SceneModel_build_points",
    "title": "Creating 3D Points",
    "description": "Use xeokit to create and display a 3D point cloud in the browser.",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_table": {
    "id": "SceneModel_build_table",
    "title": "Creating a 3D Model",
    "description": "Using xeokit to create a 3D model composed of multiple objects with triangle mesh geometry.",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_triangle": {
    "id": "SceneModel_build_triangle",
    "title": "Creating a 3D Triangle",
    "description": "Using xeokit SDK to create and view a single 3D triangle in the browser.",
    "isTutorial": true,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_build_triangle_checkErrors": {
    "id": "SceneModel_build_triangle_checkErrors",
    "title": "Creating a 3D Triangle with Error Checking",
    "description": "Using xeokit SDK to create and view a 3D triangle in the browser, with error checking",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_fromParams_box": {
    "id": "SceneModel_fromParams_box",
    "title": "Building and viewing a box-shaped SceneModel, from JSON",
    "description": "This tutorial covers how to use the xeokit SDK to create and display a box-shaped SceneModel from JSON",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_fromParams_box_compressedGeometry": {
    "id": "SceneModel_fromParams_box_compressedGeometry",
    "title": "Create a 3D cube from JSON, using compressed geometry",
    "description": "Using the xeokit SDK to create and view a box-shaped model, from JSON parameters containing compressed geometry",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_fromParams_geometries": {
    "id": "SceneModel_fromParams_geometries",
    "title": "Creating Various Geometries, from JSON",
    "description": "Using the xeokit SDK to build and view a model containing various geometry types, from JSON",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_fromParams_streamable_geometries": {
    "id": "SceneModel_fromParams_streamable_geometries",
    "title": "Using the xeokit SDK to build and view a SceneModel containing various geometry types, from JSON",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_fromParams_table": {
    "id": "SceneModel_fromParams_table",
    "title": "Building and viewing a table-shaped SceneModel, from JSON",
    "description": "Using the xeokit SDK to build and view a table-shaped SceneModel, from JSON",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_fromParams_triangle": {
    "id": "SceneModel_fromParams_triangle",
    "title": "Building and viewing a simple SceneModel, from JSON",
    "description": "Using the xeokit SDK to build and view a simple model, from JSON",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "SceneModel_retainedFalse": {
    "id": "SceneModel_retainedFalse",
    "title": "Building a model without retaining geometry in Browser memory",
    "description": "Using the xeokit SDK to build and view a model, without retaining geometry in Browser memory",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "TreeView_AggregationHierarchy": {
    "id": "TreeView_AggregationHierarchy",
    "title": "Using a TreeView configured with AggregationHierarchy",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false
  },
  "ViewLayer_auto": {
    "id": "ViewLayer_auto",
    "title": "Creating a Viewer with automatic ViewLayers",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "ViewLayer_manual": {
    "id": "ViewLayer_manual",
    "title": "Creating a Viewer with manual ViewLayers",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "ViewLayer_multiView": {
    "id": "ViewLayer_multiView",
    "title": "Creating a Viewer with multiple Views and ViewLayers",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "threeCanvasPage"
  },
  "ViewLayer_multiView_lighting": {
    "id": "ViewLayer_multiView_lighting",
    "title": "Creating a Viewer with multiple Views and light sources",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "threeCanvasPage"
  },
  "ViewLayer_multiView_multiModels": {
    "id": "ViewLayer_multiView_multiModels",
    "title": "Creating a Viewer with multiple Views and ViewLayers",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "threeCanvasPage"
  },
  "View_multiView_SceneModel_build_table": {
    "id": "View_multiView_SceneModel_build_table",
    "title": "Building a table-shaped SceneModel in multiple Views",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "threeCanvasPage"
  },
  "View_multiView_drawBox": {
    "id": "View_multiView_drawBox",
    "title": "Building a box-shaped SceneModel in multiple Views",
    "description": "Using the xeokit SDK to build a box-shaped 3D model and view it within multiple canvases in the browser",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "threeCanvasPage"
  },
  "View_multiView_loadWebIFC": {
    "id": "View_multiView_loadWebIFC",
    "title": "Viewing an IFC model in multiple Views",
    "description": "Using the xeokit SDK to view an IFC file within multiple canvases in the browser",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "threeCanvasPage"
  },
  "View_multiView_renderModes": {
    "id": "View_multiView_renderModes",
    "title": "Viewing an IFC model in multiple Views, with different render modes",
    "description": "Using the xeokit SDK to view an IFC model in multiple canvases, each canvas configured in its own render mode",
    "isTutorial": false,
    "isVisualTest": true
  },
  "View_pick_canvasPos": {
    "id": "View_pick_canvasPos",
    "title": "Picking an object with the mouse",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "View_worldAxis_SceneModel": {
    "id": "View_worldAxis_SceneModel",
    "title": "Viewing a SceneModel with +Z configured as up",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "View_worldAxis_loadCityJSON": {
    "id": "View_worldAxis_loadCityJSON",
    "title": "Viewing a CityJSON model with +Z configured as up direction",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true
  },
  "Viewer_drawTriangle_getEvents": {
    "id": "Viewer_drawTriangle_getEvents",
    "title": "Drawing a triangle, logging all events",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "Viewer_fromParams": {
    "id": "Viewer_fromParams",
    "title": "Configuring a Viewer with ViewerParams; Creating a new View",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "Viewer_fromParams_existingView": {
    "id": "Viewer_fromParams_existingView",
    "title": "Configuring a Viewer with ViewerParams; Updating a pre-existing View",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  },
  "Viewer_getCapabilities": {
    "id": "Viewer_getCapabilities",
    "title": "Querying Viewer capabilities",
    "description": "",
    "isTutorial": true,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "Viewer_toParams": {
    "id": "Viewer_toParams",
    "title": "Saving a Viewer Configuration to ViewParams",
    "description": "",
    "isTutorial": false,
    "isVisualTest": false,
    "template": "basicPage"
  },
  "Viewer_viewDotBIM": {
    "id": "Viewer_viewDotBIM",
    "title": "Viewing a .BIM model and hiding IfcSpaces",
    "description": "",
    "isTutorial": false,
    "isVisualTest": true,
    "template": "basicPage"
  }
}