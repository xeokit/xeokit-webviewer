{
  "title": "Build and view a SceneModel containing points geometry",
  "summary": "Create a Viewer with a WebGLRenderer, a Scene and one View. In the Scene, build a SceneModel with a SceneObject, a SceneMesh, and a SceneGeometry with points primitives.",
  "id": "SceneModel_build_points",
  "template": "basicPage",
  "type": "example",
  "visualTest": true,
  "steps": [
    "Import the modules we need",
    "Create a Scene to hold geometry and materials",
    "Create a WebGLRenderer to use the browser's WebGL API for 3D graphics",
    "Create a Viewer that views our Scene using the WebGLRenderer. Note that the\nScene and WebGLRenderer can only be attached to one Viewer at a time.",
    "Ignore the DemoHelper",
    "Create a single View that renders to a canvas in the page",
    "Add a CameraControl to interactively control the Camera with keyboard,\nmouse and touch input",
    "Within the Scene, create a SceneModel.",
    "Within the SceneModel, create a SceneObject with a SceneMesh that\ninstances a SceneGeometry that defines a set of 3D points. The SceneMesh\nhas a 4x4 matrix, which we compose using buildMat4, to specify the modeling\ntransformation that it applies to the SceneGeometry vertex positions to\nposition them within the Viewer's World coordinate system.",
    "Build the SceneModel, causing the 3D points to appear\nin the View's canvas.",
    "At this stage, the View will contain a single ViewObject that has the same ID as the SceneObject. Through\nthe ViewObject, we can now update the appearance of our 3D points in that View."
  ]
}