{
  "AABB3ToOBB3": {
    "summary": "Converts an axis-aligned bounding box (AABB) into an oriented bounding box (OBB)\nconsisting of eight 3D corner positions.",
    "path": "/api-docs#/docs/api/functions/boundaries.AABB3ToOBB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "addVec3": {
    "summary": "Adds one three-element vector to another.",
    "path": "/api-docs#/docs/api/functions/matrix.addVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "addVec3Scalar": {
    "summary": "Adds a scalar value to each element of a three-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.addVec3Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "addVec4": {
    "summary": "Adds two 4D vectors element-wise.",
    "path": "/api-docs#/docs/api/functions/matrix.addVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "addVec4Scalar": {
    "summary": "Adds a scalar value to each element of a four-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.addVec4Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "AlphaFormat": {
    "summary": "Texture sampling mode that discards the ````RGBA```` components and just reads the ````A```` component.",
    "path": "/api-docs#/docs/api/variables/constants.AlphaFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "AmbientLight": {
    "summary": "An ambient light source within a View.",
    "path": "/api-docs#/docs/api/classes/viewer.AmbientLight.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "AmbientLightParams": {
    "summary": "Parameters for an AmbientLight.",
    "path": "/api-docs#/docs/api/interfaces/viewer.AmbientLightParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "angleAxisToQuaternion": {
    "summary": "Converts an angle-axis rotation representation into a quaternion.",
    "path": "/api-docs#/docs/api/functions/matrix.angleAxisToQuaternion.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "angleVec3": {
    "summary": "Gets the angle between two vectors in radians.",
    "path": "/api-docs#/docs/api/functions/matrix.angleVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "apply": {
    "summary": "Add properties of o to o2, overwriting them on o2 if already there.",
    "path": "/api-docs#/docs/api/functions/utils.apply.html",
    "kind": "function",
    "namespace": "utils"
  },
  "apply2": {
    "summary": "Add non-null/defined properties of o to o2.",
    "path": "/api-docs#/docs/api/functions/utils.apply2.html",
    "kind": "function",
    "namespace": "utils"
  },
  "applyIf": {
    "summary": "Add properties of o to o2 where undefined or null on o2.",
    "path": "/api-docs#/docs/api/functions/utils.applyIf.html",
    "kind": "function",
    "namespace": "utils"
  },
  "AZERTYLayout": {
    "summary": "AZERTY keyboard layout.",
    "path": "/api-docs#/docs/api/variables/constants.AZERTYLayout.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "b2": {
    "summary": "Computes the full quadratic Bézier curve using the control points p0, p1, and p2.",
    "path": "/api-docs#/docs/api/functions/curves.b2.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b2p0": {
    "summary": "Computes the quadratic Bézier curve function b2p0.",
    "path": "/api-docs#/docs/api/functions/curves.b2p0.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b2p1": {
    "summary": "Computes the quadratic Bézier curve function b2p1.",
    "path": "/api-docs#/docs/api/functions/curves.b2p1.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b2p2": {
    "summary": "Computes the quadratic Bézier curve function b2p2.",
    "path": "/api-docs#/docs/api/functions/curves.b2p2.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b3": {
    "summary": "Computes the full cubic Bézier curve using the control points p0, p1, p2, and p3.",
    "path": "/api-docs#/docs/api/functions/curves.b3.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b3p0": {
    "summary": "Computes the cubic Bézier curve function b3p0.",
    "path": "/api-docs#/docs/api/functions/curves.b3p0.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b3p1": {
    "summary": "Computes the cubic Bézier curve function b3p1.",
    "path": "/api-docs#/docs/api/functions/curves.b3p1.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b3p2": {
    "summary": "Computes the cubic Bézier curve function b3p2.",
    "path": "/api-docs#/docs/api/functions/curves.b3p2.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b3p3": {
    "summary": "Computes the cubic Bézier curve function b3p3.",
    "path": "/api-docs#/docs/api/functions/curves.b3p3.html",
    "kind": "function",
    "namespace": "curves"
  },
  "b64": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.b64.html",
    "kind": "function",
    "namespace": "utils"
  },
  "BasicAggregation": {
    "summary": "A generic aggregation relationship between two generic CityJSON entities.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BasicAggregation.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BasicEntity": {
    "summary": "Represents a generic entity.",
    "path": "/api-docs#/docs/api/variables/basictypes.BasicEntity.html",
    "kind": "variable",
    "namespace": "basictypes"
  },
  "BCFBitmap": {
    "summary": "BCF bitmap.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFBitmap.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFClippingPlane": {
    "summary": "BCF clipping plane.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFClippingPlane.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFColoringComponent": {
    "summary": "A BCF coloring component.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFColoringComponent.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFComponent": {
    "summary": "A BCF component.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFComponent.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFComponents": {
    "summary": "Visual states of BCF components.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFComponents.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFLine": {
    "summary": "BCF line segment.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFLine.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFOrthogonalCamera": {
    "summary": "BCF orthogonal camera.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFOrthogonalCamera.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFPerspectiveCamera": {
    "summary": "BCF perspective camera.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFPerspectiveCamera.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFSelectionComponent": {
    "summary": "BCF selection component.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFSelectionComponent.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFSnapshot": {
    "summary": "A bitmap snapshot of the viewpoint.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFSnapshot.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFTranslucencyComponent": {
    "summary": "BCF translucency components.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFTranslucencyComponent.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFVector": {
    "summary": "BCF vector.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFVector.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFViewpoint": {
    "summary": "Represents a BIM Collaboration Format (BCF) viewpoint.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFViewpoint.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFViewSetupHints": {
    "summary": "View setup hints.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFViewSetupHints.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "BCFVisibilityComponent": {
    "summary": "BCF visibility component.",
    "path": "/api-docs#/docs/api/interfaces/bcf.BCFVisibilityComponent.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "Bridge": {
    "summary": "This CityJSON type represents a bridge, which can have attributes such as length, height, and type of bridge.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.Bridge.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BridgeConstructiveElement": {
    "summary": "This CityJSON type represents an essential structural element of a bridge.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BridgeConstructiveElement.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BridgeFurniture": {
    "summary": "This CityJSON type represents equipment for occupant use within a bridge, usually not fixed to the structure.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BridgeFurniture.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BridgeInstallation": {
    "summary": "This CityJSON type represents a permanent part of a bridge (inside and/or outside) that does not have the significance of a BridgePart.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BridgeInstallation.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BridgePart": {
    "summary": "This CityJSON type represents a physical or functional subdivision of a bridge.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BridgePart.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BridgeRoom": {
    "summary": "This CityJSON type represents a space within a bridge or bridge part intended for human occupancy (e.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BridgeRoom.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "buildBoxGeometry": {
    "summary": "Creates box-shaped geometry arrays.",
    "path": "/api-docs#/docs/api/functions/procgen.buildBoxGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "buildBoxLinesGeometry": {
    "summary": "Creates a box-shaped wireframe geometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildBoxLinesGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "buildCylinderGeometry": {
    "summary": "Creates a cylinder-shaped geometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildCylinderGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "buildGridGeometry": {
    "summary": "Creates a grid-shaped SceneGeometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildGridGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "Building": {
    "summary": "This CityJSON type represents a building, which can contain one or more \"BuildingPart\" objects.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.Building.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingConstructiveElement": {
    "summary": "This CityJSON type represents an essential structural element of a building.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingConstructiveElement.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingFurniture": {
    "summary": "This CityJSON type represents equipment for occupant use within a building, usually not fixed to the structure.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingFurniture.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingInstallation": {
    "summary": "This CityJSON type represents a permanent part of a building (inside and/or outside) that does not have the significance of a BuildingPart.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingInstallation.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingPart": {
    "summary": "This CityJSON type represents a part of a building, such as a wing or a tower.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingPart.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingRoom": {
    "summary": "This CityJSON type represents a space within a building or building part intended for human occupancy or storage.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingRoom.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingStorey": {
    "summary": "This CityJSON type represents a horizontal section of a building.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingStorey.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "BuildingUnit": {
    "summary": "This CityJSON type represents a logical subdivision of a building, often defined by function, ownership, management, or accessibility.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.BuildingUnit.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "buildMat4": {
    "summary": "Helper function to build 4x4 transform matrices.",
    "path": "/api-docs#/docs/api/functions/scene.buildMat4.html",
    "kind": "function",
    "namespace": "scene"
  },
  "buildPlaneGeometry": {
    "summary": "Creates a plane-shaped SceneGeometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildPlaneGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "buildSphereGeometry": {
    "summary": "Creates a sphere-shaped SceneGeometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildSphereGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "buildTorusGeometry": {
    "summary": "Creates a torus-shaped SceneGeometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildTorusGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "buildVectorTextGeometry": {
    "summary": "Creates wireframe vector text as a SceneGeometry.",
    "path": "/api-docs#/docs/api/functions/procgen.buildVectorTextGeometry.html",
    "kind": "function",
    "namespace": "procgen"
  },
  "ByteType": {
    "summary": "Signed 8-bit integer type.",
    "path": "/api-docs#/docs/api/variables/constants.ByteType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Cache": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/utils.Cache.html",
    "kind": "variable",
    "namespace": "utils"
  },
  "Camera": {
    "summary": "Controls the viewpoint and projection for a View.",
    "path": "/api-docs#/docs/api/classes/viewer.Camera.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "CameraControl": {
    "summary": "Mouse and touch controller for a Viewer's Camera.",
    "path": "/api-docs#/docs/api/classes/cameracontrol.CameraControl.html",
    "kind": "class",
    "namespace": "cameracontrol"
  },
  "CameraControlParams": {
    "summary": "Configuration options for CameraControl.",
    "path": "/api-docs#/docs/api/interfaces/cameracontrol.CameraControlParams.html",
    "kind": "interface",
    "namespace": "cameracontrol"
  },
  "CameraFlightAnimation": {
    "summary": "Animates a View's Camera to look at specified objects, boundaries or locations.",
    "path": "/api-docs#/docs/api/classes/cameraflight.CameraFlightAnimation.html",
    "kind": "class",
    "namespace": "cameraflight"
  },
  "CameraParams": {
    "summary": "Parameters for a Camera.",
    "path": "/api-docs#/docs/api/interfaces/viewer.CameraParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "canvasPosToWorldRay": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/matrix.canvasPosToWorldRay.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "Capabilities": {
    "summary": "A set of capability flags.",
    "path": "/api-docs#/docs/api/interfaces/core.Capabilities.html",
    "kind": "interface",
    "namespace": "core"
  },
  "catmullRomInterpolate": {
    "summary": "Performs Catmull-Rom interpolation on a curve.",
    "path": "/api-docs#/docs/api/functions/curves.catmullRomInterpolate.html",
    "kind": "function",
    "namespace": "curves"
  },
  "CentimetersUnit": {
    "summary": "Centimeters unit of measurement.",
    "path": "/api-docs#/docs/api/variables/constants.CentimetersUnit.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "CityFurniture": {
    "summary": "This CityJSON type represents various types of city furniture, such as benches, trash cans, and street lamps.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.CityFurniture.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "CityObjectGroup": {
    "summary": "This CityJSON type represents a group of other CityObjects.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.CityObjectGroup.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "clamp": {
    "summary": "Clamps a value to the given range.",
    "path": "/api-docs#/docs/api/functions/math.clamp.html",
    "kind": "function",
    "namespace": "math"
  },
  "ClampToEdgeWrapping": {
    "summary": "Texture wrapping mode in which the last pixel of the texture stretches to the edge of the mesh.",
    "path": "/api-docs#/docs/api/variables/constants.ClampToEdgeWrapping.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "clone": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.clone.html",
    "kind": "function",
    "namespace": "utils"
  },
  "collapseAABB3": {
    "summary": "Collapses an AABB3, resetting it to its maximum bounds.",
    "path": "/api-docs#/docs/api/functions/boundaries.collapseAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "compareMat4": {
    "summary": "Compares two 4x4 matrices for equality.",
    "path": "/api-docs#/docs/api/functions/matrix.compareMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "compareVec3": {
    "summary": "Returns true if the two 3-element vectors are the same.",
    "path": "/api-docs#/docs/api/functions/matrix.compareVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "Component": {
    "summary": "Common base class for xeokit SDK components.",
    "path": "/api-docs#/docs/api/classes/core.Component.html",
    "kind": "class",
    "namespace": "core"
  },
  "composeMat4": {
    "summary": "Composes a 4x4 matrix from position, quaternion, and scale.",
    "path": "/api-docs#/docs/api/functions/matrix.composeMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "composeMat4Euler": {
    "summary": "Composes a 4x4 matrix from position, Euler rotation angles, and scale.",
    "path": "/api-docs#/docs/api/functions/matrix.composeMat4Euler.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "compressGeometryParams": {
    "summary": "Compresses a SceneGeometryParams into a SceneGeometryCompressedParams.",
    "path": "/api-docs#/docs/api/functions/scene.compressGeometryParams.html",
    "kind": "function",
    "namespace": "scene"
  },
  "compressGuid": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.compressGuid.html",
    "kind": "function",
    "namespace": "utils"
  },
  "compressNormals": {
    "summary": "Compresses a flat array of 3D normal vectors using oct-encoding.",
    "path": "/api-docs#/docs/api/functions/compression.compressNormals.html",
    "kind": "function",
    "namespace": "compression"
  },
  "compressPoint3WithAABB3": {
    "summary": "Compresses a single 3D point (p) within a specified axis-aligned bounding box (AABB) and stores the result in dest.",
    "path": "/api-docs#/docs/api/functions/compression.compressPoint3WithAABB3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "compressPositions3": {
    "summary": "Compresses a flat array of 3D positions into a quantized format, and computes the matrix for decompressing\nback to the original range.",
    "path": "/api-docs#/docs/api/functions/compression.compressPositions3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "compressRGBColors": {
    "summary": "Compresses a flat array of floating-point RGB or RGBA colors into a Uint16Array.",
    "path": "/api-docs#/docs/api/functions/compression.compressRGBColors.html",
    "kind": "function",
    "namespace": "compression"
  },
  "compressUVs": {
    "summary": "Compresses a flat array of UV coordinates into a quantized representation.",
    "path": "/api-docs#/docs/api/functions/compression.compressUVs.html",
    "kind": "function",
    "namespace": "compression"
  },
  "concat": {
    "summary": "Returns the concatenation of two typed arrays.",
    "path": "/api-docs#/docs/api/functions/utils.concat.html",
    "kind": "function",
    "namespace": "utils"
  },
  "conjugateQuat": {
    "summary": "Computes the conjugate of a quaternion.",
    "path": "/api-docs#/docs/api/functions/matrix.conjugateQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "containsAABB2": {
    "summary": "Checks if one AABB2 fully contains another.",
    "path": "/api-docs#/docs/api/functions/boundaries.containsAABB2.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "containsAABB2Point2": {
    "summary": "Tests if a 2D AABB contains a 2D point.",
    "path": "/api-docs#/docs/api/functions/boundaries.containsAABB2Point2.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "containsAABB3": {
    "summary": "Checks if one AABB3 fully contains another.",
    "path": "/api-docs#/docs/api/functions/boundaries.containsAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "containsAABB3Point3": {
    "summary": "Tests if a 3D AABB contains a 3D point.",
    "path": "/api-docs#/docs/api/functions/boundaries.containsAABB3Point3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "ContextMenu": {
    "summary": "An HTML context menu.",
    "path": "/api-docs#/docs/api/classes/contextmenu.ContextMenu.html",
    "kind": "class",
    "namespace": "contextmenu"
  },
  "convertIfc2gltfManifest": {
    "summary": "Converts a file manifest from Ifc2gltfManifestParams to\nModelChunksManifestParams.",
    "path": "/api-docs#/docs/api/functions/ifc2gltf2xgf.convertIfc2gltfManifest.html",
    "kind": "function",
    "namespace": "ifc2gltf2xgf"
  },
  "convertMetaModel": {
    "summary": "Converts a MetaModelParams to a DataModelParams.",
    "path": "/api-docs#/docs/api/functions/metamodel.convertMetaModel.html",
    "kind": "function",
    "namespace": "metamodel"
  },
  "copy": {
    "summary": "Returns a shallow copy.",
    "path": "/api-docs#/docs/api/functions/utils.copy.html",
    "kind": "function",
    "namespace": "utils"
  },
  "createAABB2": {
    "summary": "Creates a new 2D axis-aligned bounding box (AABB2).",
    "path": "/api-docs#/docs/api/functions/boundaries.createAABB2.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "createAABB3": {
    "summary": "Creates a new 3D axis-aligned bounding box (AABB3).",
    "path": "/api-docs#/docs/api/functions/boundaries.createAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "createAABB3Int16": {
    "summary": "Creates a new 3D axis-aligned bounding box (AABB3) with Int16 values.",
    "path": "/api-docs#/docs/api/functions/boundaries.createAABB3Int16.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "createKdTree2FromSceneObjectVerts": {
    "summary": "A k-d tree to accelerate intersection and nearest-neighbour tests on the projected\n2D canvas positions of scene!SceneObject geometry vertices.",
    "path": "/api-docs#/docs/api/functions/kdtree2.createKdTree2FromSceneObjectVerts.html",
    "kind": "function",
    "namespace": "kdtree2"
  },
  "createMat3": {
    "summary": "Returns a new, uninitialized 3x3 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.createMat3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "createMat4": {
    "summary": "Returns a new, uninitialized 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.createMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "createOBB2": {
    "summary": "Creates a new 2D oriented bounding box (OBB2).",
    "path": "/api-docs#/docs/api/functions/boundaries.createOBB2.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "createOBB3": {
    "summary": "Creates a new 3D oriented bounding box (OBB3).",
    "path": "/api-docs#/docs/api/functions/boundaries.createOBB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "createPositions3DecompressMat4": {
    "summary": "Creates a 4x4 matrix for decompressing 3D positions based on a given axis-aligned bounding box (AABB).",
    "path": "/api-docs#/docs/api/functions/compression.createPositions3DecompressMat4.html",
    "kind": "function",
    "namespace": "compression"
  },
  "createPrimsKdTree3": {
    "summary": "Creates a KdTree3 that indexes the 3D primitives in the given arrays.",
    "path": "/api-docs#/docs/api/functions/kdtree3.createPrimsKdTree3.html",
    "kind": "function",
    "namespace": "kdtree3"
  },
  "createRTCModelMat": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/rtc.createRTCModelMat.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "createRTCViewMat": {
    "summary": "Creates a view matrix that transforms coordinates from RTC to View-space.",
    "path": "/api-docs#/docs/api/functions/rtc.createRTCViewMat.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "createSceneObjectPrimsKdTree3": {
    "summary": "Creates a KdTree3 that indexes the primitives belonging to the given SceneObjects in 3D World-space.",
    "path": "/api-docs#/docs/api/functions/kdtree3.createSceneObjectPrimsKdTree3.html",
    "kind": "function",
    "namespace": "kdtree3"
  },
  "createSceneObjectsKdTree3": {
    "summary": "Indexes the given SceneObjects in a k-d tree for efficient collision detection.",
    "path": "/api-docs#/docs/api/functions/kdtree3.createSceneObjectsKdTree3.html",
    "kind": "function",
    "namespace": "kdtree3"
  },
  "createSphere3": {
    "summary": "Creates a new 3D bounding sphere.",
    "path": "/api-docs#/docs/api/functions/boundaries.createSphere3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "createUUID": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.createUUID.html",
    "kind": "function",
    "namespace": "utils"
  },
  "createVec2": {
    "summary": "Creates a new 2D vector, uninitialized.",
    "path": "/api-docs#/docs/api/functions/matrix.createVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "createVec3": {
    "summary": "Creates a new 3D vector, uninitialized.",
    "path": "/api-docs#/docs/api/functions/matrix.createVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "createVec4": {
    "summary": "Creates a new 4D vector, uninitialized.",
    "path": "/api-docs#/docs/api/functions/matrix.createVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "cross3Vec3": {
    "summary": "Returns the cross product of two three-element vectors.",
    "path": "/api-docs#/docs/api/functions/matrix.cross3Vec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "cross3Vec4": {
    "summary": "Returns the cross product of two four-element vectors (ignores the w component).",
    "path": "/api-docs#/docs/api/functions/matrix.cross3Vec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "CustomProjection": {
    "summary": "Configures a custom projection for a Camera .",
    "path": "/api-docs#/docs/api/classes/viewer.CustomProjection.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "CustomProjectionParams": {
    "summary": "Parameters for a CustomProjection.",
    "path": "/api-docs#/docs/api/interfaces/viewer.CustomProjectionParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "CustomProjectionType": {
    "summary": "Custom projection type.",
    "path": "/api-docs#/docs/api/variables/constants.CustomProjectionType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Data": {
    "summary": "A federated entity-relationship semantic data model.",
    "path": "/api-docs#/docs/api/classes/data.Data.html",
    "kind": "class",
    "namespace": "data"
  },
  "DataModel": {
    "summary": "Represents an entity-relationship data model.",
    "path": "/api-docs#/docs/api/classes/data.DataModel.html",
    "kind": "class",
    "namespace": "data"
  },
  "DataModelContentParams": {
    "summary": "Parameters for populating a DataModel using DataModel.",
    "path": "/api-docs#/docs/api/interfaces/data.DataModelContentParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "DataModelParams": {
    "summary": "Parameters used to define a DataModel.",
    "path": "/api-docs#/docs/api/interfaces/data.DataModelParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "DataObject": {
    "summary": "Represents an object within a DataModel.",
    "path": "/api-docs#/docs/api/classes/data.DataObject.html",
    "kind": "class",
    "namespace": "data"
  },
  "DataObjectParams": {
    "summary": "Parameters for creating a DataObject.",
    "path": "/api-docs#/docs/api/interfaces/data.DataObjectParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "decomposeMat4": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/matrix.decomposeMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "decompressAABB3WithAABB3": {
    "summary": "Decompresses an AABB (Axis-Aligned Bounding Box) using another AABB as reference for scaling and offset.",
    "path": "/api-docs#/docs/api/functions/compression.decompressAABB3WithAABB3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressAABB3WithMat4": {
    "summary": "Decompresses an AABB (Axis-Aligned Bounding Box) using a transformation matrix.",
    "path": "/api-docs#/docs/api/functions/compression.decompressAABB3WithMat4.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressNormal": {
    "summary": "Decompresses a single oct-encoded normal vector into a 3D unit vector.",
    "path": "/api-docs#/docs/api/functions/compression.decompressNormal.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressNormals": {
    "summary": "Decompresses an array of oct-encoded normal vectors into 3D unit vectors.",
    "path": "/api-docs#/docs/api/functions/compression.decompressNormals.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressPoint3WithAABB3": {
    "summary": "Decompresses a 3D point (position) based on a given AABB (Axis-Aligned Bounding Box).",
    "path": "/api-docs#/docs/api/functions/compression.decompressPoint3WithAABB3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressPoint3WithMat4": {
    "summary": "Decompresses a 3D point (position) using a given 4x4 matrix (decompressMatrix).",
    "path": "/api-docs#/docs/api/functions/compression.decompressPoint3WithMat4.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressPositions3WithAABB3": {
    "summary": "Decompresses a flat array of quantized 3D positions using an axis-aligned bounding box (AABB) to scale and offset.",
    "path": "/api-docs#/docs/api/functions/compression.decompressPositions3WithAABB3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressPositions3WithMat4": {
    "summary": "Decompresses a flat array of quantized 3D positions using a 4x4 matrix for scaling and offsetting.",
    "path": "/api-docs#/docs/api/functions/compression.decompressPositions3WithMat4.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressUV": {
    "summary": "Decompresses UV coordinates using a transformation matrix.",
    "path": "/api-docs#/docs/api/functions/compression.decompressUV.html",
    "kind": "function",
    "namespace": "compression"
  },
  "decompressUVs": {
    "summary": "Decompresses an array of UV coordinates using a transformation matrix.",
    "path": "/api-docs#/docs/api/functions/compression.decompressUVs.html",
    "kind": "function",
    "namespace": "compression"
  },
  "DEFAULT_SAVED_XGF_VERSION": {
    "summary": "The default XGF version saved by saveXGF.",
    "path": "/api-docs#/docs/api/variables/xgf.DEFAULT_SAVED_XGF_VERSION.html",
    "kind": "variable",
    "namespace": "xgf"
  },
  "DefaultLoadingManager": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/utils.DefaultLoadingManager.html",
    "kind": "variable",
    "namespace": "utils"
  },
  "DEGTORAD": {
    "summary": "Converts degrees to radians.",
    "path": "/api-docs#/docs/api/variables/math.DEGTORAD.html",
    "kind": "variable",
    "namespace": "math"
  },
  "DepthFormat": {
    "summary": "Texture sampling mode that reads each element as a single depth value, converts it to a float and clamps to ````[0,1]````.",
    "path": "/api-docs#/docs/api/variables/constants.DepthFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "DepthStencilFormat": {
    "summary": "Texture sampling mode that.",
    "path": "/api-docs#/docs/api/variables/constants.DepthStencilFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "determinantMat4": {
    "summary": "Computes the determinant of a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.determinantMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "DirLight": {
    "summary": "A directional light source within a View.",
    "path": "/api-docs#/docs/api/classes/viewer.DirLight.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "DirLightParams": {
    "summary": "Parameters for a DirLight.",
    "path": "/api-docs#/docs/api/interfaces/viewer.DirLightParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "distVec2": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/matrix.distVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "distVec3": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/matrix.distVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "divScalarVec3": {
    "summary": "Divides a scalar by a three-element vector, returning a new vector.",
    "path": "/api-docs#/docs/api/functions/matrix.divScalarVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "divScalarVec4": {
    "summary": "Divides a scalar by a four-element vector, returning a new vector.",
    "path": "/api-docs#/docs/api/functions/matrix.divScalarVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "divVec3": {
    "summary": "Divides one three-element vector by another.",
    "path": "/api-docs#/docs/api/functions/matrix.divVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "divVec3Scalar": {
    "summary": "Divides a three-element vector by a scalar.",
    "path": "/api-docs#/docs/api/functions/matrix.divVec3Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "divVec4": {
    "summary": "Divides one four-element vector by another.",
    "path": "/api-docs#/docs/api/functions/matrix.divVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "divVec4Scalar": {
    "summary": "Divides a four-element vector by a scalar.",
    "path": "/api-docs#/docs/api/functions/matrix.divVec4Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "dotVec2": {
    "summary": "Returns the dot product of two two-element vectors.",
    "path": "/api-docs#/docs/api/functions/matrix.dotVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "dotVec3": {
    "summary": "Calculates and returns the dot product of two 3D vectors.",
    "path": "/api-docs#/docs/api/functions/matrix.dotVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "dotVec4": {
    "summary": "Returns the dot product of two four-element vectors.",
    "path": "/api-docs#/docs/api/functions/matrix.dotVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "DynamicDraw": {
    "summary": "Indicates scene content that changes frequently.",
    "path": "/api-docs#/docs/api/variables/constants.DynamicDraw.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Edges": {
    "summary": "Configures edge enhancement effect for a View.",
    "path": "/api-docs#/docs/api/classes/viewer.Edges.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "EdgesParams": {
    "summary": "Parameters for a View's edge enhancement effect, Edges.",
    "path": "/api-docs#/docs/api/interfaces/viewer.EdgesParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "EmphasisMaterial": {
    "summary": "Configures the appearance of ViewObjects when they are xrayed, highlighted or selected.",
    "path": "/api-docs#/docs/api/classes/viewer.EmphasisMaterial.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "EmphasisMaterialParams": {
    "summary": "Parameters for a View's selected, highlighted and x-ray effects.",
    "path": "/api-docs#/docs/api/interfaces/viewer.EmphasisMaterialParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "eulerToQuat": {
    "summary": "Initializes a quaternion from Euler angles.",
    "path": "/api-docs#/docs/api/functions/matrix.eulerToQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "EventEmitter": {
    "summary": "Event emitter.",
    "path": "/api-docs#/docs/api/classes/core.EventEmitter.html",
    "kind": "class",
    "namespace": "core"
  },
  "expandAABB2": {
    "summary": "Expands the first 2D AABB to enclose the second AABB if required.",
    "path": "/api-docs#/docs/api/functions/boundaries.expandAABB2.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "expandAABB2Point2": {
    "summary": "Expands an AABB to enclose a given 2D point if required.",
    "path": "/api-docs#/docs/api/functions/boundaries.expandAABB2Point2.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "expandAABB3": {
    "summary": "Expands the first AABB to enclose the second AABB if required.",
    "path": "/api-docs#/docs/api/functions/boundaries.expandAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "expandAABB3Point3": {
    "summary": "Expands an AABB to enclose a given 3D point if required.",
    "path": "/api-docs#/docs/api/functions/boundaries.expandAABB3Point3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "expandAABB3Points3": {
    "summary": "Expands an AABB to enclose multiple 3D points.",
    "path": "/api-docs#/docs/api/functions/boundaries.expandAABB3Points3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "FastRender": {
    "summary": "Fast rendering mode.",
    "path": "/api-docs#/docs/api/variables/constants.FastRender.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "FeetUnit": {
    "summary": "Feet unit of measurement.",
    "path": "/api-docs#/docs/api/variables/constants.FeetUnit.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "FileLoader": {
    "summary": "",
    "path": "/api-docs#/docs/api/classes/utils.FileLoader.html",
    "kind": "class",
    "namespace": "utils"
  },
  "findNodeOfType": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.findNodeOfType.html",
    "kind": "function",
    "namespace": "utils"
  },
  "FirstPersonNavigationMode": {
    "summary": "First-person navigation mode.",
    "path": "/api-docs#/docs/api/variables/constants.FirstPersonNavigationMode.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "FloatArrayParam": {
    "summary": "Represents an array of floating-point numbers.",
    "path": "/api-docs#/docs/api/types/math.FloatArrayParam.html",
    "kind": "type",
    "namespace": "math"
  },
  "FloatType": {
    "summary": "Signed 32-bit floating-point type.",
    "path": "/api-docs#/docs/api/variables/constants.FloatType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Frustum3": {
    "summary": "A 3D frustum defined by six planes.",
    "path": "/api-docs#/docs/api/classes/boundaries.Frustum3.html",
    "kind": "class",
    "namespace": "boundaries"
  },
  "frustumMat4": {
    "summary": "Returns a 4x4 perspective projection matrix based on the given frustum bounds.",
    "path": "/api-docs#/docs/api/functions/matrix.frustumMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "frustumMat4v": {
    "summary": "Returns a 4x4 perspective frustum projection matrix, defined by the given near and far planes and the frustum bounds.",
    "path": "/api-docs#/docs/api/functions/matrix.frustumMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "FrustumPlane3": {
    "summary": "A plane within a Frustum3.",
    "path": "/api-docs#/docs/api/classes/boundaries.FrustumPlane3.html",
    "kind": "class",
    "namespace": "boundaries"
  },
  "FrustumProjection": {
    "summary": "FrustumProjection-based perspective projection configuration for a Camera .",
    "path": "/api-docs#/docs/api/classes/viewer.FrustumProjection.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "FrustumProjectionParams": {
    "summary": "Parameters for a FrustumProjection.",
    "path": "/api-docs#/docs/api/interfaces/viewer.FrustumProjectionParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "FrustumProjectionType": {
    "summary": "Frustum3 projection type.",
    "path": "/api-docs#/docs/api/variables/constants.FrustumProjectionType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "geometricMeanVec2": {
    "summary": "Get the geometric mean of the vectors.",
    "path": "/api-docs#/docs/api/functions/matrix.geometricMeanVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "GeometryArrays": {
    "summary": "Geometry data arrays.",
    "path": "/api-docs#/docs/api/types/procgen.GeometryArrays.html",
    "kind": "type",
    "namespace": "procgen"
  },
  "GeometryHit": {
    "summary": "Represents an intersecting SceneGeometry within a RayPickResult.",
    "path": "/api-docs#/docs/api/interfaces/pick.GeometryHit.html",
    "kind": "interface",
    "namespace": "pick"
  },
  "GeometryView": {
    "summary": "The getSceneObjectGeometry passes an instance of GeometryView to its callback\nfor each SceneGeometry it visits.",
    "path": "/api-docs#/docs/api/interfaces/scene.GeometryView.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "getAABB3Area": {
    "summary": "Gets the area of an AABB.",
    "path": "/api-docs#/docs/api/functions/boundaries.getAABB3Area.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "getAABB3Center": {
    "summary": "Computes the center of a 3D axis-aligned bounding box (AABB3).",
    "path": "/api-docs#/docs/api/functions/boundaries.getAABB3Center.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "getAABB3Diag": {
    "summary": "Computes the diagonal length of a 3D axis-aligned bounding box (AABB3).",
    "path": "/api-docs#/docs/api/functions/boundaries.getAABB3Diag.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "getAABB3DiagPoint": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/boundaries.getAABB3DiagPoint.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "getPlaneRTCPos": {
    "summary": "Calculates the position of a 3D plane relative to the RTC center.",
    "path": "/api-docs#/docs/api/functions/rtc.getPlaneRTCPos.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "getPositions3Center": {
    "summary": "Computes the center of a set of 3D positions stored in a flattened array.",
    "path": "/api-docs#/docs/api/functions/boundaries.getPositions3Center.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "getPositions3MinMax": {
    "summary": "Retrieves the minimum and maximum values for a set of 3D positions.",
    "path": "/api-docs#/docs/api/functions/compression.getPositions3MinMax.html",
    "kind": "function",
    "namespace": "compression"
  },
  "getSceneObjectGeometry": {
    "summary": "Gets the uncompressed, World-space geometry of each SceneGeometryBucket in each\nSceneGeometry in each SceneMesh in a SceneObject.",
    "path": "/api-docs#/docs/api/functions/scene.getSceneObjectGeometry.html",
    "kind": "function",
    "namespace": "scene"
  },
  "getUVBounds": {
    "summary": "Computes the minimum and maximum bounds for a flat array of UV coordinates.",
    "path": "/api-docs#/docs/api/functions/compression.getUVBounds.html",
    "kind": "function",
    "namespace": "compression"
  },
  "GIFMediaType": {
    "summary": "Media type for GIF images.",
    "path": "/api-docs#/docs/api/variables/constants.GIFMediaType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "HalfFloatType": {
    "summary": "Signed 16-bit half-precision floating-point type.",
    "path": "/api-docs#/docs/api/variables/constants.HalfFloatType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "httpRequest": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.httpRequest.html",
    "kind": "function",
    "namespace": "utils"
  },
  "identityMat3": {
    "summary": "Returns a 3x3 identity matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.identityMat3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "identityMat4": {
    "summary": "Returns a 4x4 identity matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.identityMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "identityQuat": {
    "summary": "Creates an identity quaternion.",
    "path": "/api-docs#/docs/api/functions/matrix.identityQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "Ifc2gltfManifestParams": {
    "summary": "Defines the format the glTF file manifests output by ifc2gltf.",
    "path": "/api-docs#/docs/api/classes/ifc2gltf2xgf.Ifc2gltfManifestParams.html",
    "kind": "class",
    "namespace": "ifc2gltf2xgf"
  },
  "IfcActionRequest": {
    "summary": "A request is the act or instance of asking for something, such as a request for information, bid submission, or performance of work.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcActionRequest.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcActor": {
    "summary": "The IfcActor defines all actors or human agents involved in a project during its full life cycle.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcActor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcActorRole": {
    "summary": "This entity indicates a role which is performed by an actor, either a person, an organization or a person related to an organization.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcActorRole.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcActuator": {
    "summary": "An actuator is a mechanical device for moving or controlling a mechanism or system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcActuator.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcActuatorType": {
    "summary": "The distribution control element type IfcActuatorType defines commonly shared information for occurrences of actuators.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcActuatorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAddress": {
    "summary": "This abstract entity represents various kinds of postal and telecom addresses.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAddress.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAdvancedBrep": {
    "summary": "An advanced B-rep is a boundary representation model in which all faces, edges and vertices are explicitly represented.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAdvancedBrep.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAdvancedBrepWithVoids": {
    "summary": "The IfcAdvancedBrepWithVoids is a specialization of an advanced B-rep which contains one or more voids in its interior.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAdvancedBrepWithVoids.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAdvancedFace": {
    "summary": "An advanced face is a specialization of a face surface that has to meet requirements on using particular topological and geometric representation items for the definition of the faces, edges and vertices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAdvancedFace.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAirTerminal": {
    "summary": "An air terminal is a terminating or origination point for the transfer of air between distribution system(s) and one or more spaces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAirTerminal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAirTerminalBox": {
    "summary": "An air terminal box typically participates in an HVAC duct distribution system and is used to control or modulate the amount of air delivered to its downstream ductwork.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAirTerminalBox.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAirTerminalBoxType": {
    "summary": "The flow controller type IfcAirTerminalBoxType defines commonly shared information for occurrences of air terminal boxes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAirTerminalBoxType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAirTerminalType": {
    "summary": "The flow terminal type IfcAirTerminalType defines commonly shared information for occurrences of air terminals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAirTerminalType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAirToAirHeatRecovery": {
    "summary": "An air-to-air heat recovery device employs a counter-flow heat exchanger between inbound and outbound air flow.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAirToAirHeatRecovery.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAirToAirHeatRecoveryType": {
    "summary": "The energy conversion device type IfcAirToAirHeatRecoveryType defines commonly shared information for occurrences of air to air heat recoverys.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAirToAirHeatRecoveryType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAlarm": {
    "summary": "An alarm is a device that signals the existence of a condition or situation that is outside the boundaries of normal expectation or that activates such a device.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAlarm.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAlarmType": {
    "summary": "The distribution control element type IfcAlarmType defines commonly shared information for occurrences of alarms.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAlarmType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAnnotation": {
    "summary": "An annotation is an information element within the geometric (and spatial) context of a project, that adds a note or meaning to the objects which constitutes the project model.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAnnotation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAnnotationFillArea": {
    "summary": "The IfcAnnotationFillArea defines an area by a definite OuterBoundary, that might include InnerBoundaries.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAnnotationFillArea.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcApplication": {
    "summary": "IfcApplication holds the information about an IFC compliant application developed by an application developer.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcApplication.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAppliedValue": {
    "summary": "This entity captures a value driven by a formula, with additional qualifications including unit basis, valid date range, and categorization.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAppliedValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcApproval": {
    "summary": "An IfcApproval represents information about approval processes such as for a plan, a design, a proposal, or a change order in a construction or facilities management project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcApproval.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcApprovalRelationship": {
    "summary": "An IfcApprovalRelationship associates approvals (one relating approval and one or more related approvals), each having different status or level as the approval process or the approved objects evolve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcApprovalRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcArbitraryClosedProfileDef": {
    "summary": "The closed profile IfcArbitraryClosedProfileDef defines an arbitrary two-dimensional profile for the use within the swept surface geometry, the swept area solid or a sectioned spine.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcArbitraryClosedProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcArbitraryOpenProfileDef": {
    "summary": "The open profile IfcArbitraryOpenProfileDef defines an arbitrary two-dimensional open profile for the use within the swept surface geometry.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcArbitraryOpenProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcArbitraryProfileDefWithVoids": {
    "summary": "The IfcArbitraryProfileDefWithVoids defines an arbitrary closed two-dimensional profile with holes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcArbitraryProfileDefWithVoids.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAsset": {
    "summary": "An asset is a uniquely identifiable grouping of elements acting as a single entity that has a financial value or that can be operated on as a single unit.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAsset.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAsymmetricIShapeProfileDef": {
    "summary": "IfcAsymmetricIShapeProfileDef defines a section profile that provides the defining parameters of a singly symmetric I-shaped section.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAsymmetricIShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAudioVisualAppliance": {
    "summary": "An audio-visual appliance is a device that displays, captures, transmits, or receives audio or video.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAudioVisualAppliance.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAudioVisualApplianceType": {
    "summary": "The flow terminal type IfcAudioVisualApplianceType defines commonly shared information for occurrences of audio visual appliances.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAudioVisualApplianceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAxis1Placement": {
    "summary": "The IfcAxis1Placement provides location and direction of a single axis.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAxis1Placement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAxis2Placement2D": {
    "summary": "The IfcAxis2Placement2D provides location and orientation to place items in a two-dimensional space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAxis2Placement2D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcAxis2Placement3D": {
    "summary": "The IfcAxis2Placement3D provides location and orientations to place items in a three-dimensional space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcAxis2Placement3D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBeam": {
    "summary": "An IfcBeam is a horizontal, or nearly horizontal, structural member that is capable of withstanding load primarily by resisting bending.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBeam.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBeamStandardCase": {
    "summary": "The standard beam, IfcBeamStandardCase, defines a beam with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBeamStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBeamType": {
    "summary": "The element type IfcBeamType defines commonly shared information for occurrences of beams.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBeamType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBlobTexture": {
    "summary": "An IfcBlobTexture provides a 2-dimensional distribution of the lighting parameters of a surface onto which it is mapped.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBlobTexture.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBlock": {
    "summary": "The IfcBlock is a Construction Solid SceneGeometry (CSG) 3D primitive.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBlock.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoiler": {
    "summary": "A boiler is a closed, pressure-rated vessel in which water or other fluid is heated using an energy source such as natural gas, heating oil, or electricity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoiler.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoilerType": {
    "summary": "The energy conversion device type IfcBoilerType defines commonly shared information for occurrences of boilers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoilerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBooleanClippingResult": {
    "summary": "A clipping result is defined as a special subtype of the general IfcBooleanResult.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBooleanClippingResult.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBooleanResult": {
    "summary": "The IfcBooleanResult is the result of applying a Boolean operation to two operands being solids.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBooleanResult.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundaryCondition": {
    "summary": "The abstract entity IfcBoundaryCondition is the supertype of all boundary conditions that can be applied to structural connection definitions, either directly for the connection (e.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundaryCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundaryCurve": {
    "summary": "An IfcBoundaryCurve defines a curve acting as the boundary of a surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundaryCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundaryEdgeCondition": {
    "summary": "Describes linearly elastic support conditions or connection conditions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundaryEdgeCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundaryFaceCondition": {
    "summary": "Describes linearly elastic support conditions or connection conditions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundaryFaceCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundaryNodeCondition": {
    "summary": "Describes linearly elastic support conditions or connection conditions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundaryNodeCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundaryNodeConditionWarping": {
    "summary": "Describes linearly elastic support conditions or connection conditions, including linearly elastic warping restraints.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundaryNodeConditionWarping.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundedCurve": {
    "summary": "An IfcBoundedCurve is a curve of finite length.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundedCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundedSurface": {
    "summary": "An IfcBoundedSurface is a surface of finite area.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundedSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoundingBox": {
    "summary": "The IfcBoundingBox defines an orthogonal box oriented parallel to the axes of the object coordinate system in which it is defined.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoundingBox.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBoxedHalfSpace": {
    "summary": "The IfcBoxedHalfSpace is used (as its supertype IfcHalfSpaceSolid) only within Boolean operations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBoxedHalfSpace.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBSplineCurve": {
    "summary": "The IfcBSplineCurve is a spline curve parameterized by spline functions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBSplineCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBSplineCurveWithKnots": {
    "summary": "The IfcBSplineCurveWithKnots is a spline curve parameterized by spline functions for which the knot values are explicitly given.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBSplineCurveWithKnots.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBSplineSurface": {
    "summary": "The IfcBSplineSurface is a general form of rational or polynomial parametric surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBSplineSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBSplineSurfaceWithKnots": {
    "summary": "The IfcBSplineSurfaceWithKnots is a general form of rational or polynomial parametric surface in which the knot values are explicitly given.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBSplineSurfaceWithKnots.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuilding": {
    "summary": "A building represents a structure that provides shelter for its occupants or contents and stands in one place.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuilding.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuildingElementPart": {
    "summary": "IfcBuildingElementPart represents major components as subordinate parts of a building element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuildingElementPart.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuildingElementPartType": {
    "summary": "The building element part type defines lists of commonly shared property set definitions and representation maps of parts of a building element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuildingElementPartType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuildingElementProxy": {
    "summary": "The IfcBuildingElementProxy is a proxy definition that provides the same functionality as subtypes of IfcBuildingElement, but without having a predefined meaning of the special type of building element, it represents.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuildingElementProxy.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuildingElementProxyType": {
    "summary": "IfcBuildingElementProxyType defines a list of commonly shared property set definitions of a building element proxy and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuildingElementProxyType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuildingStorey": {
    "summary": "The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuildingStorey.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBuildingSystem": {
    "summary": "A building system is a group by which building elements are grouped according to a kdtree3 function within the facility.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBuildingSystem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBurner": {
    "summary": "A burner is a device that converts fuel into heat through combustion.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBurner.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcBurnerType": {
    "summary": "The energy conversion device type IfcBurnerType defines commonly shared information for occurrences of burners.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcBurnerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableCarrierFitting": {
    "summary": "A cable carrier fitting is a fitting that is placed at junction or transition in a cable carrier system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableCarrierFitting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableCarrierFittingType": {
    "summary": "The flow fitting type IfcCableCarrierFittingType defines commonly shared information for occurrences of cable carrier fittings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableCarrierFittingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableCarrierSegment": {
    "summary": "A cable carrier segment is a flow segment that is specifically used to carry and support cabling.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableCarrierSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableCarrierSegmentType": {
    "summary": "The flow segment type IfcCableCarrierSegmentType defines commonly shared information for occurrences of cable carrier segments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableCarrierSegmentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableFitting": {
    "summary": "A cable fitting is a fitting that is placed at a junction, transition or termination in a cable system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableFitting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableFittingType": {
    "summary": "The flow fitting type IfcCableFittingType defines commonly shared information for occurrences of cable fittings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableFittingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableSegment": {
    "summary": "A cable segment is a flow segment used to carry electrical power, data, or telecommunications signals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCableSegmentType": {
    "summary": "The flow segment type IfcCableSegmentType defines commonly shared information for occurrences of cable segments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCableSegmentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianPoint": {
    "summary": "An IfcCartesianPoint defines a point by coordinates in an orthogonal, right-handed Cartesian coordinate system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianPoint.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianPointList": {
    "summary": "The IfcCartesianPointList is the abstract supertype of list of points.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianPointList.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianPointList2D": {
    "summary": "The IfcCartesianPointList2D defines an ordered collection of two-dimentional Cartesian points.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianPointList2D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianPointList3D": {
    "summary": "The IfcCartesianPointList3D defines an ordered collection of three-dimentional Cartesian points.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianPointList3D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianTransformationOperator": {
    "summary": "An IfcCartesianTransformationOperator defines an abstract supertype of different kinds of geometric transformations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianTransformationOperator.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianTransformationOperator2D": {
    "summary": "An IfcCartesianTransformationOperator2D defines a geometric transformation in two-dimensional space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianTransformationOperator2D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianTransformationOperator2DnonUniform": {
    "summary": "A Cartesian transformation operator 2d non uniform defines a geometric transformation in two-dimensional space composed of translation, rotation, mirroring and non uniform scaling.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianTransformationOperator2DnonUniform.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianTransformationOperator3D": {
    "summary": "An IfcCartesianTransformationOperator defines a geometric transformation in three-dimensional space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianTransformationOperator3D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCartesianTransformationOperator3DnonUniform": {
    "summary": "A Cartesian transformation operator 3d non uniform defines a geometric transformation in three-dimensional space composed of translation, rotation, mirroring and non uniform scaling.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCartesianTransformationOperator3DnonUniform.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCenterLineProfileDef": {
    "summary": "The profile IfcCenterLineProfileDef defines an arbitrary two-dimensional open, not self intersecting profile for the use within the swept solid geometry.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCenterLineProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcChiller": {
    "summary": "A chiller is a device used to remove heat from a liquid via a vapor-compression or absorption refrigeration cycle to cool a fluid, typically water or a mixture of water and glycol.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcChiller.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcChillerType": {
    "summary": "The energy conversion device type IfcChillerType defines commonly shared information for occurrences of chillers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcChillerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcChimney": {
    "summary": "Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcChimney.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcChimneyType": {
    "summary": "The building element type IfcChimneyType defines commonly shared information for occurrences of chimneys.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcChimneyType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCircle": {
    "summary": "An IfcCircle is a curve consisting of a set of points having equal distance from the center.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCircle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCircleHollowProfileDef": {
    "summary": "IfcCircleHollowProfileDef defines a section profile that provides the defining parameters of a circular hollow section (tube) to be used by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCircleHollowProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCircleProfileDef": {
    "summary": "IfcCircleProfileDef defines a circle as the profile definition used by the swept surface geometry or by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCircleProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCivilElement": {
    "summary": "An IfcCivilElement is a generalization of all elements within a civil engineering works that cannot be represented as BuildingElements, DistributionElements or GeographicElements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCivilElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCivilElementType": {
    "summary": "An IfcCivilElementType is used to define an element specification of an element used within civil engineering works.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCivilElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcClassification": {
    "summary": "An IfcClassification is used for the arrangement of objects into a class or category according to a kdtree3 purpose or their possession of kdtree3 characteristics.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcClassification.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcClassificationReference": {
    "summary": "An IfcClassificationReference is a reference into a classification system or source (see IfcClassification) for a specific classification key (or notation).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcClassificationReference.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcClosedShell": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcClosedShell.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoil": {
    "summary": "A coil is a device used to provide heat transfer between non-mixing media.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoil.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoilType": {
    "summary": "The energy conversion device type IfcCoilType defines commonly shared information for occurrences of coils.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoilType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcColourRgb": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcColourRgb.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcColourRgbList": {
    "summary": "The IfcColourRgbList defines an ordered collection of RGB colour values.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcColourRgbList.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcColourSpecification": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcColourSpecification.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcColumn": {
    "summary": "<An IfcColumn is a vertical structural member which often is aligned with a structural grid intersection.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcColumn.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcColumnStandardCase": {
    "summary": "The standard column, IfcColumnStandardCase, defines a column with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcColumnStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcColumnType": {
    "summary": "The element type IfcColumnType defines commonly shared information for occurrences of columns.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcColumnType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCommunicationsAppliance": {
    "summary": "A communications appliance transmits and receives electronic or digital information as data or sound.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCommunicationsAppliance.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCommunicationsApplianceType": {
    "summary": "The flow terminal type IfcCommunicationsApplianceType defines commonly shared information for occurrences of communications appliances.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCommunicationsApplianceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcComplexProperty": {
    "summary": "IfcComplexProperty is used to define complex properties to be handled completely within a property set.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcComplexProperty.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcComplexPropertyTemplate": {
    "summary": "The IfcComplexPropertyTemplate defines the template for all complex properties, either the IfcComplexProperty's, or the IfcPhysicalComplexQuantity's.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcComplexPropertyTemplate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCompositeCurve": {
    "summary": "An IfcCompositeCurve is a continuous curve composed of curve segments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCompositeCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCompositeCurveOnSurface": {
    "summary": "The IfcCompositeCurveOnSurface is a collection of segments, based on p-curves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCompositeCurveOnSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCompositeCurveSegment": {
    "summary": "An IfcCompositeCurveSegment is a bounded curve constructed for the sole purpose to be a segment within an IfcCompositeCurve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCompositeCurveSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCompositeProfileDef": {
    "summary": "The IfcCompositeProfileDef defines the profile by composition of other profiles.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCompositeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCompressor": {
    "summary": "A compressor is a device that compresses a fluid typically used in a refrigeration circuit.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCompressor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCompressorType": {
    "summary": "The flow moving device type IfcCompressorType defines commonly shared information for occurrences of compressors.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCompressorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCondenser": {
    "summary": "A condenser is a device that is used to dissipate heat, typically by condensing a substance such as a refrigerant from its gaseous to its liquid state.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCondenser.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCondenserType": {
    "summary": "The energy conversion device type IfcCondenserType defines commonly shared information for occurrences of condensers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCondenserType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConic": {
    "summary": "An IfcConic is a parameterized planar curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConic.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectedFaceSet": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectedFaceSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectionCurveGeometry": {
    "summary": "IfcConnectionCurveGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a curve or at an edge with curve geometry associated.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectionCurveGeometry.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectionGeometry": {
    "summary": "IfcConnectionGeometry is used to describe the geometric and topological constraints that facilitate the physical connection of two objects.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectionGeometry.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectionPointEccentricity": {
    "summary": "IfcConnectionPointEccentricity is used to describe the geometric constraints that facilitate the physical connection of two objects at a point or vertex point with associated point coordinates.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectionPointEccentricity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectionPointGeometry": {
    "summary": "IfcConnectionPointGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a point (here IfcCartesianPoint) or at an vertex with point coordinates associated.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectionPointGeometry.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectionSurfaceGeometry": {
    "summary": "IfcConnectionSurfaceGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a surface or at a face with surface geometry associated.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectionSurfaceGeometry.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConnectionVolumeGeometry": {
    "summary": "IfcConnectionVolumeGeometry is used to describe the geometric constraints that facilitate the physical connection (or overlap) of two objects at a volume defined by a solid or closed shell.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConnectionVolumeGeometry.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstraint": {
    "summary": "An IfcConstraint is used to define a constraint or limiting value or boundary condition that may be applied to an object or to the value of a property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstraint.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionEquipmentResource": {
    "summary": "IfcConstructionEquipmentResource is usage of construction equipment to assist in the performance of construction.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionEquipmentResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionEquipmentResourceType": {
    "summary": "The resource type IfcConstructionEquipmentType defines commonly shared information for occurrences of construction equipment resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionEquipmentResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionMaterialResource": {
    "summary": "IfcConstructionMaterialResource identifies a material resource type in a construction project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionMaterialResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionMaterialResourceType": {
    "summary": "The resource type IfcConstructionMaterialType defines commonly shared information for occurrences of construction material resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionMaterialResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionProductResource": {
    "summary": "IfcConstructionProductResource defines the role of a product that is consumed (wholly or partially), or occupied in the performance of construction.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionProductResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionProductResourceType": {
    "summary": "The resource type IfcConstructionProductType defines commonly shared information for occurrences of construction product resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionProductResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionResource": {
    "summary": "IfcConstructionResource is an abstract generalization of the different resources used in construction projects, mainly labour, material, equipment and product resources, plus subcontracted resources and aggregations such as a crew resource.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConstructionResourceType": {
    "summary": "IfcConstructionResourceType is an abstract generalization of the different resource types used in construction projects, mainly labor, material, equipment and product resource types, plus subcontracted resource types and aggregations such as a crew resource type.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConstructionResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcContext": {
    "summary": "IfcContext is the generalization of a project context in which objects, type objects, property sets, and properties are defined.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcContext.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcContextDependentUnit": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcContextDependentUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcControl": {
    "summary": "IfcControl is the abstract generalization of all concepts that control or constrain the utilization of products, processes, or resources in general.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcControl.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcController": {
    "summary": "A controller is a device that monitors inputs and controls outputs within a building automation system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcController.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcControllerType": {
    "summary": "The distribution control element type IfcControllerType defines commonly shared information for occurrences of controllers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcControllerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConversionBasedUnit": {
    "summary": "An IfcConversionBasedUnit is used to define a unit that has a conversion rate to a base unit.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConversionBasedUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcConversionBasedUnitWithOffset": {
    "summary": "IfcConversionBasedUnitWithOffset is a unit which is converted from another unit by applying a conversion factor and an offset.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcConversionBasedUnitWithOffset.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCooledBeam": {
    "summary": "A cooled beam (or chilled beam) is a device typically used to cool air by circulating a fluid such as chilled water through exposed finned tubes above a space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCooledBeam.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCooledBeamType": {
    "summary": "The energy conversion device type IfcCooledBeamType defines commonly shared information for occurrences of cooled beams.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCooledBeamType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoolingTower": {
    "summary": "A cooling tower is a device which rejects heat to ambient air by circulating a fluid such as water through it to reduce its temperature by partial evaporation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoolingTower.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoolingTowerType": {
    "summary": "The energy conversion device type IfcCoolingTowerType defines commonly shared information for occurrences of cooling towers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoolingTowerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoordinateOperation": {
    "summary": "The coordinate operation is an abstract supertype to handle any operation (transformation or conversion) between two coordinate reference systems.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoordinateOperation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoordinateReferenceSystem": {
    "summary": "The IfcCoordinateReferenceSystem is a definition of a coordinate reference system by means of qualified identifiers only.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoordinateReferenceSystem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCostItem": {
    "summary": "An IfcCostItem describes a cost or financial value together with descriptive information that describes its context in a form that enables it to be used within a cost schedule.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCostItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCostSchedule": {
    "summary": "An IfcCostSchedule brings together instances of IfcCostItem either for the purpose of identifying purely cost information as in an estimate for constructions costs or for including cost information within another presentation form such as a work order.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCostSchedule.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCostValue": {
    "summary": "IfcCostValue is an amount of money or a value that affects an amount of money.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCostValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCovering": {
    "summary": "A covering is an element which covers some part of another element and is fully dependent on that other element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCovering.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCoveringType": {
    "summary": "The element type IfcCoveringType defines commonly shared information for occurrences of coverings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCoveringType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCrewResource": {
    "summary": "IfcCrewResource represents a collection of internal resources used in construction processes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCrewResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCrewResourceType": {
    "summary": "The resource type IfcCrewResourceType defines commonly shared information for occurrences of crew resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCrewResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCsgPrimitive3D": {
    "summary": "IfcCsgPrimitive3D is an abstract supertype of all three dimensional primitives used as either tree root item, or as Boolean results within a CSG solid model.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCsgPrimitive3D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCsgSolid": {
    "summary": "An IfcCsgSolid is the representation of a 3D shape using constructive solid geometry model.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCsgSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCShapeProfileDef": {
    "summary": "IfcCShapeProfileDef defines a section profile that provides the defining parameters of a C-shaped section to be used by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurrencyRelationship": {
    "summary": "IfcCurrencyRelationship defines the rate of exchange that applies between two designated currencies at a particular time and as published by a particular source.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurrencyRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurtainWall": {
    "summary": "A curtain wall is an exterior wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurtainWall.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurtainWallType": {
    "summary": "The building element type IfcCurtainWallType defines commonly shared information for occurrences of curtain walls.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurtainWallType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurve": {
    "summary": "An IfcCurve is a curve in two-dimensional or three-dimensional space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurveBoundedPlane": {
    "summary": "The IfcCurveBoundedPlane is a parametric planar surface with curved boundaries defined by one or more boundary curves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurveBoundedPlane.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurveBoundedSurface": {
    "summary": "The IfcCurveBoundedSurface is a parametric surface with boundaries defined by p-curves, that is, a curve which lies on the basis of a surface and is defined in the parameter space of that surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurveBoundedSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurveStyle": {
    "summary": "An IfcCurveStyle provides the style table for presentation information assigned to geometric curves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurveStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurveStyleFont": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurveStyleFont.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurveStyleFontAndScaling": {
    "summary": "The IfcCurveStyleFontAndScaling allows for the reuse of the same curve style definition in several sizes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurveStyleFontAndScaling.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCurveStyleFontPattern": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCurveStyleFontPattern.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcCylindricalSurface": {
    "summary": "The cylindrical surface is a surface unbounded in the direction of z.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcCylindricalSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDamper": {
    "summary": "A damper typically participates in an HVAC duct distribution system and is used to control or modulate the flow of air.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDamper.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDamperType": {
    "summary": "The flow controller type IfcDamperType defines commonly shared information for occurrences of dampers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDamperType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDerivedProfileDef": {
    "summary": "IfcDerivedProfileDef defines the profile by transformation from the parent profile.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDerivedProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDerivedUnit": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDerivedUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDerivedUnitElement": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDerivedUnitElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDimensionalExponents": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDimensionalExponents.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDirection": {
    "summary": "The IfcDirection provides a direction in two or three dimensional space depending on the number of DirectionRatio's provided.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDirection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDiscreteAccessory": {
    "summary": "A discrete accessory is a representation of different kinds of accessories included in or added to elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDiscreteAccessory.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDiscreteAccessoryType": {
    "summary": "The element component type IfcDiscreteAccessoryType defines commonly shared information for occurrences of discrete accessorys.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDiscreteAccessoryType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionChamberElement": {
    "summary": "A distribution chamber element defines a place at which distribution systems and their constituent elements may be inspected or through which they may travel.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionChamberElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionChamberElementType": {
    "summary": "The distribution flow element type IfcDistributionChamberElementType defines commonly shared information for occurrences of distribution chamber elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionChamberElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionCircuit": {
    "summary": "A distribution circuit is a partition of a distribution system that is conditionally switched such as an electrical circuit.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionCircuit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionControlElement": {
    "summary": "The distribution element IfcDistributionControlElement defines occurrence elements of a building automation control system that are used to impart control over elements of a distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionControlElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionControlElementType": {
    "summary": "The element type IfcDistributionControlElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionControlElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionElement": {
    "summary": "This IfcDistributionElement is a generalization of all elements that participate in a distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionElementType": {
    "summary": "The IfcDistributionElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionFlowElement": {
    "summary": "The distribution element IfcDistributionFlowElement defines occurrence elements of a distribution system that facilitate the distribution of energy or matter, such as air, water or power.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionFlowElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionFlowElementType": {
    "summary": "The element type IfcDistributionFlowElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionFlowElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionPort": {
    "summary": "A distribution port is an inlet or outlet of a product through which a particular substance may flow.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionPort.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDistributionSystem": {
    "summary": "A distribution system is a network designed to receive, store, maintain, distribute, or control the flow of a distribution media.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDistributionSystem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDocumentInformation": {
    "summary": "IfcDocumentInformation captures \"metadata\" of an external document.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDocumentInformation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDocumentInformationRelationship": {
    "summary": "An IfcDocumentInformationRelationship is a relationship entity that enables a document to have the ability to reference other documents.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDocumentInformationRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDocumentReference": {
    "summary": "An IfcDocumentReference is a reference to the location of a document.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDocumentReference.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDoor": {
    "summary": "The door is a built element that is predominately used to provide controlled access for people, goods, animals and vehicles.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDoor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDoorLiningProperties": {
    "summary": "The door lining is the frame which enables the door leaf to be fixed in position.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDoorLiningProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDoorPanelProperties": {
    "summary": "A door panel is normally a door leaf that opens to allow people or goods to pass.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDoorPanelProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDoorStandardCase": {
    "summary": "The standard door, IfcDoorStandardCase, defines a door with certain constraints for the provision of operation types, opening directions, frame and lining parameters, and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDoorStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDoorStyle": {
    "summary": "Definition: The door style, IfcDoorStyle, defines a particular style of doors, which may be included into the spatial context of the building model through instances of IfcDoor.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDoorStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDoorType": {
    "summary": "The element type IfcDoorType defines commonly shared information for occurrences of doors.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDoorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDraughtingPreDefinedColour": {
    "summary": "The draughting pre defined colour is a pre defined colour for the purpose to identify a colour by name.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDraughtingPreDefinedColour.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDraughtingPreDefinedCurveFont": {
    "summary": "The draughting predefined curve font type defines a selection of widely used curve fonts for draughting purposes by name.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDraughtingPreDefinedCurveFont.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDuctFitting": {
    "summary": "A duct fitting is a junction or transition in a ducted flow distribution system or used to connect duct segments, resulting in changes in flow characteristics to the fluid such as direction and flow rate.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDuctFitting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDuctFittingType": {
    "summary": "The flow fitting type IfcDuctFittingType defines commonly shared information for occurrences of duct fittings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDuctFittingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDuctSegment": {
    "summary": "A duct segment is used to typically join two sections of duct network.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDuctSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDuctSegmentType": {
    "summary": "The flow segment type IfcDuctSegmentType defines commonly shared information for occurrences of duct segments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDuctSegmentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDuctSilencer": {
    "summary": "A duct silencer is a device that is typically installed inside a duct distribution system for the purpose of reducing the noise levels from air movement, fan noise, etc.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDuctSilencer.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcDuctSilencerType": {
    "summary": "The flow treatment device type IfcDuctSilencerType defines commonly shared information for occurrences of duct silencers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcDuctSilencerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEdge": {
    "summary": "An IfcEdge defines two vertices being connected topologically.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEdge.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEdgeCurve": {
    "summary": "An IfcEdgeCurve defines two vertices being connected topologically including the geometric representation of the connection.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEdgeCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEdgeLoop": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEdgeLoop.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricAppliance": {
    "summary": "An electric appliance is a device intended for consumer usage that is powered by electricity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricAppliance.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricApplianceType": {
    "summary": "The flow terminal type IfcElectricApplianceType defines commonly shared information for occurrences of electric appliances.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricApplianceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricDistributionBoard": {
    "summary": "A distribution board is a flow controller in which instances of electrical devices are brought together at a single place for a particular purpose.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricDistributionBoard.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricDistributionBoardType": {
    "summary": "The flow controller type IfcElectricDistributionBoardType defines commonly shared information for occurrences of electric distribution boards.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricDistributionBoardType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricFlowStorageDevice": {
    "summary": "An electric flow storage device is a device in which electrical energy is stored and from which energy may be progressively released.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricFlowStorageDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricFlowStorageDeviceType": {
    "summary": "The flow storage device type IfcElectricFlowStorageDeviceType defines commonly shared information for occurrences of electric flow storage devices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricFlowStorageDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricGenerator": {
    "summary": "An electric generator is an engine that is a machine for converting mechanical energy into electrical energy.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricGenerator.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricGeneratorType": {
    "summary": "The energy conversion device type IfcElectricGeneratorType defines commonly shared information for occurrences of electric generators.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricGeneratorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricMotor": {
    "summary": "An electric motor is an engine that is a machine for converting electrical energy into mechanical energy.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricMotor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricMotorType": {
    "summary": "The energy conversion device type IfcElectricMotorType defines commonly shared information for occurrences of electric motors.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricMotorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricTimeControl": {
    "summary": "An electric time control is a device that applies control to the provision or flow of electrical energy over time.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricTimeControl.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElectricTimeControlType": {
    "summary": "The flow controller type IfcElectricTimeControlType defines commonly shared information for occurrences of electric time controls.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElectricTimeControlType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElement": {
    "summary": "An element is a generalization of all components that make up an AEC product.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementarySurface": {
    "summary": "An IfcElementarySurface in the kdtree3 supertype of analytical surfaces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementarySurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementAssembly": {
    "summary": "The IfcElementAssembly represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementAssembly.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementAssemblyType": {
    "summary": "The IfcElementAssemblyType defines a list of commonly shared property set definitions of an element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementAssemblyType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementComponent": {
    "summary": "An element component is a representation for minor items included in, added to or connecting to or between elements, which usually are not of interest from the overall building structure viewpoint.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementComponent.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementComponentType": {
    "summary": "The element type IfcElementComponentType defines commonly shared information for occurrences of element components.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementComponentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementQuantity": {
    "summary": "An IfcElementQuantity defines a set of derived measures of an element's physical property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementQuantity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcElementType": {
    "summary": "IfcElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEllipse": {
    "summary": "An IfcEllipse is a curve consisting of a set of points whose distances to two fixed points add to the same constant.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEllipse.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEllipseProfileDef": {
    "summary": "IfcEllipseProfileDef defines an ellipse as the profile definition used by the swept surface geometry or the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEllipseProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEnergyConversionDevice": {
    "summary": "The distribution flow element IfcEnergyConversionDevice defines the occurrence of a device used to perform energy conversion or heat transfer and typically participates in a flow distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEnergyConversionDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEnergyConversionDeviceType": {
    "summary": "The element type IfcEnergyConversionType defines a list of commonly shared property set definitions of an energy conversion device and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEnergyConversionDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEngine": {
    "summary": "An engine is a device that converts fuel into mechanical energy through combustion.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEngine.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEngineType": {
    "summary": "The energy conversion device type IfcEngineType defines commonly shared information for occurrences of engines.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEngineType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEvaporativeCooler": {
    "summary": "An evaporative cooler is a device that cools air by saturating it with water vapor.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEvaporativeCooler.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEvaporativeCoolerType": {
    "summary": "The energy conversion device type IfcEvaporativeCoolerType defines commonly shared information for occurrences of evaporative coolers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEvaporativeCoolerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEvaporator": {
    "summary": "An evaporator is a device in which a liquid refrigerent is vaporized and absorbs heat from the surrounding fluid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEvaporator.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEvaporatorType": {
    "summary": "The energy conversion device type IfcEvaporatorType defines commonly shared information for occurrences of evaporators.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEvaporatorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEvent": {
    "summary": "An IfcEvent is something that happens that triggers an action or response.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEvent.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEventTime": {
    "summary": "IfcEventTime captures the time-related information about an event including the different types of event dates (i.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEventTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcEventType": {
    "summary": "An IfcEventType defines a particular type of event that may be specified.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcEventType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExtendedProperties": {
    "summary": "The IfcExtendedProperties is an abstract supertype of all extensible property collections that are applicable to certain characterized entities.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExtendedProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternalInformation": {
    "summary": "An IfcExternalInformation is the identification of an information source that is not explicitly represented in the current model or in the project database (as an implementation of the current model).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternalInformation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternallyDefinedHatchStyle": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternallyDefinedHatchStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternallyDefinedSurfaceStyle": {
    "summary": "IfcExternallyDefinedSurfaceStyle is a definition of a surface style through referencing an external source, such as a material library for rendering information.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternallyDefinedSurfaceStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternallyDefinedTextFont": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternallyDefinedTextFont.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternalReference": {
    "summary": "An IfcExternalReference is the identification of information that is not explicitly represented in the current model or in the project database (as an implementation of the current model).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternalReference.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternalReferenceRelationship": {
    "summary": "IfcExternalReferenceRelationship is a relationship entity that enables objects from the IfcResourceObjectSelect to have the ability to be tagged by external references.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternalReferenceRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternalSpatialElement": {
    "summary": "The external spatial element defines external regions at the building site.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternalSpatialElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExternalSpatialStructureElement": {
    "summary": "The external spatial structure element is an abstract entity provided for different kind of external spaces, regions, and volumes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExternalSpatialStructureElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExtrudedAreaSolid": {
    "summary": "The IfcExtrudedAreaSolid is defined by sweeping a cross section provided by a profile definition.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExtrudedAreaSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcExtrudedAreaSolidTapered": {
    "summary": "IfcExtrudedAreaSolidTapered is defined by sweeping a cross section along a linear spine.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcExtrudedAreaSolidTapered.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFace": {
    "summary": "An IfcFace is topological entity used to define surface, bounded by loops, of a shell.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFace.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFaceBasedSurfaceModel": {
    "summary": "The IfcFaceBasedSurfaceModel represents the a shape by connected face sets.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFaceBasedSurfaceModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFaceBound": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFaceBound.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFaceOuterBound": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFaceOuterBound.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFaceSurface": {
    "summary": "The IfcFaceSurface defines the underlying geometry of the associated surface to the face.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFaceSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFacetedBrep": {
    "summary": "The IfcFacetedBrep is a manifold solid brep with the restriction that all faces are planar and bounded polygons.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFacetedBrep.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFacetedBrepWithVoids": {
    "summary": "The IfcFacetedBrepWithVoids is a specialization of a faceted B-rep which contains one or more voids in its interior.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFacetedBrepWithVoids.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFailureConnectionCondition": {
    "summary": "Defines forces at which a support or connection fails.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFailureConnectionCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFan": {
    "summary": "A fan is a device which imparts mechanical work on a gas.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFan.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFanType": {
    "summary": "The flow moving device type IfcFanType defines commonly shared information for occurrences of fans.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFanType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFastener": {
    "summary": "Representations of fixing parts which are used as fasteners to connect or join elements with other elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFastener.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFastenerType": {
    "summary": "The element component type IfcFastenerType defines commonly shared information for occurrences of fasteners.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFastenerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFeatureElement": {
    "summary": "A feature element is a generalization of all existence dependent elements which modify the shape and appearance of the associated master element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFeatureElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFeatureElementAddition": {
    "summary": "A feature element addition is a specialization of the general feature element, that represents an existence dependent element which modifies the shape and appearance of the associated master element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFeatureElementAddition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFeatureElementSubtraction": {
    "summary": "The IfcFeatureElementSubtraction is specialization of the general feature element, that represents an existence dependent elements which modifies the shape and appearance of the associated master element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFeatureElementSubtraction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFillAreaStyle": {
    "summary": "An IfcFillAreaStyle provides the style table for presentation information assigned to annotation fill areas or surfaces for hatching and tiling.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFillAreaStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFillAreaStyleHatching": {
    "summary": "The IfcFillAreaStyleHatching is used to define simple, vector-based hatching patterns, based on styled straight lines.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFillAreaStyleHatching.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFillAreaStyleTiles": {
    "summary": "The IfcFillAreaStyleTiles defines the filling of an IfcAnnotationFillArea by recurring patterns of styled two dimensional geometry, called a tile.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFillAreaStyleTiles.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFilter": {
    "summary": "A filter is an apparatus used to remove particulate or gaseous matter from fluids and gases.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFilter.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFilterType": {
    "summary": "The flow treatment device type IfcFilterType defines commonly shared information for occurrences of filters.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFilterType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFireSuppressionTerminal": {
    "summary": "A fire suppression terminal has the purpose of delivering a fluid (gas or liquid) that will suppress a fire.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFireSuppressionTerminal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFireSuppressionTerminalType": {
    "summary": "The flow terminal type IfcFireSuppressionTerminalType defines commonly shared information for occurrences of fire suppression terminals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFireSuppressionTerminalType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFixedReferenceSweptAreaSolid": {
    "summary": "An IfcFixedReferenceSweptAreaSolid is a type of swept area solid which is the result of sweeping an area along a Directrix.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFixedReferenceSweptAreaSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowController": {
    "summary": "The distribution flow element IfcFlowController defines the occurrence of elements of a distribution system that are used to regulate flow through a distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowController.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowControllerType": {
    "summary": "The element type IfcFlowControllerType defines a list of commonly shared property set definitions of a flow controller and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowControllerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowFitting": {
    "summary": "The distribution flow element IfcFlowFitting defines the occurrence of a junction or transition in a flow distribution system, such as an elbow or tee.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowFitting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowFittingType": {
    "summary": "The element type IfcFlowFittingType defines a list of commonly shared property set definitions of a flow fitting and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowFittingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowInstrument": {
    "summary": "A flow instrument reads and displays the value of a particular property of a system at a point, or displays the difference in the value of a property between two points.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowInstrument.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowInstrumentType": {
    "summary": "The distribution control element type IfcFlowInstrumentType defines commonly shared information for occurrences of flow instruments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowInstrumentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowMeter": {
    "summary": "A flow meter is a device that is used to measure the flow rate in a system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowMeter.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowMeterType": {
    "summary": "The flow controller type IfcFlowMeterType defines commonly shared information for occurrences of flow meters.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowMeterType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowMovingDevice": {
    "summary": "The distribution flow element IfcFlowMovingDevice defines the occurrence of an apparatus used to distribute, circulate or perform conveyance of fluids, including liquids and gases (such as a pump or fan), and typically participates in a flow distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowMovingDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowMovingDeviceType": {
    "summary": "The element type IfcFlowMovingDeviceType defines a list of commonly shared property set definitions of a flow moving device and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowMovingDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowSegment": {
    "summary": "The distribution flow element IfcFlowSegment defines the occurrence of a segment of a flow distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowSegmentType": {
    "summary": "The element type IfcFlowSegmentType defines a list of commonly shared property set definitions of a flow segment and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowSegmentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowStorageDevice": {
    "summary": "The distribution flow element IfcFlowStorageDevice defines the occurrence of a device that participates in a distribution system and is used for temporary storage (such as a tank).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowStorageDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowStorageDeviceType": {
    "summary": "The element type IfcFlowStorageDeviceType defines a list of commonly shared property set definitions of a flow storage device and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowStorageDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowTerminal": {
    "summary": "The distribution flow element IfcFlowTerminal defines the occurrence of a permanently attached element that acts as a terminus or beginning of a distribution system (such as an air outlet, drain, water closet, or sink).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowTerminal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowTerminalType": {
    "summary": "The element type IfcFlowTerminalType defines a list of commonly shared property set definitions of a flow terminal and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowTerminalType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowTreatmentDevice": {
    "summary": "The distribution flow element IfcFlowTreatmentDevice defines the occurrence of a device typically used to remove unwanted matter from a fluid, either liquid or gas, and typically participates in a flow distribution system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowTreatmentDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFlowTreatmentDeviceType": {
    "summary": "The element type IfcFlowTreatmentDeviceType defines a list of commonly shared property set definitions of a flow treatment device and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFlowTreatmentDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFooting": {
    "summary": "A footing is a part of the foundation of a structure that spreads and transmits the load to the soil.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFooting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFootingType": {
    "summary": "The building element type IfcFootingType defines commonly shared information for occurrences of footings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFootingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFurnishingElement": {
    "summary": "A furnishing element is a generalization of all furniture related objects.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFurnishingElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFurnishingElementType": {
    "summary": "IfcFurnishingElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFurnishingElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFurniture": {
    "summary": "Furniture defines complete furnishings such as a table, desk, chair, or cabinet, which may or may not be permanently attached to a building structure.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFurniture.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcFurnitureType": {
    "summary": "The furnishing element type IfcFurnitureType defines commonly shared information for occurrences of furnitures.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcFurnitureType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeographicElement": {
    "summary": "An IfcGeographicElement is a generalization of all elements within a geographical landscape.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeographicElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeographicElementType": {
    "summary": "An IfcGeographicElementType is used to define an element specification of a geographic element (i.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeographicElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeometricCurveSet": {
    "summary": "The IfcGeometricCurveSet is used for the exchange of shape representation consisting of an collection of (2D or 3D) points and curves only.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeometricCurveSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeometricRepresentationContext": {
    "summary": "The IfcGeometricRepresentationContext defines the context that applies to several shape representations of products within a project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeometricRepresentationContext.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeometricRepresentationItem": {
    "summary": "An IfcGeometricRepresentationItem is the kdtree3 supertype of all geometric items used within a representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeometricRepresentationItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeometricRepresentationSubContext": {
    "summary": "IfcGeometricRepresentationSubContext defines the context that applies to several shape representations of a product being a sub context, sharing the WorldCoordinateSystem, CoordinateSpaceDimension, Precision and TrueNorth attributes with the parent IfcGeometricRepresentationContext.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeometricRepresentationSubContext.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGeometricSet": {
    "summary": "The IfcGeometricSet is used for the exchange of shape representation consisting of (2D or 3D) points, curves, and surfaces, which do not have a topological structure (such as connected face sets or shells), are not tessellated and are not solid models (such as swept solids, CSG or Brep).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGeometricSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGrid": {
    "summary": "IfcGrid ia a planar design grid defined in 3D space used as an aid in locating structural and design elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGrid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGridAxis": {
    "summary": "An individual axis, IfcGridAxis, is defined in the context of a design grid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGridAxis.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGridPlacement": {
    "summary": "IfcGridPlacement provides a specialization of IfcObjectPlacement in which the placement and axis direction of the object coordinate system is defined by a reference to the design grid as defined in IfcGrid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGridPlacement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcGroup": {
    "summary": "IfcGroup is an generalization of any arbitrary group.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcGroup.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcHalfSpaceSolid": {
    "summary": "A half space solid divides the domain into two by a base surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcHalfSpaceSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcHeatExchanger": {
    "summary": "A heat exchanger is a device used to provide heat transfer between non-mixing media such as plate and shell and tube heat exchangers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcHeatExchanger.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcHeatExchangerType": {
    "summary": "The energy conversion device type IfcHeatExchangerType defines commonly shared information for occurrences of heat exchangers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcHeatExchangerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcHumidifier": {
    "summary": "A humidifier is a device that adds moisture into the air.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcHumidifier.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcHumidifierType": {
    "summary": "The energy conversion device type IfcHumidifierType defines commonly shared information for occurrences of humidifiers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcHumidifierType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcImageTexture": {
    "summary": "An IfcImageTexture provides a 2-dimensional texture that can be applied to a surface of an geometric item and that provides lighting parameters of a surface onto which it is mapped.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcImageTexture.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIndexedColourMap": {
    "summary": "The IfcIndexedColourMap provides the assignment of colour information to individual faces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIndexedColourMap.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIndexedPolyCurve": {
    "summary": "The IfcIndexedPolyCurve is a bounded curve with only linear and circular arc segments defined by a Cartesian point list and an optional list of segments, providing indices into the Cartesian point list.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIndexedPolyCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIndexedPolygonalFace": {
    "summary": "The IfcIndexedPolygonalFace is a compact representation of a planar face being part of a face set.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIndexedPolygonalFace.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIndexedPolygonalFaceWithVoids": {
    "summary": "The IfcIndexedPolygonalFaceWithVoids is a compact representation of a planar face with inner loops, being part of a face set.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIndexedPolygonalFaceWithVoids.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIndexedTextureMap": {
    "summary": "The IfcIndexedTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIndexedTextureMap.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIndexedTriangleTextureMap": {
    "summary": "The IfcIndexedTriangleTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIndexedTriangleTextureMap.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcInterceptor": {
    "summary": "An interceptor is a device designed and installed in order to separate and retain deleterious, hazardous or undesirable matter while permitting normal sewage or liquids to discharge into a collection system by gravity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcInterceptor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcInterceptorType": {
    "summary": "The flow treatment device type IfcInterceptorType defines commonly shared information for occurrences of interceptors.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcInterceptorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIntersectionCurve": {
    "summary": "An IfcIntersectionCurve is a 3-dimensional curve that has two additional representations provided by two pcurves defined within two distinct and intersecting surfaces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIntersectionCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcInventory": {
    "summary": "An inventory is a list of items within an enterprise.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcInventory.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIrregularTimeSeries": {
    "summary": "In an irregular time series, unpredictable bursts of data arrive at unspecified points in time, or most time stamps cannot be characterized by a repeating pattern.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIrregularTimeSeries.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIrregularTimeSeriesValue": {
    "summary": "The IfcIrregularTimeSeriesValue describes a value (or set of values) at a particular time point.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIrregularTimeSeriesValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcIShapeProfileDef": {
    "summary": "IfcIShapeProfileDef defines a section profile that provides the defining parameters of an 'I' or 'H' section.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcIShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcJunctionBox": {
    "summary": "A junction box is an enclosure within which cables are connected.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcJunctionBox.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcJunctionBoxType": {
    "summary": "The flow fitting type IfcJunctionBoxType defines commonly shared information for occurrences of junction boxs.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcJunctionBoxType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLaborResource": {
    "summary": "An IfcLaborResource is used in construction with particular skills or crafts required to perform certain types of construction or management related work.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLaborResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLaborResourceType": {
    "summary": "The resource type IfcLaborResourceType defines commonly shared information for occurrences of labour resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLaborResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLagTime": {
    "summary": "IfcLagTime describes the time parameters that may exist within a sequence relationship between two processes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLagTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLamp": {
    "summary": "A lamp is an artificial light source such as a light bulb or tube.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLamp.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLampType": {
    "summary": "The flow terminal type IfcLampType defines commonly shared information for occurrences of lamps.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLampType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLibraryInformation": {
    "summary": "An IfcLibraryInformation describes a library where a library is a structured store of information, normally organized in a manner which allows information lookup through an index or reference value.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLibraryInformation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLibraryReference": {
    "summary": "An IfcLibraryReference is a reference into a library of information by Location (provided as a URI).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLibraryReference.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightDistributionData": {
    "summary": "IfcLightDistributionData defines the luminous intensity of a light source given at a particular main plane angle.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightDistributionData.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightFixture": {
    "summary": "A light fixture is a container that is designed for the purpose of housing one or more lamps and optionally devices that control, restrict or vary their emission.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightFixture.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightFixtureType": {
    "summary": "The flow terminal type IfcLightFixtureType defines commonly shared information for occurrences of light fixtures.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightFixtureType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightIntensityDistribution": {
    "summary": "IfcLightIntensityDistribution defines the the luminous intensity of a light source that changes according to the direction of the ray.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightIntensityDistribution.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightSource": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightSource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightSourceAmbient": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightSourceAmbient.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightSourceDirectional": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightSourceDirectional.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightSourceGoniometric": {
    "summary": "IfcLightSourceGoniometric defines a light source for which exact lighting data is available.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightSourceGoniometric.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightSourcePositional": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightSourcePositional.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLightSourceSpot": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLightSourceSpot.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLine": {
    "summary": "The IfcLine is an unbounded line parameterized by an IfcCartesianPoint and an IfcVector.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLine.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLocalPlacement": {
    "summary": "An IfcLocalPlacement defines the relative placement of a product in relation to the placement of another product or the absolute placement of a product within the geometric representation context of the project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLocalPlacement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLoop": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLoop.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcLShapeProfileDef": {
    "summary": "IfcLShapeProfileDef defines a section profile that provides the defining parameters of an L-shaped section (equilateral L profiles are also covered by this entity) to be used by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcLShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcManifoldSolidBrep": {
    "summary": "The IfcManifoldSolidBrep is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non-solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcManifoldSolidBrep.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMapConversion": {
    "summary": "The map conversion deals with transforming the local engineering coordinate system, often called world coordinate system, into the coordinate reference system of the underlying map.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMapConversion.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMappedItem": {
    "summary": "The IfcMappedItem is the inserted instance of a source definition (to be compared with a block / shared cell / macro definition).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMappedItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterial": {
    "summary": "IfcMaterial is a homogeneous or inhomogeneous substance that can be used to form elements (physical products or their components).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterial.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialClassificationRelationship": {
    "summary": "IfcMaterialClassificationRelationship is a relationship assigning classifications to materials.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialClassificationRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialConstituent": {
    "summary": "IfcMaterialConstituent is a single and identifiable part of an element which is constructed of a number of part (one or more) each having an individual material.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialConstituent.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialConstituentSet": {
    "summary": "IfcMaterialConstituentSet is a collection of individual material constituents, each assigning a material to a part of an element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialConstituentSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialDefinition": {
    "summary": "IfcMaterialDefinition is a general supertype for all material related information items in IFC that have kdtree3 material related properties that may include association of material with some shape parameters or assignments to identified parts of a component.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialDefinition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialDefinitionRepresentation": {
    "summary": "IfcMaterialDefinitionRepresentation defines presentation information relating to IfcMaterial.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialDefinitionRepresentation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialLayer": {
    "summary": "IfcMaterialLayer is a single and identifiable part of an element which is constructed of a number of layers (one or more).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialLayer.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialLayerSet": {
    "summary": "The IfcMaterialLayerSet is a designation by which materials of an element constructed of a number of material layers is known and through which the relative positioning of individual layers can be expressed.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialLayerSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialLayerSetUsage": {
    "summary": "The IfcMaterialLayerSetUsage determines the usage of IfcMaterialLayerSet in terms of its location and orientation relative to the associated element geometry.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialLayerSetUsage.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialLayerWithOffsets": {
    "summary": "IfcMaterialLayerWithOffsets is a specialization of IfcMaterialLayer enabling definition of offset values along edges (within the material layer set usage in parent layer set).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialLayerWithOffsets.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialList": {
    "summary": "IfcMaterialList is a list of the different materials that are used in an element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialList.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialProfile": {
    "summary": "IfcMaterialProfile is a single and identifiable cross section of an element which is constructed of a number of profiles (one or more).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialProfile.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialProfileSet": {
    "summary": "The IfcMaterialProfileSet is a designation by which individual material(s) of a prismatic element (for example, beam or column) constructed of a single or multiple material profiles is known.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialProfileSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialProfileSetUsage": {
    "summary": "IfcMaterialProfileSetUsage determines the usage of IfcMaterialProfileSet in terms of its location relative to the associated element geometry.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialProfileSetUsage.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialProfileSetUsageTapering": {
    "summary": "IfcMaterialProfileSetUsageTapering specifies dual material profile sets in association with tapered prismatic (beam- or column-like) elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialProfileSetUsageTapering.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialProfileWithOffsets": {
    "summary": "IfcMaterialProfileWithOffsets is a specialization of IfcMaterialProfile with additional longitudinal offsets .",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialProfileWithOffsets.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialProperties": {
    "summary": "The IfcMaterialProperties assigns a set of material properties to associated material definitions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialRelationship": {
    "summary": "IfcMaterialRelationship defines a relationship between part and whole in material definitions (as in composite materials).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMaterialUsageDefinition": {
    "summary": "IfcMaterialUsageDefinition is a general supertype for all material related information items in IFC that have occurrence specific assignment parameters to assign a set of materials with shape parameters to a reference geometry item of that component.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMaterialUsageDefinition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMeasureWithUnit": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMeasureWithUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMechanicalFastener": {
    "summary": "A mechanical fasteners connecting building elements or parts mechanically.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMechanicalFastener.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMechanicalFastenerType": {
    "summary": "The element component type IfcMechanicalFastenerType defines commonly shared information for occurrences of mechanical fasteners.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMechanicalFastenerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMedicalDevice": {
    "summary": "A medical device is attached to a medical piping system and operates upon medical gases to perform a specific function.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMedicalDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMedicalDeviceType": {
    "summary": "The flow terminal type IfcMedicalDeviceType defines commonly shared information for occurrences of medical devices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMedicalDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMember": {
    "summary": "An IfcMember is a structural member designed to carry loads between or beyond points of support.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMember.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMemberStandardCase": {
    "summary": "The standard member, IfcMemberStandardCase, defines a member with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMemberStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMemberType": {
    "summary": "The element type IfcMemberType defines commonly shared information for occurrences of members.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMemberType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMetric": {
    "summary": "An IfcMetric is used to capture quantitative resultant metrics that can be applied to objectives.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMetric.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMirroredProfileDef": {
    "summary": "The IfcMirroredProfileDef defines the profile by mirroring the parent profile about the y axis of the parent profile coordinate system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMirroredProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMonetaryUnit": {
    "summary": "IfcMonetaryUnit is a unit to define currency for money.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMonetaryUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMotorConnection": {
    "summary": "A motor connection provides the means for connecting a motor as the driving device to the driven device.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMotorConnection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcMotorConnectionType": {
    "summary": "The energy conversion device type IfcMotorConnectionType defines commonly shared information for occurrences of motor connections.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcMotorConnectionType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcNamedUnit": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcNamedUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcObject": {
    "summary": "An IfcObject is the generalization of any semantically treated thing or process.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcObject.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcObjectDefinition": {
    "summary": "An IfcObjectDefinition is the generalization of any semantically treated thing or process, either being a type or an occurrences.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcObjectDefinition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcObjective": {
    "summary": "An IfcObjective captures qualitative information for an objective-based constraint.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcObjective.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcObjectPlacement": {
    "summary": "IfcObjectPlacement is an abstract supertype for the special types defining the object coordinate system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcObjectPlacement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOccupant": {
    "summary": "An occupant is a type of actor that defines the form of occupancy of a property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOccupant.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOffsetCurve2D": {
    "summary": "An IfcOffsetCurve2D is a curve defined by an offset in 2D space from its BasisCurve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOffsetCurve2D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOffsetCurve3D": {
    "summary": "An IfcOffsetCurve3D is a curve defined by an offset in 3D space from its BasisCurve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOffsetCurve3D.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOpeningElement": {
    "summary": "The opening element stands for opening, recess or chase, all reflecting voids.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOpeningElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOpeningStandardCase": {
    "summary": "The standard opening, IfcOpeningStandardCase, defines an opening with certain constraints for the dimension parameters, position within the voided element, and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOpeningStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOpenShell": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOpenShell.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOrganization": {
    "summary": "A named and structured grouping with a corporate identity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOrganization.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOrganizationRelationship": {
    "summary": "The IfcOrganizationRelationship establishes an association between one relating organization and one or more related organizations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOrganizationRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOrientedEdge": {
    "summary": "The IfcOrientedEdge represents an IfcEdge with an Orientation flag applied.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOrientedEdge.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOuterBoundaryCurve": {
    "summary": "The IfcOuterBoundaryCurve defines the outer boundary of a bounded surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOuterBoundaryCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOutlet": {
    "summary": "An outlet is a device installed at a point to receive one or more inserted plugs for electrical power or communications.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOutlet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOutletType": {
    "summary": "The flow terminal type IfcOutletType defines commonly shared information for occurrences of outlets.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOutletType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcOwnerHistory": {
    "summary": "IfcOwnerHistory defines all history and identification related information.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcOwnerHistory.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcParameterizedProfileDef": {
    "summary": "The parameterized profile definition defines a 2D position coordinate system to which the parameters of the different profiles relate to.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcParameterizedProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPath": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPath.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPcurve": {
    "summary": "The IfcPcurve is a curve defined within the parameter space of its reference surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPcurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPerformanceHistory": {
    "summary": "IfcPerformanceHistory is used to document the actual performance of an occurrence instance over time.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPerformanceHistory.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPermeableCoveringProperties": {
    "summary": "This entity is a description of a panel within a door or window (as fillers for opening) which allows for air flow.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPermeableCoveringProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPermit": {
    "summary": "A permit is a permission to perform work in places and on artifacts where regulatory, security or other access restrictions apply.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPermit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPerson": {
    "summary": "This entity represents an individual human being.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPerson.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPersonAndOrganization": {
    "summary": "This entity represents a person acting on behalf of an organization.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPersonAndOrganization.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPhysicalComplexQuantity": {
    "summary": "The complex physical quantity, IfcPhysicalComplexQuantity, is an entity that holds a set of single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity), that all apply to a given component or aspect of the element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPhysicalComplexQuantity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPhysicalQuantity": {
    "summary": "The physical quantity, IfcPhysicalQuantity, is an abstract entity that holds a complex or simple quantity measure together with a semantic definition of the usage for the single or several measure value.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPhysicalQuantity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPhysicalSimpleQuantity": {
    "summary": "The physical quantity, IfcPhysicalSimpleQuantity, is an entity that holds a single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity) together with a semantic definition of the usage for the measure value.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPhysicalSimpleQuantity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPile": {
    "summary": "A pile is a slender timber, concrete, or steel structural element, driven, jetted, or otherwise embedded on end in the ground for the purpose of supporting a load.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPile.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPileType": {
    "summary": "The building element type IfcPileType defines commonly shared information for occurrences of piles.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPileType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPipeFitting": {
    "summary": "A pipe fitting is a junction or transition in a piping flow distribution system used to connect pipe segments, resulting in changes in flow characteristics to the fluid such as direction or flow rate.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPipeFitting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPipeFittingType": {
    "summary": "The flow fitting type IfcPipeFittingType defines commonly shared information for occurrences of pipe fittings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPipeFittingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPipeSegment": {
    "summary": "A pipe segment is used to typically join two sections of a piping network.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPipeSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPipeSegmentType": {
    "summary": "The flow segment type IfcPipeSegmentType defines commonly shared information for occurrences of pipe segments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPipeSegmentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPixelTexture": {
    "summary": "An IfcPixelTexture provides a 2D image-based texture map as an explicit array of pixel values (list of Pixel binary attributes).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPixelTexture.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlacement": {
    "summary": "An IfcPlacement is an abstract supertype of placement subtypes that define the location of an item, or an entire shape representation, and provide its orientation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlacement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlanarBox": {
    "summary": "A planar box specifies an arbitrary rectangular box and its location in a two dimensional Cartesian coordinate system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlanarBox.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlanarExtent": {
    "summary": "The planar extent defines the extent along the two axes of the two-dimensional coordinate system, independently of its position.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlanarExtent.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlane": {
    "summary": "The planar surface is an unbounded surface in the direction of x and y.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlane.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlate": {
    "summary": "An IfcPlate is a planar and often flat part with constant thickness.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlateStandardCase": {
    "summary": "The standard plate, IfcPlateStandardCase, defines a plate with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlateStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPlateType": {
    "summary": "The element type IfcPlateType defines commonly shared information for occurrences of plates.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPlateType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPoint": {
    "summary": "The IfcPoint is the abstract generalisation of all point representations within a Cartesian coordinate system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPoint.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPointOnCurve": {
    "summary": "The IfcPointOnCurve is a point defined by a parameter value of its defining curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPointOnCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPointOnSurface": {
    "summary": "The IfcPointOnSurface is a point defined by two parameter value of its defining surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPointOnSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPolygonalBoundedHalfSpace": {
    "summary": "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPolygonalBoundedHalfSpace.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPolygonalFaceSet": {
    "summary": "The IfcPolygonalFaceSet is a tessellated face set with all faces being bound by polygons.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPolygonalFaceSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPolyline": {
    "summary": "The IfcPolyline is a bounded curve with only linear segments defined by a list of Cartesian points.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPolyline.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPolyLoop": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPolyLoop.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPort": {
    "summary": "A port provides the means for an element to connect to other elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPort.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPostalAddress": {
    "summary": "This entity represents an address for delivery of paper based mail and other postal deliveries.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPostalAddress.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPreDefinedColour": {
    "summary": "The pre defined colour determines those qualified names which can be used to identify a colour that is in scope of the current data exchange specification (in contrary to colour specification which defines the colour directly by its colour components).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPreDefinedColour.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPreDefinedCurveFont": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPreDefinedCurveFont.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPreDefinedItem": {
    "summary": "A pre defined item is a qualified name given to a style or font which is determined within the data exchange specification by convention on using the Name attribute value (in contrary to externally defined items, which are agreed by an external source).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPreDefinedItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPreDefinedProperties": {
    "summary": "The IfcPreDefinedProperties is an abstract supertype of all predefined property collections that have explicit attributes, each representing a property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPreDefinedProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPreDefinedPropertySet": {
    "summary": "IfcPreDefinedPropertySet is a generalization of all statically defined property sets that are assigned to an object or type object.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPreDefinedPropertySet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPreDefinedTextFont": {
    "summary": "The pre defined text font determines those qualified names which can be used for fonts that are in scope of the current data exchange specification (in contrary to externally defined text fonts).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPreDefinedTextFont.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPresentationItem": {
    "summary": "The IfcPresentationItem is the abstract supertype of all entities used for presentation appearance definitions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPresentationItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPresentationLayerAssignment": {
    "summary": "The presentation layer assignment provides the layer name (and optionally a description and an identifier) for a collection of geometric representation items.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPresentationLayerAssignment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPresentationLayerWithStyle": {
    "summary": "An IfcPresentationLayerAssignmentWithStyle extends the presentation layer assignment with capabilities to define visibility control, access control and kdtree3 style information.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPresentationLayerWithStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPresentationStyle": {
    "summary": "The IfcPresentationStyle is an abstract generalization of style table for presentation information assigned to geometric representation items.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPresentationStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPresentationStyleAssignment": {
    "summary": "Assignment of style information to a styled item.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPresentationStyleAssignment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProcedure": {
    "summary": "An IfcProcedure is a logical set of actions to be taken in response to an event or to cause an event to occur.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProcedure.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProcedureType": {
    "summary": "An IfcProcedureType defines a particular type of procedure that may be specified.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProcedureType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProcess": {
    "summary": "IfcProcess is defined as one individual activity or event, that is ordered in time, that has sequence relationships with other processes, which transforms input in output, and may connect to other other processes through input output relationships.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProcess.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProduct": {
    "summary": "The IfcProduct is an abstract representation of any object that relates to a geometric or spatial context.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProduct.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProductDefinitionShape": {
    "summary": "The IfcProductDefinitionShape defines all shape relevant information about an IfcProduct.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProductDefinitionShape.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProductRepresentation": {
    "summary": "IfcProductRepresentation defines a representation of a product, including its (geometric or topological) representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProductRepresentation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProfileDef": {
    "summary": "IfcProfileDef is the supertype of all definitions of standard and arbitrary profiles within IFC.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProfileProperties": {
    "summary": "This is a collection of properties applicable to section profile definitions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProfileProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProject": {
    "summary": "IfcProject indicates the undertaking of some design, engineering, construction, or maintenance activities leading towards a product.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProject.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProjectedCRS": {
    "summary": "IfcProjectedCRS is a coordinate reference system of the map to which the map translation of the local engineering coordinate system of the construction or facility engineering project relates.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProjectedCRS.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProjectionElement": {
    "summary": "The projection element is a specialization of the general feature element to represent projections applied to building elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProjectionElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProjectLibrary": {
    "summary": "An IfcProjectLibrary collects all library elements that are included within a referenced project data set.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProjectLibrary.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProjectOrder": {
    "summary": "A project order is a directive to purchase products and/or perform work, such as for construction or facilities management.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProjectOrder.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProperty": {
    "summary": "IfcProperty is an abstract generalization for all types of properties that can be associated with IFC objects through the property set mechanism.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProperty.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyAbstraction": {
    "summary": "The IfcPropertyAbstraction is an abstract supertype of all property related entities defined as dependent resource entities within the specification.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyAbstraction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyBoundedValue": {
    "summary": "A property with a bounded value, IfcPropertyBoundedValue, defines a property object which has a maximum of two (numeric or descriptive) values assigned, the first value specifying the upper bound and the second value specifying the lower bound.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyBoundedValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyDefinition": {
    "summary": "IfcPropertyDefinition defines the generalization of all characteristics (i.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyDefinition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyDependencyRelationship": {
    "summary": "An IfcPropertyDependencyRelationship describes an identified dependency between the value of one property and that of another.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyDependencyRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyEnumeratedValue": {
    "summary": "A property with an enumerated value, IfcPropertyEnumeratedValue, defines a property object which has a value assigned that is chosen from an enumeration.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyEnumeratedValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyEnumeration": {
    "summary": "IfcPropertyEnumeration is a collection of simple or measure values that define a prescribed set of alternatives from which 'enumeration values' are selected.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyEnumeration.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyListValue": {
    "summary": "An IfcPropertyListValue defines a property that has several (numeric or descriptive) values assigned, these values are given by an ordered list.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyListValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyReferenceValue": {
    "summary": "The IfcPropertyReferenceValue allows a property value to be of type of an resource level entity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyReferenceValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertySet": {
    "summary": "The IfcPropertySet is a container that holds properties within a property tree.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertySet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertySetDefinition": {
    "summary": "IfcPropertySetDefinition is a generalization of all individual property sets that can be assigned to an object or type object.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertySetDefinition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertySetTemplate": {
    "summary": "IfcPropertySetTemplate defines the template for all dynamically extensible property sets represented by IfcPropertySet.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertySetTemplate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertySingleValue": {
    "summary": "The property with a single value IfcPropertySingleValue defines a property object which has a single (numeric or descriptive) value assigned.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertySingleValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyTableValue": {
    "summary": "IfcPropertyTableValue is a property with a value range defined by a property object which has two lists of (numeric or descriptive) values assigned.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyTableValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyTemplate": {
    "summary": "The IfcPropertyTemplate is an abstract supertype comprising the templates for all dynamically extensible properties, either as an IfcComplexPropertyTemplate, or an IfcSimplePropertyTemplate.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyTemplate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPropertyTemplateDefinition": {
    "summary": "IfcPropertyTemplateDefinition is a generalization of all property and property set templates.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPropertyTemplateDefinition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProtectiveDevice": {
    "summary": "A protective device breaks an electrical circuit when a stated electric current that passes through it is exceeded.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProtectiveDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProtectiveDeviceTrippingUnit": {
    "summary": "A protective device tripping unit breaks an electrical circuit at a separate breaking unit when a stated electric current that passes through the unit is exceeded.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProtectiveDeviceTrippingUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProtectiveDeviceTrippingUnitType": {
    "summary": "The distribution control element type IfcProtectiveDeviceTrippingUnitType defines commonly shared information for occurrences of protective device tripping units.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProtectiveDeviceTrippingUnitType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProtectiveDeviceType": {
    "summary": "The flow controller type IfcProtectiveDeviceType defines commonly shared information for occurrences of protective devices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProtectiveDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcProxy": {
    "summary": "IfcProxy is intended to be a kind of a container for wrapping objects which are defined by associated properties, which may or may not have a geometric representation and placement in space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcProxy.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPump": {
    "summary": "A pump is a device which imparts mechanical work on fluids or slurries to move them through a channel or pipeline.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPump.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcPumpType": {
    "summary": "The flow moving device type IfcPumpType defines commonly shared information for occurrences of pumps.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcPumpType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantityArea": {
    "summary": "IfcQuantityArea is a physical quantity that defines a derived area measure to provide an element's physical property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantityArea.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantityCount": {
    "summary": "IfcQuantityCount is a physical quantity that defines a derived count measure to provide an element's physical property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantityCount.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantityLength": {
    "summary": "IfcQuantityLength is a physical quantity that defines a derived length measure to provide an element's physical property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantityLength.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantitySet": {
    "summary": "IfcQuantitySet is the the abstract supertype for all quantity sets attached to objects.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantitySet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantityTime": {
    "summary": "IfcQuantityTime is an element quantity that defines a time measure to provide a property of time related to an element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantityTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantityVolume": {
    "summary": "IfcQuantityVolume is a physical quantity that defines a derived volume measure to provide an element's physical property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantityVolume.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcQuantityWeight": {
    "summary": "IfcQuantityWeight is a physical element quantity that defines a derived weight measure to provide an element's physical property.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcQuantityWeight.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRailing": {
    "summary": "The railing is a frame assembly adjacent to human or vehicle circulation spaces and at some space boundaries where it is used in lieu of walls or to complement walls.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRailing.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRailingType": {
    "summary": "The building element type IfcRailingType defines commonly shared information for occurrences of railings.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRailingType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRamp": {
    "summary": "A ramp is a vertical passageway which provides a human or vehicle circulation link between one floor level and another floor level at a different elevation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRamp.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRampFlight": {
    "summary": "A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, refered to as a landing.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRampFlight.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRampFlightType": {
    "summary": "The building element type IfcRampFlightType defines commonly shared information for occurrences of ramp flights.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRampFlightType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRampType": {
    "summary": "The building element type IfcRampType defines commonly shared information for occurrences of ramps.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRampType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRationalBSplineCurveWithKnots": {
    "summary": "A rational B-spline curve with knots is a B-spline curve described in terms of control points and basic functions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRationalBSplineCurveWithKnots.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRationalBSplineSurfaceWithKnots": {
    "summary": "A rational B-spline surface with knots is a piecewise parametric rational surface described in terms of control points, and associated weight values.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRationalBSplineSurfaceWithKnots.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRectangleHollowProfileDef": {
    "summary": "IfcRectangleHollowProfileDef defines a section profile that provides the defining parameters of a rectangular (or square) hollow section to be used by the swept surface geometry or the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRectangleHollowProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRectangleProfileDef": {
    "summary": "IfcRectangleProfileDef defines a rectangle as the profile definition used by the swept surface geometry or the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRectangleProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRectangularPyramid": {
    "summary": "The IfcRectangularPyramid is a Construction Solid SceneGeometry (CSG) 3D primitive.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRectangularPyramid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRectangularTrimmedSurface": {
    "summary": "The IfcRectangularTrimmedSurface is a surface created by bounding its BasisSurface along two pairs of parallel curves defined within the parametric space of the referenced surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRectangularTrimmedSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRecurrencePattern": {
    "summary": "IfcRecurrencePattern defines repetitive time periods on the basis of regular recurrences such as each Monday in a week, or every third Tuesday in a month.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRecurrencePattern.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReference": {
    "summary": "This entity is used to refer to a value of an attribute on an instance.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReference.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRegularTimeSeries": {
    "summary": "In a regular time series, the data arrives predictably at predefined intervals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRegularTimeSeries.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcementBarProperties": {
    "summary": "IfcReinforcementProperties defines the set of properties for a specific combination of reinforcement bar steel grade, bar type and effective depth.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcementBarProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcementDefinitionProperties": {
    "summary": "IfcReinforcementDefinitionProperties defines the cross section properties of reinforcement included in reinforced concrete building elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcementDefinitionProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcingBar": {
    "summary": "A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcingBar.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcingBarType": {
    "summary": "The reinforcing element type IfcReinforcingBarType defines commonly shared information for occurrences of reinforcing bars.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcingBarType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcingElement": {
    "summary": "A reinforcing element represents bars, wires, strands, meshes, tendons, and other components embedded in concrete in such a manner that the reinforcement and the concrete act together in resisting forces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcingElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcingElementType": {
    "summary": "The element component type IfcReinforcingElementType defines commonly shared information for occurrences of reinforcing elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcingElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcingMesh": {
    "summary": "A reinforcing mesh is a series of longitudinal and transverse wires or bars of various gauges, arranged at right angles to each other and welded at all points of intersection; usually used for concrete slab reinforcement.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcingMesh.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReinforcingMeshType": {
    "summary": "The reinforcing element type IfcReinforcingMeshType defines commonly shared information for occurrences of reinforcing meshs.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReinforcingMeshType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAggregates": {
    "summary": "The aggregation relationship IfcRelAggregates is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAggregates.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssigns": {
    "summary": "The assignment relationship, IfcRelAssigns, is a generalization of \"link\" relationships among instances of IfcObject and its various 1st level subtypes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssigns.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToActor": {
    "summary": "The objectified relationship IfcRelAssignsToActor handles the assignment of objects (subtypes of IfcObject) to an actor (subtypes of IfcActor).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToActor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToControl": {
    "summary": "The objectified relationship IfcRelAssignsToControl handles the assignment of a control (represented by subtypes of IfcControl) to other objects (represented by subtypes of IfcObject, with the exception of controls).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToControl.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToGroup": {
    "summary": "The objectified relationship IfcRelAssignsToGroup handles the assignment of object definitions (individual object occurrences as subtypes of IfcObject, and object types as subtypes of IfcTypeObject) to a group (subtypes of IfcGroup).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToGroup.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToGroupByFactor": {
    "summary": "The objectified relationship IfcRelAssignsToGroupByFactor is a specialization of the general grouping mechanism.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToGroupByFactor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToProcess": {
    "summary": "The objectified relationship IfcRelAssignsToProcess handles the assignment of one or many objects to a process or activity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToProcess.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToProduct": {
    "summary": "The objectified relationship IfcRelAssignsToProduct handles the assignment of objects (subtypes of IfcObject) to a product (subtypes of IfcProduct).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToProduct.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssignsToResource": {
    "summary": "The objectified relationship IfcRelAssignsToResource handles the assignment of objects (as subtypes of IfcObject), acting as a resource usage or consumption, to a resource (as subtypes of IfcResource).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssignsToResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociates": {
    "summary": "The association relationship IfcRelAssociates refers to sources of information (most notably a classification, library, document, approval, contraint, or material).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociates.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociatesApproval": {
    "summary": "The entity IfcRelAssociatesApproval is used to apply approval information defined by IfcApproval, in IfcApprovalResource schema, to subtypes of IfcRoot.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociatesApproval.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociatesClassification": {
    "summary": "The objectified relationship IfcRelAssociatesClassification handles the assignment of a classification item (items of the select IfcClassificationSelect) to objects occurrences (subtypes of IfcObject) or object types (subtypes of IfcTypeObject).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociatesClassification.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociatesConstraint": {
    "summary": "The entity IfcRelAssociatesConstraint is used to apply constraint information defined by IfcConstraint, in the IfcConstraintResource schema, to subtypes of IfcRoot.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociatesConstraint.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociatesDocument": {
    "summary": "The objectified relationship (IfcRelAssociatesDocument) handles the assignment of a document information (items of the select IfcDocumentSelect) to objects occurrences (subtypes of IfcObject) or object types (subtypes of IfcTypeObject).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociatesDocument.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociatesLibrary": {
    "summary": "The objectified relationship (IfcRelAssociatesLibrary) handles the assignment of a library item (items of the select IfcLibrarySelect) to subtypes of IfcObjectDefinition or IfcPropertyDefinition.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociatesLibrary.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelAssociatesMaterial": {
    "summary": "IfcRelAssociatesMaterial is an objectified relationship between a material definition and elements or element types to which this material definition applies.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelAssociatesMaterial.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelationship": {
    "summary": "IfcRelationship is the abstract generalization of all objectified relationships in IFC.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnects": {
    "summary": "IfcRelConnects is a connectivity relationship that connects objects under some criteria.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnects.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsElements": {
    "summary": "The IfcRelConnectsElements objectified relationship provides the generalization of the connectivity between elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsElements.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsPathElements": {
    "summary": "The IfcRelConnectsPathElements relationship provides the connectivity information between two elements, which have path information.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsPathElements.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsPorts": {
    "summary": "An IfcRelConnectsPorts relationship defines the relationship that is made between two ports at their point of connection.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsPorts.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsPortToElement": {
    "summary": "IfcRelConnectsPortToElement is a relationship between a distribution element and dynamically connected ports where connections are realised to other distribution elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsPortToElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsStructuralActivity": {
    "summary": "The IfcRelConnectsStructuralActivity relationship connects a structural activity (either an action or reaction) to a structural member, structural connection, or element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsStructuralActivity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsStructuralMember": {
    "summary": "The entity IfcRelConnectsStructuralMember defines all needed properties describing the connection between structural members and structural connection objects (nodes or supports).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsStructuralMember.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsWithEccentricity": {
    "summary": "The entity IfcRelConnectsWithEccentricity adds the definition of eccentricity to the connection between a structural member and a structural connection (representing either a node or support).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsWithEccentricity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelConnectsWithRealizingElements": {
    "summary": "IfcRelConnectsWithRealizingElements defines a generic relationship that is made between two elements that require the realization of that relationship by means of further realizing elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelConnectsWithRealizingElements.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelContainedInSpatialStructure": {
    "summary": "This objectified relationship, IfcRelContainedInSpatialStructure, is used to assign elements to a certain level of the spatial project structure.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelContainedInSpatialStructure.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelCoversBldgElements": {
    "summary": "The IfcRelCoversBldgElements relationship is an objectified relationship between an element and one to many coverings, which cover that element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelCoversBldgElements.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelCoversSpaces": {
    "summary": "The objectified relationship, IfcRelCoversSpace, relates a space object to one or many coverings, which faces (or is assigned to) the space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelCoversSpaces.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDeclares": {
    "summary": "The objectified relationship IfcRelDeclares handles the declaration of objects (subtypes of IfcObject) or properties (subtypes of IfcPropertyDefinition) to a project or project library (represented by IfcProject, or IfcProjectLibrary).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDeclares.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDecomposes": {
    "summary": "The decomposition relationship, IfcRelDecomposes, defines the general concept of elements being composed or decomposed.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDecomposes.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDefines": {
    "summary": "A generic and abstract relationship which subtypes are used to:.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDefines.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDefinesByObject": {
    "summary": "The objectified relationship IfcRelDefinesByObject defines the relationship between an object taking part in an object type decomposition and an object occurrences taking part in an occurrence decomposition of that type.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDefinesByObject.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDefinesByProperties": {
    "summary": "The objectified relationship IfcRelDefinesByProperties defines the relationships between property set definitions and objects.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDefinesByProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDefinesByTemplate": {
    "summary": "The objectified relationship IfcRelDefinesByTemplate defines the relationships between property set template and property sets.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDefinesByTemplate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelDefinesByType": {
    "summary": "The objectified relationship IfcRelDefinesByType defines the relationship between an object type and object occurrences.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelDefinesByType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelFillsElement": {
    "summary": "IfcRelFillsElement is an objectified relationship between an opening element and an element that fills (or partially fills) the opening element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelFillsElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelFlowControlElements": {
    "summary": "This objectified relationship between a distribution flow element occurrence and one-to-many control element occurrences indicates that the control element(s) sense or control some aspect of the flow element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelFlowControlElements.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelInterferesElements": {
    "summary": "The IfcRelInterferesElements objectified relationship indicates that two elements interfere.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelInterferesElements.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelNests": {
    "summary": "The nesting relationship IfcRelNests is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelNests.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelProjectsElement": {
    "summary": "The IfcRelProjectsElement is an objectified relationship between an element and one projection element that creates a modifier to the shape of the element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelProjectsElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelReferencedInSpatialStructure": {
    "summary": "The objectified relationship, IfcRelReferencedInSpatialStructure is used to assign elements in addition to those levels of the project spatial\\S\\ structure, in which they are referenced, but not primarily contained.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelReferencedInSpatialStructure.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelSequence": {
    "summary": "IfcRelSequence is a sequential relationship between processes where one process must occur before the other in time and where the timing of the relationship may be described as a type of sequence.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelSequence.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelServicesBuildings": {
    "summary": "The IfcRelServicesBuildings is an objectified relationship that defines the relationship between a system and the sites, buildings, storeys, spaces, or spatial zones, it serves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelServicesBuildings.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelSpaceBoundary": {
    "summary": "The space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary to the surrounding elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelSpaceBoundary.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelSpaceBoundary1stLevel": {
    "summary": "The 1st level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary1stLevel to the surrounding elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelSpaceBoundary1stLevel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelSpaceBoundary2ndLevel": {
    "summary": "The 2nd level space boundary defines the physical or virtual delimiter of a space by the relationship IfcRelSpaceBoundary2ndLevel to the surrounding elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelSpaceBoundary2ndLevel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRelVoidsElement": {
    "summary": "IfcRelVoidsElement is an objectified relationship between a building element and one opening element that creates a void in the element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRelVoidsElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcReparametrisedCompositeCurveSegment": {
    "summary": "The IfcReparametrisedCompositeCurveSegment is geometrically identical to a IfcCompositeCurveSegment but with the additional capability of reparametrization.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcReparametrisedCompositeCurveSegment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRepresentation": {
    "summary": "The IfcRepresentation defines the general concept of representing product properties and in particular the product shape.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRepresentation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRepresentationContext": {
    "summary": "The IfcRepresentationContext defines the context to which the IfcRepresentation of a product is related.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRepresentationContext.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRepresentationItem": {
    "summary": "The IfcRepresentationItem is used within an IfcRepresentation (directly or indirectly through other IfcRepresentationItem's) to represent an IfcProductRepresentation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRepresentationItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRepresentationMap": {
    "summary": "An IfcRepresentationMap defines the base definition (also referred to as block, cell or macro) called MappedRepresentation within the MappingOrigin.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRepresentationMap.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcResource": {
    "summary": "IfcResource contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcResourceApprovalRelationship": {
    "summary": "An IfcResourceApprovalRelationship is used for associating an approval to resource objects.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcResourceApprovalRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcResourceConstraintRelationship": {
    "summary": "An IfcResourceConstraintRelationship is a relationship entity that enables a constraint to be related to one or more resource level objects.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcResourceConstraintRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcResourceLevelRelationship": {
    "summary": "IfcResourceLevelRelationship is an abstract base entity for relationships between resource-level entities.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcResourceLevelRelationship.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcResourceTime": {
    "summary": "IfcResourceTime captures the time-related information about a construction resource.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcResourceTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRevolvedAreaSolid": {
    "summary": "An IfcRevolvedAreaSolid is a solid created by revolving a cross section provided by a profile definition about an axis.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRevolvedAreaSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRevolvedAreaSolidTapered": {
    "summary": "IfcRevolvedAreaSolidTapered is defined by revolving a cross section along a circular arc.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRevolvedAreaSolidTapered.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRightCircularCone": {
    "summary": "The IfcRightCircularCone is a Construction Solid SceneGeometry (CSG) 3D primitive.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRightCircularCone.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRightCircularCylinder": {
    "summary": "The IfcRightCircularCylinder is a Construction Solid SceneGeometry (CSG) 3D primitive.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRightCircularCylinder.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRoof": {
    "summary": "A roof is the covering of the top part of a building, it protects the building against the effects of wheather.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRoof.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRoofType": {
    "summary": "The building element type IfcRoofType defines commonly shared information for occurrences of roofs.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRoofType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRoot": {
    "summary": "IfcRoot is the most abstract and root class for all entity definitions that roots in the kernel or in subsequent layers of the IFC specification.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRoot.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcRoundedRectangleProfileDef": {
    "summary": "IfcRoundedRectangleProfileDef defines a rectangle with equally rounded corners as the profile definition used by the swept surface geometry or the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcRoundedRectangleProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSanitaryTerminal": {
    "summary": "A sanitary terminal is a fixed appliance or terminal usually supplied with water and used for drinking, cleaning or foul water disposal or that is an item of equipment directly used with such an appliance or terminal.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSanitaryTerminal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSanitaryTerminalType": {
    "summary": "The flow terminal type IfcSanitaryTerminalType defines commonly shared information for occurrences of sanitary terminals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSanitaryTerminalType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSchedulingTime": {
    "summary": "IfcSchedulingTime is the abstract supertype of entities that capture time-related information of processes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSchedulingTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSeamCurve": {
    "summary": "An IfcSeamCurve is a 3-dimensional curve that has additional representations provided by exactly two distinct pcurves describing the same curve at the two extreme ends of a closed parametric surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSeamCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSectionedSpine": {
    "summary": "An IfcSectionedSpine is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSectionedSpine.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSectionProperties": {
    "summary": "IfcSectionProperties defines the cross section properties for a single longitudinal piece of a cross section.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSectionProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSectionReinforcementProperties": {
    "summary": "IfcSectionReinforcementProperties defines the cross section properties of reinforcement for a single longitudinal piece of a cross section with a specific reinforcement usage type.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSectionReinforcementProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSensor": {
    "summary": "A sensor is a device that measures a physical quantity and converts it into a signal which can be read by an observer or by an instrument.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSensor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSensorType": {
    "summary": "The distribution control element type IfcSensorType defines commonly shared information for occurrences of sensors.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSensorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcShadingDevice": {
    "summary": "Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcShadingDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcShadingDeviceType": {
    "summary": "The building element type IfcShadingDeviceType defines commonly shared information for occurrences of shading devices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcShadingDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcShapeAspect": {
    "summary": "IfcShapeAspect allows for grouping of shape representation items that represent aspects (or components) of the shape of a product.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcShapeAspect.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcShapeModel": {
    "summary": "IfcShapeModel represents the concept of a particular geometric and/or topological representation of a product's shape or a product component's shape within a representation context.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcShapeModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcShapeRepresentation": {
    "summary": "The IfcShapeRepresentation represents the concept of a particular geometric representation of a product or a product component within a specific geometric representation context.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcShapeRepresentation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcShellBasedSurfaceModel": {
    "summary": "An IfcShellBasedSurfaceModel represents the shape by a set of open or closed shells.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcShellBasedSurfaceModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSimpleProperty": {
    "summary": "IfcSimpleProperty is a generalization of a single property object.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSimpleProperty.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSimplePropertyTemplate": {
    "summary": "The IfcSimplePropertyTemplate defines the template for all dynamically extensible properties, either the subtypes of IfcSimpleProperty, or the subtypes of IfcPhysicalSimpleQuantity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSimplePropertyTemplate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSite": {
    "summary": "A site is a defined area of land, possibly covered with water, on which the project construction is to be completed.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSite.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSIUnit": {
    "summary": "The IfcSIUnit covers both standard base SI units such as meter and second, and derived SI units such as Pascal, square meter and cubic meter.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSIUnit.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSlab": {
    "summary": "A slab is a component of the construction that may enclose a space vertically.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSlab.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSlabElementedCase": {
    "summary": "The IfcSlabElementedCase defines a slab with certain constraints for the provision of its components.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSlabElementedCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSlabStandardCase": {
    "summary": "The standard slab, IfcSlabStandardCase, defines a slab with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSlabStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSlabType": {
    "summary": "The element type IfcSlabType defines commonly shared information for occurrences of slabs.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSlabType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSlippageConnectionCondition": {
    "summary": "Describes slippage in support conditions or connection conditions.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSlippageConnectionCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSolarDevice": {
    "summary": "A solar device converts solar radiation into other energy such as electric current or thermal energy.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSolarDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSolarDeviceType": {
    "summary": "The energy conversion device type IfcSolarDeviceType defines commonly shared information for occurrences of solar devices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSolarDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSolidModel": {
    "summary": "An IfcSolidModel represents the 3D shape by different types of solid model representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSolidModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpace": {
    "summary": "A space represents an area or volume bounded actually or theoretically.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpace.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpaceHeater": {
    "summary": "Space heaters utilize a combination of radiation and/or natural convection using a heating source such as electricity, steam or hot water to heat a limited space or area.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpaceHeater.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpaceHeaterType": {
    "summary": "The flow terminal type IfcSpaceHeaterType defines commonly shared information for occurrences of space heaters.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpaceHeaterType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpaceType": {
    "summary": "A space represents an area or volume bounded actually or theoretically.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpaceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpatialElement": {
    "summary": "A spatial element is the generalization of all spatial elements that might be used to define a spatial structure or to define spatial zones.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpatialElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpatialElementType": {
    "summary": "IfcSpatialElementType defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpatialElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpatialStructureElement": {
    "summary": "A spatial structure element is the generalization of all spatial elements that might be used to define a spatial structure.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpatialStructureElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpatialStructureElementType": {
    "summary": "The element type (IfcSpatialStructureElementType) defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpatialStructureElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpatialZone": {
    "summary": "A spatial zone is a non-hierarchical and potentially overlapping decomposition of the project under some functional consideration.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpatialZone.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSpatialZoneType": {
    "summary": "The IfcSpatialZoneType defines a list of commonly shared property set definitions of a space and an optional set of product representations.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSpatialZoneType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSphere": {
    "summary": "The IfcSphere is a Construction Solid SceneGeometry (CSG) 3D primitive.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSphere.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSphericalSurface": {
    "summary": "The IfcSphericalSurface is a bounded elementary surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSphericalSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStackTerminal": {
    "summary": "A stack terminal is placed at the top of a ventilating stack (such as to prevent ingress by birds or rainwater) or rainwater pipe (to act as a collector or hopper for discharge from guttering).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStackTerminal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStackTerminalType": {
    "summary": "The flow terminal type IfcStackTerminalType defines commonly shared information for occurrences of stack terminals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStackTerminalType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStair": {
    "summary": "A stair is a vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStair.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStairFlight": {
    "summary": "A stair flight is an assembly of building components in a single \"run\" of stair steps (not interrupted by a landing).",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStairFlight.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStairFlightType": {
    "summary": "The building element type IfcStairFlightType defines commonly shared information for occurrences of stair flights.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStairFlightType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStairType": {
    "summary": "The building element type IfcStairType defines commonly shared information for occurrences of stairs.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStairType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralAction": {
    "summary": "A structural action is a structural activity that acts upon a structural item or building element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralAction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralActivity": {
    "summary": "The abstract entity IfcStructuralActivity combines the definition of actions (such as forces, displacements, etc.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralActivity.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralAnalysisModel": {
    "summary": "The IfcStructuralAnalysisModel is used to assemble all information needed to represent a structural analysis model.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralAnalysisModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralConnection": {
    "summary": "An IfcStructuralConnection represents a structural connection object (node connection, edge connection, or surface connection) or supports.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralConnection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralConnectionCondition": {
    "summary": "Describe more rarely needed connection properties.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralConnectionCondition.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralCurveAction": {
    "summary": "A structural curve action defines an action which is distributed over a curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralCurveAction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralCurveConnection": {
    "summary": "Instances of IfcStructuralCurveConnection describe edge 'nodes', i.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralCurveConnection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralCurveMember": {
    "summary": "Instances of IfcStructuralCurveMember describe edge members, i.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralCurveMember.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralCurveMemberVarying": {
    "summary": "This entity describes edge members with varying profile properties.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralCurveMemberVarying.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralCurveReaction": {
    "summary": "This entity defines a reaction which occurs distributed over a curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralCurveReaction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralItem": {
    "summary": "The abstract entity IfcStructuralItem is the generalization of structural members and structural connections, that is, analysis idealizations of elements in the building model.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLinearAction": {
    "summary": "This entity defines an action with constant value which is distributed over a curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLinearAction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoad": {
    "summary": "This abstract entity is the supertype of all loads (actions or reactions) or of certain requirements resulting from structural analysis, or certain provisions which influence structural analysis.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoad.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadCase": {
    "summary": "A load case is a load group, commonly used to group loads from the same action source.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadConfiguration": {
    "summary": "This class combines one or more load or result values in a 1- or 2-dimensional configuration.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadConfiguration.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadGroup": {
    "summary": "The entity IfcStructuralLoadGroup is used to structure the physical impacts.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadGroup.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadLinearForce": {
    "summary": "An instance of the entity IfcStructuralLoadLinearForce shall be used to define actions on curves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadLinearForce.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadOrResult": {
    "summary": "Abstract superclass of simple load or result classes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadOrResult.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadPlanarForce": {
    "summary": "An instance of the entity IfcStructuralLoadPlanarForce shall be used to define actions on faces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadPlanarForce.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadSingleDisplacement": {
    "summary": "Instances of the entity IfcStructuralLoadSingleDisplacement shall be used to define displacements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadSingleDisplacement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadSingleDisplacementDistortion": {
    "summary": "Defines a displacement with warping.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadSingleDisplacementDistortion.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadSingleForce": {
    "summary": "Instances of the entity IfcStructuralLoadSingleForce shall be used to define the forces and moments of an action operating on a single point.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadSingleForce.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadSingleForceWarping": {
    "summary": "Instances of the entity IfcStructuralLoadSingleForceWarping, as a subtype of IfcStructuralLoadSingleForce, shall be used to define an action operation on a single point.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadSingleForceWarping.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadStatic": {
    "summary": "The abstract entity IfcStructuralLoadStatic is the supertype of all static loads (actions or reactions) which can be defined.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadStatic.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralLoadTemperature": {
    "summary": "An instance of the entity IfcStructuralLoadTemperature shall be used to define actions which are caused by a temperature change.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralLoadTemperature.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralMember": {
    "summary": "The abstract entity IfcStructuralMember is the superclass of all structural items which represent the idealized structural behavior of building elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralMember.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralPlanarAction": {
    "summary": "This entity defines an action with constant value which is distributed over a surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralPlanarAction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralPointAction": {
    "summary": "This entity defines an action which acts on a point.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralPointAction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralPointConnection": {
    "summary": "Instances of IfcStructuralPointConnection describe structural nodes or point supports.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralPointConnection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralPointReaction": {
    "summary": "This entity defines a reaction which occurs at a point.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralPointReaction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralReaction": {
    "summary": "A structural reaction is a structural activity that results from a structural action imposed to a structural item or building element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralReaction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralResultGroup": {
    "summary": "Instances of the entity IfcStructuralResultGroup are used to group results of structural analysis calculations and to capture the connection to the underlying basic load group.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralResultGroup.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralSurfaceAction": {
    "summary": "This entity defines an action which is distributed over a surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralSurfaceAction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralSurfaceConnection": {
    "summary": "Instances of IfcStructuralSurfaceConnection describe face 'nodes', i.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralSurfaceConnection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralSurfaceMember": {
    "summary": "Instances of IfcStructuralSurfaceMember describe face members, that is, structural analysis idealizations of slabs, walls, and shells.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralSurfaceMember.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralSurfaceMemberVarying": {
    "summary": "This entity describes surface members with varying section properties.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralSurfaceMemberVarying.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStructuralSurfaceReaction": {
    "summary": "This entity defines a reaction which occurs distributed over a surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStructuralSurfaceReaction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStyledItem": {
    "summary": "The IfcStyledItem holds presentation style information for products, either explicitly for an IfcGeometricRepresentationItem being part of an IfcShapeRepresentation assigned to a product, or by assigning presentation information to IfcMaterial being assigned as other representation for a product.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStyledItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStyledRepresentation": {
    "summary": "The IfcStyledRepresentation represents the concept of a styled presentation being a representation of a product or a product component, like material.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStyledRepresentation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcStyleModel": {
    "summary": "IfcStyleModel represents the concept of a particular presentation style defined for a material (or other characteristic) of a product or a product component within a representation context.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcStyleModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSubContractResource": {
    "summary": "IfcSubContractResource is a construction resource needed in a construction process that represents a sub-contractor.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSubContractResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSubContractResourceType": {
    "summary": "The resource type IfcSubContractResourceType defines commonly shared information for occurrences of subcontract resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSubContractResourceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSubedge": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSubedge.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurface": {
    "summary": "An IfcSurface is a 2-dimensional representation item positioned in 3-dimensional space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceCurve": {
    "summary": "An IfcSurfaceCurve is a 3-dimensional curve that has additional representations provided by one or two pcurves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceCurveSweptAreaSolid": {
    "summary": "The IfcSurfaceCurveSweptAreaSolid is the result of sweeping an area along a directrix that lies on a reference surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceCurveSweptAreaSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceFeature": {
    "summary": "A surface feature is a modification at (onto, or into) of the surface of an element.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceFeature.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceOfLinearExtrusion": {
    "summary": "The IfcSurfaceOfLinearExtrusion is a surface derived by sweeping a curve along a vector.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceOfLinearExtrusion.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceOfRevolution": {
    "summary": "The IfcSurfaceOfRevolution is a surface derived by rotating a curve about an axis.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceOfRevolution.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceReinforcementArea": {
    "summary": "Describes required or provided reinforcement area of surface members.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceReinforcementArea.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceStyle": {
    "summary": "IfcSurfaceStyle is an assignment of one or many surface style elements to a surface, defined by subtypes of IfcSurface, IfcFaceBasedSurfaceModel, IfcShellBasedSurfaceModel, or by subtypes of IfcSolidModel.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceStyleLighting": {
    "summary": "IfcSurfaceStyleLighting is a container class for properties for calculation of physically exact illuminance related to a particular surface style.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceStyleLighting.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceStyleRefraction": {
    "summary": "IfcSurfaceStyleRefraction extends the surface style lighting, or the surface style rendering definition for properties for calculation of physically exact illuminance by adding seldomly used properties.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceStyleRefraction.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceStyleRendering": {
    "summary": "IfcSurfaceStyleRendering holds the properties for visualization related to a particular surface side style.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceStyleRendering.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceStyleShading": {
    "summary": "The IfcSurfaceStyleShading allows for colour information and transparency used for shading and simple rendering.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceStyleShading.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceStyleWithTextures": {
    "summary": "The entity IfcSurfaceStyleWithTextures allows to include image textures in surface styles.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceStyleWithTextures.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSurfaceTexture": {
    "summary": "An IfcSurfaceTexture provides a 2-dimensional image-based texture map.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSurfaceTexture.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSweptAreaSolid": {
    "summary": "An IfcSweptAreaSolid represents the 3D shape by a sweeping representation scheme allowing a two dimensional planar cross section to sweep through space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSweptAreaSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSweptDiskSolid": {
    "summary": "An IfcSweptDiskSolid represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSweptDiskSolid.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSweptDiskSolidPolygonal": {
    "summary": "The IfcSweptDiskSolidPolygonal is a IfcSweptDiskSolid where the Directrix is restricted to be provided by an poly line only.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSweptDiskSolidPolygonal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSweptSurface": {
    "summary": "An IfcSweptSurface is a surface defined by sweeping a curve.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSweptSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSwitchingDevice": {
    "summary": "A switch is used in a cable distribution system (electrical circuit) to control or modulate the flow of electricity.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSwitchingDevice.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSwitchingDeviceType": {
    "summary": "The flow controller type IfcSwitchingDeviceType defines commonly shared information for occurrences of switching devices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSwitchingDeviceType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSystem": {
    "summary": "A system is an organized combination of related parts within an AEC product, composed for a kdtree3 purpose or function or to provide a service.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSystem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSystemFurnitureElement": {
    "summary": "A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSystemFurnitureElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcSystemFurnitureElementType": {
    "summary": "The furnishing element type IfcSystemFurnitureElementType defines commonly shared information for occurrences of system furniture elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcSystemFurnitureElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTable": {
    "summary": "An IfcTable is a data structure for the provision of information in the form of rows and columns.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTable.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTableColumn": {
    "summary": "An IfcTableColumn is a data structure that captures column information for use in an IfcTable.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTableColumn.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTableRow": {
    "summary": "IfcTableRow contains data for a single row within an IfcTable.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTableRow.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTank": {
    "summary": "A tank is a vessel or container in which a fluid or gas is stored for later use.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTank.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTankType": {
    "summary": "The flow storage device type IfcTankType defines commonly shared information for occurrences of tanks.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTankType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTask": {
    "summary": "An IfcTask is an identifiable unit of work to be carried out in a construction project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTask.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTaskTime": {
    "summary": "IfcTaskTime captures the time-related information about a task including the different types (actual or scheduled) of starting and ending times.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTaskTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTaskTimeRecurring": {
    "summary": "IfcTaskTimeRecurring is a recurring instance of IfcTaskTime for handling regularly scheduled or repetitive tasks.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTaskTimeRecurring.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTaskType": {
    "summary": "An IfcTaskType defines a particular type of task that may be specified for use within a work control.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTaskType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTelecomAddress": {
    "summary": "This entity represents an address to which telephone, electronic mail and other forms of telecommunications should be addressed.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTelecomAddress.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTendon": {
    "summary": "A tendon is a steel element such as a wire, cable, bar, rod, or strand used to impart prestress to concrete when the element is tensioned.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTendon.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTendonAnchor": {
    "summary": "A tendon anchor is the end connection for tendons in prestressed or posttensioned concrete.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTendonAnchor.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTendonAnchorType": {
    "summary": "The reinforcing element type IfcTendonAnchorType defines commonly shared information for occurrences of tendon anchors.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTendonAnchorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTendonType": {
    "summary": "The reinforcing element type IfcTendonType defines commonly shared information for occurrences of tendons.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTendonType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTessellatedFaceSet": {
    "summary": "The IfcTessellatedFaceSet is a boundary representation topological model limited to planar faces and straight edges.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTessellatedFaceSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTessellatedItem": {
    "summary": "The IfcTessellatedItem is the abstract supertype of all tessellated geometric models.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTessellatedItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextLiteral": {
    "summary": "The text literal is a geometric representation item which describes a text string using a string literal and additional position and path information.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextLiteral.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextLiteralWithExtent": {
    "summary": "The text literal with extent is a text literal with the additional explicit information of the planar extent.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextLiteralWithExtent.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextStyle": {
    "summary": "The IfcTextStyle is a presentation style for annotations that place a text in model space.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextStyleFontModel": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextStyleFontModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextStyleForDefinedFont": {
    "summary": "The IfcTextStyleForDefinedFont combines the text font color with an optional background color, that fills the text box, defined by the planar extent given to the text literal.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextStyleForDefinedFont.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextStyleTextModel": {
    "summary": "The IfcTextStyleTextModel combines all text style properties, that affect the presentation of a text literal within a given extent.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextStyleTextModel.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextureCoordinate": {
    "summary": "The IfcTextureCoordinate is an abstract supertype of the different kinds to apply texture coordinates to geometries.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextureCoordinate.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextureCoordinateGenerator": {
    "summary": "The IfcTextureCoordinateGenerator describes a procedurally defined mapping function with input parameter to map 2D texture coordinates to 3D geometry vertices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextureCoordinateGenerator.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextureMap": {
    "summary": "An IfcTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextureMap.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextureVertex": {
    "summary": "An IfcTextureVertex is a list of 2 (S, T) texture coordinates.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextureVertex.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTextureVertexList": {
    "summary": "The IfcTextureVertexList defines an ordered collection of texture vertices.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTextureVertexList.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTimePeriod": {
    "summary": "IfcTimePeriod defines a time period given by a start and end time.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTimePeriod.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTimeSeries": {
    "summary": "A time series is a set of a time-stamped data entries.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTimeSeries.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTimeSeriesValue": {
    "summary": "A time series value is a list of values that comprise the time series.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTimeSeriesValue.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTopologicalRepresentationItem": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTopologicalRepresentationItem.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTopologyRepresentation": {
    "summary": "IfcTopologyRepresentation represents the concept of a particular topological representation of a product or a product component within a representation context.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTopologyRepresentation.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcToroidalSurface": {
    "summary": "The IfcToroidalSurface is a bounded elementary surface.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcToroidalSurface.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTransformer": {
    "summary": "A transformer is an inductive stationary device that transfers electrical energy from one circuit to another.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTransformer.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTransformerType": {
    "summary": "The energy conversion device type IfcTransformerType defines commonly shared information for occurrences of transformers.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTransformerType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTransportElement": {
    "summary": "A transport element is a generalization of all transport related objects that move people, animals or goods within a facility.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTransportElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTransportElementType": {
    "summary": "The element type IfcTransportElementType  defines commonly shared information for occurrences of transport elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTransportElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTrapeziumProfileDef": {
    "summary": "IfcTrapeziumProfileDef defines a trapezium as the profile definition used by the swept surface geometry or the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTrapeziumProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTriangulatedFaceSet": {
    "summary": "The IfcTriangulatedFaceSet is a tessellated face set with all faces being bound by triangles.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTriangulatedFaceSet.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTrimmedCurve": {
    "summary": "An IfcTrimmedCurve is a bounded curve that is trimmed at both ends.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTrimmedCurve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTShapeProfileDef": {
    "summary": "IfcTShapeProfileDef defines a section profile that provides the defining parameters of a T-shaped section to be used by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTubeBundle": {
    "summary": "A tube bundle is a device consisting of tubes and bundles of tubes used for heat transfer and contained typically within other energy conversion devices, such as a chiller or coil.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTubeBundle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTubeBundleType": {
    "summary": "The energy conversion device type IfcTubeBundleType defines commonly shared information for occurrences of tube bundles.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTubeBundleType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "ifcTypeCodes": {
    "summary": "Map of type codes for all IFC type names.",
    "path": "/api-docs#/docs/api/variables/ifctypes.ifcTypeCodes.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "ifcTypeNames": {
    "summary": "Map of type names for all IFC type codes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.ifcTypeNames.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTypeObject": {
    "summary": "The object type defines the specific information about a type, being kdtree3 to all occurrences of this type.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTypeObject.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTypeProcess": {
    "summary": "IfcTypeProcess defines a specific (or type) definition of a process or activity without being assigned to a schedule or a time.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTypeProcess.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTypeProduct": {
    "summary": "IfcTypeProduct defines a type definition of a product without being already inserted into a project structure (without having a placement), and not being included in the geometric representation context of the project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTypeProduct.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcTypeResource": {
    "summary": "IfcTypeResource defines a specific (or type) definition of a resource.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcTypeResource.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcUnitaryControlElement": {
    "summary": "A unitary control element combines a number of control components into a single product, such as a thermostat or humidistat.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcUnitaryControlElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcUnitaryControlElementType": {
    "summary": "The distribution control element type IfcUnitaryControlElementType defines commonly shared information for occurrences of unitary control elements.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcUnitaryControlElementType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcUnitaryEquipment": {
    "summary": "Unitary equipment typically combine a number of components into a single product, such as air handlers, pre-packaged rooftop air-conditioning units, heat pumps, and split systems.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcUnitaryEquipment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcUnitaryEquipmentType": {
    "summary": "The energy conversion device type IfcUnitaryEquipmentType defines commonly shared information for occurrences of unitary equipments.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcUnitaryEquipmentType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcUnitAssignment": {
    "summary": "IfcUnitAssignment indicates a set of units which may be assigned.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcUnitAssignment.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcUShapeProfileDef": {
    "summary": "IfcUShapeProfileDef defines a section profile that provides the defining parameters of a U-shape (channel) section to be used by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcUShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcValve": {
    "summary": "A valve is used in a building services piping distribution system to control or modulate the flow of the fluid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcValve.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcValveType": {
    "summary": "The flow controller type IfcValveType defines commonly shared information for occurrences of valves.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcValveType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVector": {
    "summary": "An IfcVector is a geometric representation item having both a magnitude and direction.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVector.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVertex": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVertex.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVertexLoop": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVertexLoop.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVertexPoint": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVertexPoint.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVibrationIsolator": {
    "summary": "A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVibrationIsolator.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVibrationIsolatorType": {
    "summary": "The element component type IfcVibrationIsolatorType defines commonly shared information for occurrences of vibration isolators.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVibrationIsolatorType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVirtualElement": {
    "summary": "A virtual element is a special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVirtualElement.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVirtualGridIntersection": {
    "summary": "IfcVirtualGridIntersection defines the derived location of the intersection between two grid axes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVirtualGridIntersection.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcVoidingFeature": {
    "summary": "A voiding feature is a modification of an element which reduces its volume.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcVoidingFeature.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWall": {
    "summary": "The wall represents a vertical construction that may bound or subdivide spaces.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWall.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWallElementedCase": {
    "summary": "The IfcWallElementedCase defines a wall with certain constraints for the provision of its components.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWallElementedCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWallStandardCase": {
    "summary": "The IfcWallStandardCase defines a wall with certain constraints for the provision of parameters and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWallStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWallType": {
    "summary": "The element type IfcWallType defines commonly shared information for occurrences of walls.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWallType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWasteTerminal": {
    "summary": "A waste terminal has the purpose of collecting or intercepting waste from one or more sanitary terminals or other fluid waste generating equipment and discharging it into a single waste/drainage system.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWasteTerminal.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWasteTerminalType": {
    "summary": "The flow terminal type IfcWasteTerminalType defines commonly shared information for occurrences of waste terminals.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWasteTerminalType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWindow": {
    "summary": "The window is a building element that is predominately used to provide natural light and fresh air.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWindow.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWindowLiningProperties": {
    "summary": "The window lining is the outer frame which enables the window to be fixed in position.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWindowLiningProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWindowPanelProperties": {
    "summary": "A window panel is a casement, that is, a component, fixed or opening, consisting essentially of a frame and the infilling.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWindowPanelProperties.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWindowStandardCase": {
    "summary": "The standard window, IfcWindowStandardCase, defines a window with certain constraints for the provision of operation types, opening directions, frame and lining parameters, construction types and with certain constraints for the geometric representation.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWindowStandardCase.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWindowStyle": {
    "summary": "The window style defines a particular style of windows, which may be included into the spatial context of the building model through instances of IfcWindow.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWindowStyle.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWindowType": {
    "summary": "The element type IfcWindowType defines commonly shared information for occurrences of windows.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWindowType.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWorkCalendar": {
    "summary": "An IfcWorkCalendar defines working and non-working time periods for tasks and resources.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWorkCalendar.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWorkControl": {
    "summary": "An IfcWorkControl is an abstract supertype which captures information that is kdtree3 to both IfcWorkPlan and IfcWorkSchedule.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWorkControl.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWorkPlan": {
    "summary": "An IfcWorkPlan represents work plans in a construction or a facilities management project.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWorkPlan.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWorkSchedule": {
    "summary": "An IfcWorkSchedule represents a task schedule of a work plan, which in turn can contain a set of schedules for different purposes.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWorkSchedule.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcWorkTime": {
    "summary": "IfcWorkTime defines time periods that are used by IfcWorkCalendar for either describing working times or non-working exception times.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcWorkTime.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcZone": {
    "summary": "A zone a group of spaces, partial spaces or other zones.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcZone.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "IfcZShapeProfileDef": {
    "summary": "IfcZShapeProfileDef defines a section profile that provides the defining parameters of a Z-shape section to be used by the swept area solid.",
    "path": "/api-docs#/docs/api/variables/ifctypes.IfcZShapeProfileDef.html",
    "kind": "variable",
    "namespace": "ifctypes"
  },
  "InchesUnit": {
    "summary": "Inches unit of measurement.",
    "path": "/api-docs#/docs/api/variables/constants.InchesUnit.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "inQuotes": {
    "summary": "Returns the given ID as a string, in quotes if the ID was a string to begin with.",
    "path": "/api-docs#/docs/api/functions/utils.inQuotes.html",
    "kind": "function",
    "namespace": "utils"
  },
  "INSIDE": {
    "summary": "Intersection state indicating that the first boundary is completely inside the second.",
    "path": "/api-docs#/docs/api/variables/boundaries.INSIDE.html",
    "kind": "variable",
    "namespace": "boundaries"
  },
  "IntArrayParam": {
    "summary": "Represents an array of integer numbers.",
    "path": "/api-docs#/docs/api/types/math.IntArrayParam.html",
    "kind": "type",
    "namespace": "math"
  },
  "INTERSECT": {
    "summary": "Intersection state indicating that two boundaries partially intersect.",
    "path": "/api-docs#/docs/api/variables/boundaries.INTERSECT.html",
    "kind": "variable",
    "namespace": "boundaries"
  },
  "intersectAABB3Lines3": {
    "summary": "Tests if an AABB intersects a lines primitive geometry.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectAABB3Lines3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectAABB3Positions3": {
    "summary": "Tests if an AABB intersects points within the given positions array.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectAABB3Positions3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectAABB3s": {
    "summary": "Tests for intersection between two axis-aligned 3D boundaries.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectAABB3s.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectAABB3Triangles3": {
    "summary": "Tests if an AABB intersects a triangles primitive geometry.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectAABB3Triangles3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectFrustum3AABB3": {
    "summary": "Tests for intersection between a frustum and an axis-aligned 3D boundary.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectFrustum3AABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectFrustum3Lines3": {
    "summary": "Tests if a frustum intersects a lines primitive geometry.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectFrustum3Lines3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectFrustum3Point3": {
    "summary": "Tests if a frustum intersects a single point.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectFrustum3Point3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectFrustum3Positions3": {
    "summary": "Tests if a frustum intersects a points primitive geometry.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectFrustum3Positions3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectFrustum3Triangle3": {
    "summary": "Tests if a frustum intersects a single triangle.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectFrustum3Triangle3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "intersectFrustum3Triangles3": {
    "summary": "Tests if a frustum intersects a triangles primitive geometry.",
    "path": "/api-docs#/docs/api/functions/boundaries.intersectFrustum3Triangles3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "IntType": {
    "summary": "Signed 32-bit integer type.",
    "path": "/api-docs#/docs/api/variables/constants.IntType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "inverseMat4": {
    "summary": "Returns the inverse of the given 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.inverseMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "inverseQuat": {
    "summary": "Computes the inverse of a quaternion.",
    "path": "/api-docs#/docs/api/functions/matrix.inverseQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "isArray": {
    "summary": "Tests if the given object is an array.",
    "path": "/api-docs#/docs/api/functions/utils.isArray.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isEmptyObject": {
    "summary": "Returns true if the given map is empty.",
    "path": "/api-docs#/docs/api/functions/utils.isEmptyObject.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isFunction": {
    "summary": "Tests if the given value is a function.",
    "path": "/api-docs#/docs/api/functions/utils.isFunction.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isID": {
    "summary": "Tests if the given value is an ID.",
    "path": "/api-docs#/docs/api/functions/utils.isID.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isIdentityMat4": {
    "summary": "Tests if the given 4x4 matrix is the identity matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.isIdentityMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "isJSONObject": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.isJSONObject.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isNumeric": {
    "summary": "Tests if the given value is a number.",
    "path": "/api-docs#/docs/api/functions/utils.isNumeric.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isObject": {
    "summary": "Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.",
    "path": "/api-docs#/docs/api/functions/utils.isObject.html",
    "kind": "function",
    "namespace": "utils"
  },
  "isString": {
    "summary": "Tests if the given value is a string.",
    "path": "/api-docs#/docs/api/functions/utils.isString.html",
    "kind": "function",
    "namespace": "utils"
  },
  "JPEGMediaType": {
    "summary": "Media type for JPEG images.",
    "path": "/api-docs#/docs/api/variables/constants.JPEGMediaType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "KdItem2D": {
    "summary": "An item stored in a 2D k-d tree.",
    "path": "/api-docs#/docs/api/interfaces/kdtree2.KdItem2D.html",
    "kind": "interface",
    "namespace": "kdtree2"
  },
  "KdItem3D": {
    "summary": "Binds an item to a KdNode3.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdItem3D.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdLinePrim": {
    "summary": "See @xeokit/sdk/kdtree3 for usage.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdLinePrim.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdNode2D": {
    "summary": "A 2D k-d tree node.",
    "path": "/api-docs#/docs/api/interfaces/kdtree2.KdNode2D.html",
    "kind": "interface",
    "namespace": "kdtree2"
  },
  "KdNode3": {
    "summary": "A node in a KdTree3.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdNode3.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdPointPrim": {
    "summary": "See @xeokit/sdk/kdtree3 for usage.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdPointPrim.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdSceneObjectPrim": {
    "summary": "See @xeokit/sdk/kdtree3 for usage.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdSceneObjectPrim.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdTree2": {
    "summary": "A static 2D k-d tree.",
    "path": "/api-docs#/docs/api/classes/kdtree2.KdTree2.html",
    "kind": "class",
    "namespace": "kdtree2"
  },
  "KdTree2DParams": {
    "summary": "Parameters for creating a 2D k-d tree.",
    "path": "/api-docs#/docs/api/interfaces/kdtree2.KdTree2DParams.html",
    "kind": "interface",
    "namespace": "kdtree2"
  },
  "KdTree3": {
    "summary": "A static k-d tree that organizes anything that has a boundary for\nefficient 3D World-space boundary and frustm searches.",
    "path": "/api-docs#/docs/api/classes/kdtree3.KdTree3.html",
    "kind": "class",
    "namespace": "kdtree3"
  },
  "KdTree3Params": {
    "summary": "Parameters for creating a KdTree3.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdTree3Params.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdTrianglePrim": {
    "summary": "See @xeokit/sdk/kdtree3 for usage.",
    "path": "/api-docs#/docs/api/interfaces/kdtree3.KdTrianglePrim.html",
    "kind": "interface",
    "namespace": "kdtree3"
  },
  "KdVertex2": {
    "summary": "A vertex in a KdTree2.",
    "path": "/api-docs#/docs/api/classes/kdtree2.KdVertex2.html",
    "kind": "class",
    "namespace": "kdtree2"
  },
  "KEY_A": {
    "summary": "Code for the A key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_A.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_ADD": {
    "summary": "Code for the ADD key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_ADD.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_ALT": {
    "summary": "Code for the ALT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_ALT.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_B": {
    "summary": "Code for the B key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_B.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_BACK_SLASH": {
    "summary": "Code for the BACK_SLASH key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_BACK_SLASH.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_BACKSPACE": {
    "summary": "Code for the BACKSPACE key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_BACKSPACE.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_C": {
    "summary": "Code for the C key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_C.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_CAPS_LOCK": {
    "summary": "Code for the CAPS_LOCK key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_CAPS_LOCK.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_CLOSE_BRACKET": {
    "summary": "Code for the CLOSE_BRACKET key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_CLOSE_BRACKET.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_COMMA": {
    "summary": "Code for the COMMA key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_COMMA.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_CTRL": {
    "summary": "Code for the CTRL key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_CTRL.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_D": {
    "summary": "Code for the D key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_D.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_DASH": {
    "summary": "Code for the DASH key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_DASH.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_DECIMAL_POINT": {
    "summary": "Code for the DECIMAL POINT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_DECIMAL_POINT.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_DELETE": {
    "summary": "Code for the DELETE key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_DELETE.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_DIVIDE": {
    "summary": "Code for the DIVIDE key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_DIVIDE.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_DOWN_ARROW": {
    "summary": "Code for the DOWN_ARROW key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_DOWN_ARROW.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_E": {
    "summary": "Code for the E key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_E.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_END": {
    "summary": "Code for the END key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_END.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_ENTER": {
    "summary": "Code for the ENTER key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_ENTER.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_EQUAL_SIGN": {
    "summary": "Code for the EQUAL_SIGN key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_EQUAL_SIGN.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_ESCAPE": {
    "summary": "Code for the ESCAPE key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_ESCAPE.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F": {
    "summary": "Code for the F key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F1": {
    "summary": "Code for the F1 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F1.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F10": {
    "summary": "Code for the F10 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F10.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F11": {
    "summary": "Code for the F11 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F11.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F12": {
    "summary": "Code for the F12 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F12.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F2": {
    "summary": "Code for the F2 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F2.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F3": {
    "summary": "Code for the F3 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F3.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F4": {
    "summary": "Code for the F4 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F4.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F5": {
    "summary": "Code for the F5 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F5.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F6": {
    "summary": "Code for the F6 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F6.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F7": {
    "summary": "Code for the F7 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F7.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F8": {
    "summary": "Code for the F8 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F8.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_F9": {
    "summary": "Code for the F9 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_F9.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_FORWARD_SLASH": {
    "summary": "Code for the FORWARD_SLASH key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_FORWARD_SLASH.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_G": {
    "summary": "Code for the G key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_G.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_GRAVE_ACCENT": {
    "summary": "Code for the GRAVE_ACCENT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_GRAVE_ACCENT.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_H": {
    "summary": "Code for the H key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_H.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_HOME": {
    "summary": "Code for the HOME key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_HOME.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_I": {
    "summary": "Code for the I key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_I.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_INSERT": {
    "summary": "Code for the INSERT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_INSERT.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_J": {
    "summary": "Code for the J key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_J.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_K": {
    "summary": "Code for the K key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_K.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_L": {
    "summary": "Code for the L key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_L.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_LEFT_ARROW": {
    "summary": "Code for the LEFT_ARROW key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_LEFT_ARROW.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_LEFT_WINDOW": {
    "summary": "Code for the LEFT_WINDOW key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_LEFT_WINDOW.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_M": {
    "summary": "Code for the M key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_M.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_MULTIPLY": {
    "summary": "Code for the MULTIPLY key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_MULTIPLY.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_N": {
    "summary": "Code for the N key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_N.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_0": {
    "summary": "Code for the 0 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_0.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_1": {
    "summary": "Code for the 1 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_1.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_2": {
    "summary": "Code for the 2 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_2.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_3": {
    "summary": "Code for the 3 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_3.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_4": {
    "summary": "Code for the 4 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_4.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_5": {
    "summary": "Code for the 5 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_5.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_6": {
    "summary": "Code for the 6 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_6.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_7": {
    "summary": "Code for the 7 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_7.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_8": {
    "summary": "Code for the 8 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_8.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_9": {
    "summary": "Code for the 9 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_9.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUM_LOCK": {
    "summary": "Code for the NUM_LOCK key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUM_LOCK.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_0": {
    "summary": "Code for the number pad 0 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_0.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_1": {
    "summary": "Code for the number pad 1 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_1.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_2": {
    "summary": "Code for the number pad 2 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_2.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_3": {
    "summary": "Code for the number pad 3 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_3.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_4": {
    "summary": "Code for the number pad 4 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_4.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_5": {
    "summary": "Code for the number pad 5 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_5.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_6": {
    "summary": "Code for the number pad 6 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_6.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_7": {
    "summary": "Code for the number pad 7 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_7.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_8": {
    "summary": "Code for the number pad 8 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_8.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_NUMPAD_9": {
    "summary": "Code for the number pad 9 key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_NUMPAD_9.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_O": {
    "summary": "Code for the O key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_O.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_OPEN_BRACKET": {
    "summary": "Code for the OPEN_BRACKET key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_OPEN_BRACKET.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_P": {
    "summary": "Code for the P key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_P.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_PAGE_DOWN": {
    "summary": "Code for the PAGE_DOWN key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_PAGE_DOWN.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_PAGE_UP": {
    "summary": "Code for the PAGE_UP key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_PAGE_UP.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_PAUSE_BREAK": {
    "summary": "Code for the PAUSE_BREAK key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_PAUSE_BREAK.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_PERIOD": {
    "summary": "Code for the PERIOD key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_PERIOD.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_Q": {
    "summary": "Code for the Q key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_Q.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_R": {
    "summary": "Code for the R key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_R.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_RIGHT_ARROW": {
    "summary": "Code for the RIGHT_ARROW key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_RIGHT_ARROW.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_RIGHT_WINDOW": {
    "summary": "Code for the RIGHT_WINDOW key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_RIGHT_WINDOW.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_S": {
    "summary": "Code for the S key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_S.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SCROLL_LOCK": {
    "summary": "Code for the SCROLL_LOCK key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SCROLL_LOCK.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SELECT_KEY": {
    "summary": "Code for the SELECT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SELECT_KEY.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SEMI_COLON": {
    "summary": "Code for the SEMI_COLON key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SEMI_COLON.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SHIFT": {
    "summary": "Code for the SHIFT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SHIFT.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SINGLE_QUOTE": {
    "summary": "Code for the SINGLE_QUOTE key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SINGLE_QUOTE.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SPACE": {
    "summary": "Code for the SPACE key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SPACE.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_SUBTRACT": {
    "summary": "Code for the SUBTRACT key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_SUBTRACT.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_T": {
    "summary": "Code for the T key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_T.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_TAB": {
    "summary": "Code for the TAB key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_TAB.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_U": {
    "summary": "Code for the U key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_U.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_UP_ARROW": {
    "summary": "Code for the UP_ARROW key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_UP_ARROW.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_V": {
    "summary": "Code for the V key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_V.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_W": {
    "summary": "Code for the W key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_W.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_X": {
    "summary": "Code for the X key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_X.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_Y": {
    "summary": "Code for the Y key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_Y.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KEY_Z": {
    "summary": "Code for the Z key.",
    "path": "/api-docs#/docs/api/variables/cameracontrol.KEY_Z.html",
    "kind": "variable",
    "namespace": "cameracontrol"
  },
  "KTX2TextureTranscoder": {
    "summary": "[KTX2](https://xeokit.",
    "path": "/api-docs#/docs/api/classes/ktx2.KTX2TextureTranscoder.html",
    "kind": "class",
    "namespace": "ktx2"
  },
  "LandUse": {
    "summary": "This CityJSON type represents the land use of a particular area, such as residential, commercial, or industrial zones.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.LandUse.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "lenVec2": {
    "summary": "Returns the length of a two-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.lenVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "lenVec3": {
    "summary": "Returns the length of a three-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.lenVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "lenVec4": {
    "summary": "Returns the length of a four-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.lenVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "lerpMat4": {
    "summary": "Linearly interpolates between two 4x4 matrices.",
    "path": "/api-docs#/docs/api/functions/matrix.lerpMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "lerpVec3": {
    "summary": "Linearly interpolates between two 3D vectors.",
    "path": "/api-docs#/docs/api/functions/matrix.lerpVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "LinearEncoding": {
    "summary": "Texture encoding mode in which the texture image is in linear color space.",
    "path": "/api-docs#/docs/api/variables/constants.LinearEncoding.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LinearFilter": {
    "summary": "Texture magnification and minification filter that returns the weighted average of the four nearest texels to the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.LinearFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LinearMipmapLinearFilter": {
    "summary": "Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured,\nfinds within each mipmap the weighted average of the nearest texel to the center of the pixel, then returns the\nweighted average of those two values.",
    "path": "/api-docs#/docs/api/variables/constants.LinearMipmapLinearFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LinearMipMapLinearFilter": {
    "summary": "Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured,\nfinds within each mipmap the weighted average of the nearest texel to the center of the pixel, then returns the\nweighted average of those two values.",
    "path": "/api-docs#/docs/api/variables/constants.LinearMipMapLinearFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LinearMipmapNearestFilter": {
    "summary": "Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and\nreturns the weighted average of the four nearest texels to the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.LinearMipmapNearestFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LinearMipMapNearestFilter": {
    "summary": "Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and\nreturns the weighted average of the four nearest texels to the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.LinearMipMapNearestFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LinesMaterial": {
    "summary": "Configures the appearance of \"lines\" geometry primitives.",
    "path": "/api-docs#/docs/api/classes/viewer.LinesMaterial.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "LinesPrimitive": {
    "summary": "Line segments primitive type.",
    "path": "/api-docs#/docs/api/variables/constants.LinesPrimitive.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "loadArraybuffer": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.loadArraybuffer.html",
    "kind": "function",
    "namespace": "utils"
  },
  "loadBCFViewpoint": {
    "summary": "Loads a BCFViewpoint into a View.",
    "path": "/api-docs#/docs/api/functions/bcf.loadBCFViewpoint.html",
    "kind": "function",
    "namespace": "bcf"
  },
  "LoadBCFViewpointParams": {
    "summary": "Options for loadBCFViewpoint.",
    "path": "/api-docs#/docs/api/interfaces/bcf.LoadBCFViewpointParams.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "loadCityJSON": {
    "summary": "Loads CityJSON into a SceneModel and/or a DataModel.",
    "path": "/api-docs#/docs/api/functions/cityjson.loadCityJSON.html",
    "kind": "function",
    "namespace": "cityjson"
  },
  "loadDataModel": {
    "summary": "Loads DataModelParams into a DataModel.",
    "path": "/api-docs#/docs/api/functions/data.loadDataModel.html",
    "kind": "function",
    "namespace": "data"
  },
  "loadDotBIM": {
    "summary": "Loads a .",
    "path": "/api-docs#/docs/api/functions/dotbim.loadDotBIM.html",
    "kind": "function",
    "namespace": "dotbim"
  },
  "LOADED_XGF_VERSIONS": {
    "summary": "The XGF versions supported by loadXGF.",
    "path": "/api-docs#/docs/api/variables/xgf.LOADED_XGF_VERSIONS.html",
    "kind": "variable",
    "namespace": "xgf"
  },
  "Loader": {
    "summary": "",
    "path": "/api-docs#/docs/api/classes/utils.Loader.html",
    "kind": "class",
    "namespace": "utils"
  },
  "loadGLTF": {
    "summary": "Loads glTF file data into a SceneModel and/or\na DataModel.",
    "path": "/api-docs#/docs/api/functions/gltf.loadGLTF.html",
    "kind": "function",
    "namespace": "gltf"
  },
  "LoadingManager": {
    "summary": "",
    "path": "/api-docs#/docs/api/classes/utils.LoadingManager.html",
    "kind": "class",
    "namespace": "utils"
  },
  "loadJSON": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.loadJSON.html",
    "kind": "function",
    "namespace": "utils"
  },
  "loadLAS": {
    "summary": "Loads LAS/LAZ file data from an ArrayBuffer into a SceneModel and/or a DataModel.",
    "path": "/api-docs#/docs/api/functions/las.loadLAS.html",
    "kind": "function",
    "namespace": "las"
  },
  "loadMetaModel": {
    "summary": "Loads a legacy xeokit metamodel JSON representation into a DataModel.",
    "path": "/api-docs#/docs/api/functions/metamodel.loadMetaModel.html",
    "kind": "function",
    "namespace": "metamodel"
  },
  "loadWebIFC": {
    "summary": "Uses WebIFc to load an IFC file into a SceneModel and/or DataModel.",
    "path": "/api-docs#/docs/api/functions/webifc.loadWebIFC.html",
    "kind": "function",
    "namespace": "webifc"
  },
  "loadXGF": {
    "summary": "Imports [XGF](https://xeokit.",
    "path": "/api-docs#/docs/api/functions/xgf.loadXGF.html",
    "kind": "function",
    "namespace": "xgf"
  },
  "loadXKT": {
    "summary": "Imports [XKT](https://xeokit.",
    "path": "/api-docs#/docs/api/functions/xkt.loadXKT.html",
    "kind": "function",
    "namespace": "xkt"
  },
  "loadXKTManifest": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/xkt.loadXKTManifest.html",
    "kind": "function",
    "namespace": "xkt"
  },
  "LocaleService": {
    "summary": "The localization service for a Viewer.",
    "path": "/api-docs#/docs/api/classes/locale.LocaleService.html",
    "kind": "class",
    "namespace": "locale"
  },
  "lookAtMat4v": {
    "summary": "Creates a 4x4 'lookAt' viewing transformation matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.lookAtMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "LuminanceAlphaFormat": {
    "summary": "Texture sampling mode that reads each of the ````RGBA```` texture components as a luminance/alpha value, converted to a float and clamped to ````[0,1]````.",
    "path": "/api-docs#/docs/api/variables/constants.LuminanceAlphaFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "LuminanceFormat": {
    "summary": "Texture sampling mode that reads each ````RGB```` texture component as a luminance value, converted to a float and clamped\nto ````[0,1]````, while always reading the ````A```` channel as ````1.",
    "path": "/api-docs#/docs/api/variables/constants.LuminanceFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "MarqueePickResult": {
    "summary": "Marquee picking results returned by marqueePick.",
    "path": "/api-docs#/docs/api/interfaces/pick.MarqueePickResult.html",
    "kind": "interface",
    "namespace": "pick"
  },
  "mat3ToMat4": {
    "summary": "Converts a 3x3 matrix to a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.mat3ToMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mat4ToEuler": {
    "summary": "Converts a 4x4 matrix to Euler angles.",
    "path": "/api-docs#/docs/api/functions/matrix.mat4ToEuler.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mat4ToQuat": {
    "summary": "Encodes rotation from a matrix into a quaternion.",
    "path": "/api-docs#/docs/api/functions/matrix.mat4ToQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "MAX_DOUBLE": {
    "summary": "Maximum safe double-precision value.",
    "path": "/api-docs#/docs/api/variables/math.MAX_DOUBLE.html",
    "kind": "variable",
    "namespace": "math"
  },
  "MAX_INT": {
    "summary": "Maximum safe integer value.",
    "path": "/api-docs#/docs/api/variables/math.MAX_INT.html",
    "kind": "variable",
    "namespace": "math"
  },
  "MeshHit": {
    "summary": "Represents an intersecting SceneMesh within a RayPickResult.",
    "path": "/api-docs#/docs/api/interfaces/pick.MeshHit.html",
    "kind": "interface",
    "namespace": "pick"
  },
  "MetaModelParams": {
    "summary": "Legacy metadata model parameters.",
    "path": "/api-docs#/docs/api/interfaces/metamodel.MetaModelParams.html",
    "kind": "interface",
    "namespace": "metamodel"
  },
  "MetaObjectParams": {
    "summary": "Legacy metadata object parameters.",
    "path": "/api-docs#/docs/api/interfaces/metamodel.MetaObjectParams.html",
    "kind": "interface",
    "namespace": "metamodel"
  },
  "MetaPropertyParams": {
    "summary": "Legacy metadata property parameters.",
    "path": "/api-docs#/docs/api/interfaces/metamodel.MetaPropertyParams.html",
    "kind": "interface",
    "namespace": "metamodel"
  },
  "MetaPropertySetParams": {
    "summary": "Legacy metadata property set parameters.",
    "path": "/api-docs#/docs/api/interfaces/metamodel.MetaPropertySetParams.html",
    "kind": "interface",
    "namespace": "metamodel"
  },
  "MetersUnit": {
    "summary": "Meters unit of measurement.",
    "path": "/api-docs#/docs/api/variables/constants.MetersUnit.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Metrics": {
    "summary": "Configures its View's measurement unit and mapping between the Real-space and World-space 3D Cartesian coordinate systems.",
    "path": "/api-docs#/docs/api/classes/viewer.Metrics.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "MillimetersUnit": {
    "summary": "Millimeters unit of measurement.",
    "path": "/api-docs#/docs/api/variables/constants.MillimetersUnit.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "MIN_DOUBLE": {
    "summary": "Minimum safe double-precision value.",
    "path": "/api-docs#/docs/api/variables/math.MIN_DOUBLE.html",
    "kind": "variable",
    "namespace": "math"
  },
  "MirroredRepeatWrapping": {
    "summary": "Texture wrapping mode in which the texture repeats to infinity, mirroring on each repeat.",
    "path": "/api-docs#/docs/api/variables/constants.MirroredRepeatWrapping.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "ModelChunksLoader": {
    "summary": "Loads a SceneModel and/or DataModel from a set of chunk files.",
    "path": "/api-docs#/docs/api/classes/modelchunksloader.ModelChunksLoader.html",
    "kind": "class",
    "namespace": "modelchunksloader"
  },
  "ModelChunksManifestParams": {
    "summary": "",
    "path": "/api-docs#/docs/api/interfaces/core.ModelChunksManifestParams.html",
    "kind": "interface",
    "namespace": "core"
  },
  "mulMat3": {
    "summary": "Multiplies two 3x3 matrices and stores the result in a destination matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.mulMat3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulMat4": {
    "summary": "Multiplies two 4x4 matrices and stores the result in a destination matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.mulMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulMat4v4": {
    "summary": "Multiplies a 4x4 matrix by a four-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.mulMat4v4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulQuats": {
    "summary": "Multiplies two quaternions.",
    "path": "/api-docs#/docs/api/functions/matrix.mulQuats.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulVec2Scalar": {
    "summary": "Multiplies each element of a two-element vector by a scalar.",
    "path": "/api-docs#/docs/api/functions/matrix.mulVec2Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulVec3Scalar": {
    "summary": "Multiplies each element of a three-element vector by a scalar.",
    "path": "/api-docs#/docs/api/functions/matrix.mulVec3Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulVec4": {
    "summary": "Multiplies one three-element vector by another.",
    "path": "/api-docs#/docs/api/functions/matrix.mulVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "mulVec4Scalar": {
    "summary": "Multiplies each element of a four-element vector by a scalar.",
    "path": "/api-docs#/docs/api/functions/matrix.mulVec4Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "NearestFilter": {
    "summary": "Texture magnification and minification filter that returns the nearest texel to the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.NearestFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "NearestMipmapLinearFilter": {
    "summary": "Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured\nand returns the nearest texel to the center of the pixel at the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.NearestMipmapLinearFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "NearestMipMapLinearFilter": {
    "summary": "Texture minification filter that chooses two mipmaps that most closely match the size of the pixel being textured\nand returns the nearest texel to the center of the pixel at the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.NearestMipMapLinearFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "NearestMipmapNearestFilter": {
    "summary": "Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured\nand returns the nearest texel to the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.NearestMipmapNearestFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "NearestMipMapNearestFilter": {
    "summary": "Texture minification filter that chooses the mipmap that most closely matches the size of the pixel being textured and returns the nearest texel to the given sample coordinates.",
    "path": "/api-docs#/docs/api/variables/constants.NearestMipMapNearestFilter.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "negateVec3": {
    "summary": "Negates a 3D vector.",
    "path": "/api-docs#/docs/api/functions/matrix.negateVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "negateVec4": {
    "summary": "Negates a 4D vector.",
    "path": "/api-docs#/docs/api/functions/matrix.negateVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "newFloatArray": {
    "summary": "Creates a new FloatArrayParam instance.",
    "path": "/api-docs#/docs/api/functions/math.newFloatArray.html",
    "kind": "function",
    "namespace": "math"
  },
  "normalizeQuat": {
    "summary": "Normalizes a quaternion.",
    "path": "/api-docs#/docs/api/functions/matrix.normalizeQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "normalizeVec2": {
    "summary": "Normalizes a two-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.normalizeVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "normalizeVec3": {
    "summary": "Normalizes a three-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.normalizeVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "normalizeVec4": {
    "summary": "Normalizes a four-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.normalizeVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "OBB3ToAABB3": {
    "summary": "Computes the axis-aligned bounding box (AABB) enclosing an oriented bounding box (OBB).",
    "path": "/api-docs#/docs/api/functions/boundaries.OBB3ToAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "octEncodeNormal": {
    "summary": "Oct-encodes a single normal vector (x, y) into a 2-byte representation.",
    "path": "/api-docs#/docs/api/functions/compression.octEncodeNormal.html",
    "kind": "function",
    "namespace": "compression"
  },
  "octEncodeVec3": {
    "summary": "Oct-encodes a 3D vector (x, y, z) into a 2-byte representation.",
    "path": "/api-docs#/docs/api/functions/compression.octEncodeVec3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "OrbitNavigationMode": {
    "summary": "Orbit navigation mode.",
    "path": "/api-docs#/docs/api/variables/constants.OrbitNavigationMode.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "orthoMat4c": {
    "summary": "Returns a 4x4 orthographic projection matrix based on the given left, right, bottom, top, near, and far planes.",
    "path": "/api-docs#/docs/api/functions/matrix.orthoMat4c.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "OrthoProjection": {
    "summary": "Orthographic projection configuration for a Camera .",
    "path": "/api-docs#/docs/api/classes/viewer.OrthoProjection.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "OrthoProjectionParams": {
    "summary": "Parameters for an OrthoProjection.",
    "path": "/api-docs#/docs/api/interfaces/viewer.OrthoProjectionParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "OrthoProjectionType": {
    "summary": "Orthographic projection type.",
    "path": "/api-docs#/docs/api/variables/constants.OrthoProjectionType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "OtherConstruction": {
    "summary": "This CityJSON type represents an unclassified, generic element of construction.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.OtherConstruction.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "OUTSIDE": {
    "summary": "Intersection state indicating that two boundaries do not intersect.",
    "path": "/api-docs#/docs/api/variables/boundaries.OUTSIDE.html",
    "kind": "variable",
    "namespace": "boundaries"
  },
  "perspectiveMat4": {
    "summary": "Returns a 4x4 perspective projection matrix based on the given field of view, aspect ratio, and near/far clipping planes.",
    "path": "/api-docs#/docs/api/functions/matrix.perspectiveMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "PerspectiveProjection": {
    "summary": "PerspectiveProjection projection configuration for a Camera .",
    "path": "/api-docs#/docs/api/classes/viewer.PerspectiveProjection.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "PerspectiveProjectionParams": {
    "summary": "Parameters for a PerspectiveProjection.",
    "path": "/api-docs#/docs/api/interfaces/viewer.PerspectiveProjectionParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "PerspectiveProjectionType": {
    "summary": "Perspective projection type.",
    "path": "/api-docs#/docs/api/variables/constants.PerspectiveProjectionType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Picker": {
    "summary": "See @xeokit/sdk/pick for usage.",
    "path": "/api-docs#/docs/api/classes/pick.Picker.html",
    "kind": "class",
    "namespace": "pick"
  },
  "PickParams": {
    "summary": "TODO.",
    "path": "/api-docs#/docs/api/interfaces/viewer.PickParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "PickResult": {
    "summary": "Results of a pick attempted with View.",
    "path": "/api-docs#/docs/api/classes/viewer.PickResult.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "PlantCover": {
    "summary": "This CityJSON type represents vegetation, such as trees, bushes, and grass.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.PlantCover.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "PlanViewNavigationMode": {
    "summary": "Plan view navigation mode.",
    "path": "/api-docs#/docs/api/variables/constants.PlanViewNavigationMode.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "PNGMediaType": {
    "summary": "Media type for PNG images.",
    "path": "/api-docs#/docs/api/variables/constants.PNGMediaType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "PointLight": {
    "summary": "A positional light source within a View.",
    "path": "/api-docs#/docs/api/classes/viewer.PointLight.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "PointLightParams": {
    "summary": "Parameters for a PointLight.",
    "path": "/api-docs#/docs/api/interfaces/viewer.PointLightParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "points3ToAABB3": {
    "summary": "Computes the axis-aligned bounding box (AABB) enclosing a set of 3D points.",
    "path": "/api-docs#/docs/api/functions/boundaries.points3ToAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "PointsMaterial": {
    "summary": "Configures the size and shape of ViewObjects that represent clouds of points.",
    "path": "/api-docs#/docs/api/classes/viewer.PointsMaterial.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "PointsMaterialParams": {
    "summary": "Parameters for a PointsMaterial.",
    "path": "/api-docs#/docs/api/interfaces/viewer.PointsMaterialParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "PointsPrimitive": {
    "summary": "Points primitive type.",
    "path": "/api-docs#/docs/api/variables/constants.PointsPrimitive.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "positions3ToAABB3": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/boundaries.positions3ToAABB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "PrimHit": {
    "summary": "Represents an intersecting primitive within a RayPickResult.",
    "path": "/api-docs#/docs/api/interfaces/pick.PrimHit.html",
    "kind": "interface",
    "namespace": "pick"
  },
  "PrimsKdTree3": {
    "summary": "k-d tree built by createPrimsKdTree3 that contains KdTriangle3, KdLine3 and KdPoint3 item types.",
    "path": "/api-docs#/docs/api/classes/kdtree3.PrimsKdTree3.html",
    "kind": "class",
    "namespace": "kdtree3"
  },
  "Projection": {
    "summary": "",
    "path": "/api-docs#/docs/api/interfaces/viewer.Projection.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "Property": {
    "summary": "Represents a property in a PropertySet.",
    "path": "/api-docs#/docs/api/classes/data.Property.html",
    "kind": "class",
    "namespace": "data"
  },
  "PropertyParams": {
    "summary": "Parameters for creating a Property.",
    "path": "/api-docs#/docs/api/interfaces/data.PropertyParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "PropertySet": {
    "summary": "Represents a set of Properties within a DataModel.",
    "path": "/api-docs#/docs/api/classes/data.PropertySet.html",
    "kind": "class",
    "namespace": "data"
  },
  "PropertySetParams": {
    "summary": "Parameters used to define a PropertySet.",
    "path": "/api-docs#/docs/api/interfaces/data.PropertySetParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "QualityRender": {
    "summary": "Quality rendering mode.",
    "path": "/api-docs#/docs/api/variables/constants.QualityRender.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "quantizePositions3": {
    "summary": "Quantizes the position values of 3D coordinates into a compressed 16-bit representation.",
    "path": "/api-docs#/docs/api/functions/compression.quantizePositions3.html",
    "kind": "function",
    "namespace": "compression"
  },
  "quantizePositions3AndCreateMat4": {
    "summary": "Quantizes 3D position data into a compressed 16-bit format and generates a matrix for decompressing the positions.",
    "path": "/api-docs#/docs/api/functions/compression.quantizePositions3AndCreateMat4.html",
    "kind": "function",
    "namespace": "compression"
  },
  "quatToAngleAxis": {
    "summary": "Converts a quaternion to angle-axis representation.",
    "path": "/api-docs#/docs/api/functions/matrix.quatToAngleAxis.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "quatToEuler": {
    "summary": "Converts a quaternion into Euler angles.",
    "path": "/api-docs#/docs/api/functions/matrix.quatToEuler.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "quatToMat4": {
    "summary": "Converts a quaternion into a 4x4 rotation matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.quatToMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "quatToRotationMat4": {
    "summary": "Converts a quaternion to a 4x4 rotation matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.quatToRotationMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "Queue": {
    "summary": "",
    "path": "/api-docs#/docs/api/classes/utils.Queue.html",
    "kind": "class",
    "namespace": "utils"
  },
  "QWERTYLayout": {
    "summary": "QWERTY keyboard layout.",
    "path": "/api-docs#/docs/api/variables/constants.QWERTYLayout.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RADTODEG": {
    "summary": "Converts radians to degrees.",
    "path": "/api-docs#/docs/api/variables/math.RADTODEG.html",
    "kind": "variable",
    "namespace": "math"
  },
  "Railway": {
    "summary": "This CityJSON type represents a railway, which can have attributes such as track type and location.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.Railway.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "RayPickResult": {
    "summary": "Ray picking results returned by rayPick.",
    "path": "/api-docs#/docs/api/interfaces/pick.RayPickResult.html",
    "kind": "interface",
    "namespace": "pick"
  },
  "rayTriangleIntersect": {
    "summary": "Computes the intersection of a 3D ray with a 3D triangle.",
    "path": "/api-docs#/docs/api/functions/matrix.rayTriangleIntersect.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "rcpVec3": {
    "summary": "Returns the reciprocal of a three-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.rcpVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "RedFormat": {
    "summary": "Texture sampling mode that discards the ````GBA```` components and just reads the ````R```` component.",
    "path": "/api-docs#/docs/api/variables/constants.RedFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RedIntegerFormat": {
    "summary": "Texture sampling mode that discards the ````GBA```` components and just reads the ````R```` component, as an integer instead of as a float.",
    "path": "/api-docs#/docs/api/variables/constants.RedIntegerFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Relationship": {
    "summary": "Represents a relationship between two DataObjects.",
    "path": "/api-docs#/docs/api/classes/data.Relationship.html",
    "kind": "class",
    "namespace": "data"
  },
  "RelationshipParams": {
    "summary": "Parameters for a Relationship.",
    "path": "/api-docs#/docs/api/interfaces/data.RelationshipParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "Renderer": {
    "summary": "Interface defining the rendering strategy used internally by a Viewer.",
    "path": "/api-docs#/docs/api/interfaces/viewer.Renderer.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "RendererGeometry": {
    "summary": "Internal interface through which a SceneGeometry can load any updated geometry arrays into a render, if attached.",
    "path": "/api-docs#/docs/api/interfaces/scene.RendererGeometry.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "RendererMesh": {
    "summary": "Internal interface through which a SceneMesh loads attribute updates\ninto a Viewer's Renderer.",
    "path": "/api-docs#/docs/api/interfaces/scene.RendererMesh.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "RendererModel": {
    "summary": "Internal interface through which a SceneModel can load content updates\n into a Viewer's Renderer.",
    "path": "/api-docs#/docs/api/interfaces/scene.RendererModel.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "RendererObject": {
    "summary": "Interface through which a ViewObject controls the appearance of\na SceneObject in a Viewer.",
    "path": "/api-docs#/docs/api/interfaces/scene.RendererObject.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "RendererTexture": {
    "summary": "Interface through which a SceneTexture loads content updates (ie.",
    "path": "/api-docs#/docs/api/interfaces/scene.RendererTexture.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "RendererTextureSet": {
    "summary": "Interface through which a SceneTextureSet loads updated texture data\ninto a Viewer's Renderer.",
    "path": "/api-docs#/docs/api/interfaces/scene.RendererTextureSet.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "RepeatWrapping": {
    "summary": "Texture wrapping mode in which the texture repeats to infinity.",
    "path": "/api-docs#/docs/api/variables/constants.RepeatWrapping.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "ResolutionScale": {
    "summary": "Configures canvas resolution scaling for a View.",
    "path": "/api-docs#/docs/api/classes/viewer.ResolutionScale.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "ResolutionScaleParams": {
    "summary": "Parameters for a ResolutionScale.",
    "path": "/api-docs#/docs/api/interfaces/viewer.ResolutionScaleParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "RGB_ETC1_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGB_ETC1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGB_ETC2_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGB_ETC2_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGB_PVRTC_2BPPV1_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGB_PVRTC_2BPPV1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGB_PVRTC_4BPPV1_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGB_PVRTC_4BPPV1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGB_S3TC_DXT1_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGB_S3TC_DXT1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_10x10_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_10x10_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_10x5_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_10x5_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_10x6_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_10x6_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_10x8_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_10x8_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_12x10_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_12x10_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_12x12_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_12x12_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_4x4_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_4x4_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_5x4_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_5x4_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_5x5_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_5x5_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_6x5_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_6x5_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_6x6_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_6x6_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_8x5_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_8x5_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_8x6_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_8x6_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ASTC_8x8_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ASTC_8x8_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_BPTC_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://www.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_BPTC_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_ETC2_EAC_Format": {
    "summary": "Texture format mode in which the texture is formatted as an <a href=\"https://registry.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_ETC2_EAC_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_PVRTC_2BPPV1_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_PVRTC_2BPPV1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_PVRTC_4BPPV1_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_PVRTC_4BPPV1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_S3TC_DXT1_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_S3TC_DXT1_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_S3TC_DXT3_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_S3TC_DXT3_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBA_S3TC_DXT5_Format": {
    "summary": "Texture format mode in which the texture is formatted as a <a href=\"https://en.",
    "path": "/api-docs#/docs/api/variables/constants.RGBA_S3TC_DXT5_Format.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBAFormat": {
    "summary": "Texture sampling mode that reads the ````RGBA```` components.",
    "path": "/api-docs#/docs/api/variables/constants.RGBAFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBAIntegerFormat": {
    "summary": "Texture sampling mode that reads the ````RGBA```` components as integers instead of floats.",
    "path": "/api-docs#/docs/api/variables/constants.RGBAIntegerFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGBFormat": {
    "summary": "Texture sampling mode that discards the ````A```` component and reads the ````RGB```` components.",
    "path": "/api-docs#/docs/api/variables/constants.RGBFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGFormat": {
    "summary": "Texture sampling mode that discards the ````A```` and ````B```` components and just reads the ````R```` and ````G```` components.",
    "path": "/api-docs#/docs/api/variables/constants.RGFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "RGIntegerFormat": {
    "summary": "Texture sampling mode that discards the ````A```` and ````B```` components and just reads the ````R```` and ````G```` components, as integers instead of floats.",
    "path": "/api-docs#/docs/api/variables/constants.RGIntegerFormat.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Road": {
    "summary": "This CityJSON type represents a road, which can have attributes such as type and location.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.Road.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "rotationMat4v": {
    "summary": "Creates a 4x4 rotation matrix that rotates a given vector around an arbitrary axis by a specified angle.",
    "path": "/api-docs#/docs/api/functions/matrix.rotationMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "RTC_CELL_SIZE": {
    "summary": "The size of the coordinate cells in the Relative-To-Center (RTC) system.",
    "path": "/api-docs#/docs/api/variables/rtc.RTC_CELL_SIZE.html",
    "kind": "variable",
    "namespace": "rtc"
  },
  "rtcToWorldPos": {
    "summary": "Converts an RTC position back to World-space.",
    "path": "/api-docs#/docs/api/functions/rtc.rtcToWorldPos.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "safeInv": {
    "summary": "Computes a safe inverse of a number.",
    "path": "/api-docs#/docs/api/functions/math.safeInv.html",
    "kind": "function",
    "namespace": "math"
  },
  "SAO": {
    "summary": "Configures Scalable Ambient Obscurance (SAO) for a View.",
    "path": "/api-docs#/docs/api/classes/viewer.SAO.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "SAOParams": {
    "summary": "Parameters for an SAO.",
    "path": "/api-docs#/docs/api/interfaces/viewer.SAOParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "saveArrayBuffer": {
    "summary": "Downloads an ArrayBuffer to a file.",
    "path": "/api-docs#/docs/api/functions/utils.saveArrayBuffer.html",
    "kind": "function",
    "namespace": "utils"
  },
  "saveBCFViewpoint": {
    "summary": "Saves a View to a BCFViewpoint.",
    "path": "/api-docs#/docs/api/functions/bcf.saveBCFViewpoint.html",
    "kind": "function",
    "namespace": "bcf"
  },
  "SaveBCFViewpointParams": {
    "summary": "Parameters for saveBCFViewpoint.",
    "path": "/api-docs#/docs/api/interfaces/bcf.SaveBCFViewpointParams.html",
    "kind": "interface",
    "namespace": "bcf"
  },
  "SAVED_XGF_VERSIONS": {
    "summary": "The XGF versions supported by saveXGF.",
    "path": "/api-docs#/docs/api/variables/xgf.SAVED_XGF_VERSIONS.html",
    "kind": "variable",
    "namespace": "xgf"
  },
  "saveDotBIM": {
    "summary": "Exports a SceneModel and/or a DataModel to a JSON object\ncontaining the corresponding .",
    "path": "/api-docs#/docs/api/functions/dotbim.saveDotBIM.html",
    "kind": "function",
    "namespace": "dotbim"
  },
  "saveJSON": {
    "summary": "Downloads JSON to a file.",
    "path": "/api-docs#/docs/api/functions/utils.saveJSON.html",
    "kind": "function",
    "namespace": "utils"
  },
  "saveXGF": {
    "summary": "Exports a SceneModel to an ArrayBuffer\ncontaining [XGF](https://xeokit.",
    "path": "/api-docs#/docs/api/functions/xgf.saveXGF.html",
    "kind": "function",
    "namespace": "xgf"
  },
  "scaleMat4c": {
    "summary": "Efficiently applies scaling to a 4x4 matrix using individual scale factors.",
    "path": "/api-docs#/docs/api/functions/matrix.scaleMat4c.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "scaleMat4v": {
    "summary": "Efficiently applies scaling to a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.scaleMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "scalingMat3v": {
    "summary": "Returns a 3x3 scaling matrix based on the given vector.",
    "path": "/api-docs#/docs/api/functions/matrix.scalingMat3v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "scalingMat4c": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/matrix.scalingMat4c.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "scalingMat4s": {
    "summary": "Returns a 4x4 scaling matrix with uniform scaling.",
    "path": "/api-docs#/docs/api/functions/matrix.scalingMat4s.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "scalingMat4v": {
    "summary": "Sets a 4x4 matrix to represent a scaling transformation.",
    "path": "/api-docs#/docs/api/functions/matrix.scalingMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "Scene": {
    "summary": "Container of model geometry and materials.",
    "path": "/api-docs#/docs/api/classes/scene.Scene.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneGeometry": {
    "summary": "A geometry in a SceneModel.",
    "path": "/api-docs#/docs/api/classes/scene.SceneGeometry.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneGeometryCompressedParams": {
    "summary": "Pre-compressed geometry creation parameters for SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneGeometryCompressedParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneGeometryParams": {
    "summary": "Non-compressed geometry parameters for SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneGeometryParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneMesh": {
    "summary": "A mesh in a SceneModel.",
    "path": "/api-docs#/docs/api/classes/scene.SceneMesh.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneMeshParams": {
    "summary": "Parameters for a SceneMesh.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneMeshParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneModel": {
    "summary": "Contains a model's geometry and materials\n\n* Created with Scene.",
    "path": "/api-docs#/docs/api/classes/scene.SceneModel.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneModelParams": {
    "summary": "Parameters for a SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneModelParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneModelStats": {
    "summary": "Statistics for a SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneModelStats.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneModelStreamLayerParams": {
    "summary": "Indicates storage to allocate in a renderer layer.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneModelStreamLayerParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneModelStreamParams": {
    "summary": "Indicates what renderer resources will need to be allocated in a Viewer's\nRenderer to support progressive loading for a SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneModelStreamParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneObject": {
    "summary": "An object in a SceneModel.",
    "path": "/api-docs#/docs/api/classes/scene.SceneObject.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneObjectHit": {
    "summary": "Represents a picked SceneObject within a RayPickResult.",
    "path": "/api-docs#/docs/api/interfaces/pick.SceneObjectHit.html",
    "kind": "interface",
    "namespace": "pick"
  },
  "SceneObjectParams": {
    "summary": "Parameters for a SceneObject.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneObjectParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneObjectsKdTree3": {
    "summary": "k-d tree built by createSceneObjectsKdTree3 that contains SceneObject item types.",
    "path": "/api-docs#/docs/api/classes/kdtree3.SceneObjectsKdTree3.html",
    "kind": "class",
    "namespace": "kdtree3"
  },
  "SceneObjectsPrimsKdTree3": {
    "summary": "k-d tree built by createSceneObjectPrimsKdTree3.",
    "path": "/api-docs#/docs/api/classes/kdtree3.SceneObjectsPrimsKdTree3.html",
    "kind": "class",
    "namespace": "kdtree3"
  },
  "SceneTexture": {
    "summary": "A texture in a SceneModel.",
    "path": "/api-docs#/docs/api/classes/scene.SceneTexture.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneTextureParams": {
    "summary": "SceneTexture creation parameters for SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneTextureParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneTextureSet": {
    "summary": "A set of Textures in a SceneModel.",
    "path": "/api-docs#/docs/api/classes/scene.SceneTextureSet.html",
    "kind": "class",
    "namespace": "scene"
  },
  "SceneTextureSetParams": {
    "summary": "SceneTextureSet creation parameters for SceneModel.",
    "path": "/api-docs#/docs/api/interfaces/scene.SceneTextureSetParams.html",
    "kind": "interface",
    "namespace": "scene"
  },
  "SceneTile": {
    "summary": "A tile in a SceneModel.",
    "path": "/api-docs#/docs/api/classes/scene.SceneTile.html",
    "kind": "class",
    "namespace": "scene"
  },
  "scheduler": {
    "summary": "",
    "path": "/api-docs#/docs/api/variables/viewer.scheduler.html",
    "kind": "variable",
    "namespace": "viewer"
  },
  "SDKError": {
    "summary": "Basic xeokit SDK error type.",
    "path": "/api-docs#/docs/api/classes/core.SDKError.html",
    "kind": "class",
    "namespace": "core"
  },
  "searchKdTree2ForNearestNeighbor": {
    "summary": "Performs a Nearest-Neighbour search of the given KdTree2 from the given 2D canvas coordinates.",
    "path": "/api-docs#/docs/api/functions/kdtree2.searchKdTree2ForNearestNeighbor.html",
    "kind": "function",
    "namespace": "kdtree2"
  },
  "searchKdTree3WithAABB": {
    "summary": "Queries a KdTree3 for KDItems that intersect\na 3D axis-aligned bounding box (AABB).",
    "path": "/api-docs#/docs/api/functions/kdtree3.searchKdTree3WithAABB.html",
    "kind": "function",
    "namespace": "kdtree3"
  },
  "searchKdTree3WithFrustum": {
    "summary": "Queries a KdTree3 for KDItems that intersect\na 3D boundaries!Frustum3.",
    "path": "/api-docs#/docs/api/functions/kdtree3.searchKdTree3WithFrustum.html",
    "kind": "function",
    "namespace": "kdtree3"
  },
  "searchKdTree3WithRay": {
    "summary": "Queries a KdTree3 for KDItems that intersect\na 3D ray.",
    "path": "/api-docs#/docs/api/functions/kdtree3.searchKdTree3WithRay.html",
    "kind": "function",
    "namespace": "kdtree3"
  },
  "searchObjects": {
    "summary": "Finds DataObjects in a Data using a customized depth-first traversal.",
    "path": "/api-docs#/docs/api/functions/data.searchObjects.html",
    "kind": "function",
    "namespace": "data"
  },
  "SearchParams": {
    "summary": "Parameters to configure the depth-first search performed by searchObjects\nto locate DataObjects.",
    "path": "/api-docs#/docs/api/interfaces/data.SearchParams.html",
    "kind": "interface",
    "namespace": "data"
  },
  "SectionPlane": {
    "summary": "An arbitrarily-aligned World-space clipping plane.",
    "path": "/api-docs#/docs/api/classes/viewer.SectionPlane.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "SectionPlaneParams": {
    "summary": "Parameters for a SectionPlane.",
    "path": "/api-docs#/docs/api/interfaces/viewer.SectionPlaneParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "setFrustum3": {
    "summary": "Sets the extents of a frustum to the world-space volume defined by view and projection matrices.",
    "path": "/api-docs#/docs/api/functions/boundaries.setFrustum3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "setMat4Translation": {
    "summary": "Creates a new matrix that replaces the translation in the rightmost column of the given\naffine matrix with the provided translation vector.",
    "path": "/api-docs#/docs/api/functions/matrix.setMat4Translation.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "ShortType": {
    "summary": "Signed 16-bit integer type.",
    "path": "/api-docs#/docs/api/variables/constants.ShortType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "SnapshotFinishedEvent": {
    "summary": "",
    "path": "/api-docs#/docs/api/interfaces/viewer.SnapshotFinishedEvent.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "SnapshotParams": {
    "summary": "Parameters for View.",
    "path": "/api-docs#/docs/api/interfaces/viewer.SnapshotParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "SnapshotResult": {
    "summary": "Results of a snapshot attempted with View.",
    "path": "/api-docs#/docs/api/classes/viewer.SnapshotResult.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "SnapshotStartedEvent": {
    "summary": "Event that signifies the beginning of a canvas snapshot captured with.",
    "path": "/api-docs#/docs/api/interfaces/viewer.SnapshotStartedEvent.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "SolidPrimitive": {
    "summary": "Closed triangle mesh primitive type.",
    "path": "/api-docs#/docs/api/variables/constants.SolidPrimitive.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "SolitaryVegetationObject": {
    "summary": "This CityJSON type represents individual vegetation objects, such as trees or bushes.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.SolitaryVegetationObject.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "sqLenVec2": {
    "summary": "Returns the squared length of a two-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.sqLenVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "sqLenVec3": {
    "summary": "Returns the squared length of a three-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.sqLenVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "sqLenVec4": {
    "summary": "Returns the squared length of a four-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.sqLenVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "sRGBEncoding": {
    "summary": "Texture encoding mode in which the texture image is in sRGB color space.",
    "path": "/api-docs#/docs/api/variables/constants.sRGBEncoding.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "StaticDraw": {
    "summary": "Indicates scene content that never changes.",
    "path": "/api-docs#/docs/api/variables/constants.StaticDraw.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "subScalarVec4": {
    "summary": "Sets each element of a 4-element vector to a scalar value minus the value of that element.",
    "path": "/api-docs#/docs/api/functions/matrix.subScalarVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "subVec2": {
    "summary": "Subtracts one two-element vector from another.",
    "path": "/api-docs#/docs/api/functions/matrix.subVec2.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "subVec3": {
    "summary": "Subtracts one three-element vector from another.",
    "path": "/api-docs#/docs/api/functions/matrix.subVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "subVec4": {
    "summary": "Subtracts one four-element vector from another.",
    "path": "/api-docs#/docs/api/functions/matrix.subVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "subVec4Scalar": {
    "summary": "Subtracts a scalar value from each element of a four-element vector.",
    "path": "/api-docs#/docs/api/functions/matrix.subVec4Scalar.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "SurfacePrimitive": {
    "summary": "Non-closed triangle mesh primitive type.",
    "path": "/api-docs#/docs/api/variables/constants.SurfacePrimitive.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "tangentQuadraticBezier": {
    "summary": "Computes the tangent to a quadratic Bézier curve.",
    "path": "/api-docs#/docs/api/functions/curves.tangentQuadraticBezier.html",
    "kind": "function",
    "namespace": "curves"
  },
  "tangentQuadraticBezier3": {
    "summary": "Computes the tangent to a cubic Bézier curve.",
    "path": "/api-docs#/docs/api/functions/curves.tangentQuadraticBezier3.html",
    "kind": "function",
    "namespace": "curves"
  },
  "tangentSpline": {
    "summary": "Computes the tangent to a spline.",
    "path": "/api-docs#/docs/api/functions/curves.tangentSpline.html",
    "kind": "function",
    "namespace": "curves"
  },
  "TextureCompressedParams": {
    "summary": "Compressed texture data.",
    "path": "/api-docs#/docs/api/interfaces/core.TextureCompressedParams.html",
    "kind": "interface",
    "namespace": "core"
  },
  "TextureTranscoder": {
    "summary": "Defines the interface for xeokit texture decompression strategies.",
    "path": "/api-docs#/docs/api/interfaces/core.TextureTranscoder.html",
    "kind": "interface",
    "namespace": "core"
  },
  "Texturing": {
    "summary": "Configures whether a View shows textures on its ViewObjects.",
    "path": "/api-docs#/docs/api/classes/viewer.Texturing.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "TickEvent": {
    "summary": "",
    "path": "/api-docs#/docs/api/interfaces/viewer.TickEvent.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "TickParams": {
    "summary": "Parameters that accompany events fired by Viewer.",
    "path": "/api-docs#/docs/api/interfaces/viewer.TickParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "timeout": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/utils.timeout.html",
    "kind": "function",
    "namespace": "utils"
  },
  "TINRelief": {
    "summary": "This CityJSON type represents a terrain component modeled as a triangulated irregular network (TIN).",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TINRelief.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "transformAndOctEncodeNormals": {
    "summary": "Transforms normals by applying a world normal matrix and then oct-encodes them to minimize rounding errors.",
    "path": "/api-docs#/docs/api/functions/compression.transformAndOctEncodeNormals.html",
    "kind": "function",
    "namespace": "compression"
  },
  "transformOBB3": {
    "summary": "Transforms a 3D oriented bounding box (OBB3) using a 4x4 transformation matrix.",
    "path": "/api-docs#/docs/api/functions/boundaries.transformOBB3.html",
    "kind": "function",
    "namespace": "boundaries"
  },
  "transformPoint3": {
    "summary": "Transforms a 3D point by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformPoint3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformPoint4": {
    "summary": "Transforms a homogeneous coordinate by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformPoint4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformPoints3": {
    "summary": "Transforms an array of 3D positions by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformPoints3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformPositions3": {
    "summary": "Transforms an array of 3D positions by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformPositions3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformPositions4": {
    "summary": "Transforms an array of 3D positions by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformPositions4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformRay": {
    "summary": "Transforms a ray by a 4x4 transformation matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformRay.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformVec3": {
    "summary": "Transforms a 3D vector by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformVec3.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "transformVec4": {
    "summary": "Transforms a 4D vector by a 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transformVec4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "translateMat4c": {
    "summary": "Efficiently applies a translation to the given matrix using separate components.",
    "path": "/api-docs#/docs/api/functions/matrix.translateMat4c.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "translateMat4v": {
    "summary": "Efficiently applies a translation to the given matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.translateMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "translationMat3v": {
    "summary": "Returns a 3x3 translation matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.translationMat3v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "translationMat4c": {
    "summary": "",
    "path": "/api-docs#/docs/api/functions/matrix.translationMat4c.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "translationMat4s": {
    "summary": "Returns a 4x4 translation matrix with uniform scaling.",
    "path": "/api-docs#/docs/api/functions/matrix.translationMat4s.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "translationMat4v": {
    "summary": "Returns a 4x4 translation matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.translationMat4v.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "TransportationSquare": {
    "summary": "This CityJSON type represents a transportation square, which can include plazas and other large paved areas.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TransportationSquare.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "transposeMat4": {
    "summary": "Transposes the given 4x4 matrix.",
    "path": "/api-docs#/docs/api/functions/matrix.transposeMat4.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "TreeView": {
    "summary": "An HTMl tree view that navigates the !DataObject | DataObjects in the given\n!Data | Data, while controlling the visibility of their corresponding\nViewObjects in the given View.",
    "path": "/api-docs#/docs/api/classes/treeview.TreeView.html",
    "kind": "class",
    "namespace": "treeview"
  },
  "TreeViewNode": {
    "summary": "",
    "path": "/api-docs#/docs/api/interfaces/treeview.TreeViewNode.html",
    "kind": "interface",
    "namespace": "treeview"
  },
  "TreeViewNodeContextMenuEvent": {
    "summary": "Event fired by TreeView.",
    "path": "/api-docs#/docs/api/interfaces/treeview.TreeViewNodeContextMenuEvent.html",
    "kind": "interface",
    "namespace": "treeview"
  },
  "TreeViewNodeTitleClickedEvent": {
    "summary": "Event fired by TreeView.",
    "path": "/api-docs#/docs/api/interfaces/treeview.TreeViewNodeTitleClickedEvent.html",
    "kind": "interface",
    "namespace": "treeview"
  },
  "TreeViewParams": {
    "summary": "Parameters to create a TreeView.",
    "path": "/api-docs#/docs/api/interfaces/treeview.TreeViewParams.html",
    "kind": "interface",
    "namespace": "treeview"
  },
  "triangleNormal": {
    "summary": "Calculates the normal vector of a triangle defined by three points.",
    "path": "/api-docs#/docs/api/functions/matrix.triangleNormal.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "TrianglesPrimitive": {
    "summary": "Non-closed triangle mesh primitive type.",
    "path": "/api-docs#/docs/api/variables/constants.TrianglesPrimitive.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "Tunnel": {
    "summary": "This CityJSON type represents a tunnel, including underground and underwater passages for transportation or other purposes.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.Tunnel.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "TunnelConstructiveElement": {
    "summary": "This CityJSON type represents a structural component of a tunnel, such as walls or beams.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TunnelConstructiveElement.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "TunnelFurniture": {
    "summary": "This CityJSON type represents furniture or equipment within a tunnel, usually not fixed to the structure.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TunnelFurniture.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "TunnelHollowSpace": {
    "summary": "This CityJSON type represents a hollow space within a tunnel.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TunnelHollowSpace.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "TunnelInstallation": {
    "summary": "This CityJSON type represents a permanent installation within a tunnel, which is not structurally significant.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TunnelInstallation.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "TunnelPart": {
    "summary": "This CityJSON type represents a subdivision of a tunnel, defined as part of a larger tunnel system.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.TunnelPart.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "typeCodes": {
    "summary": "Map of type codes for all CityObject type names.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.typeCodes.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "typeNames": {
    "summary": "Map of names for all supported CityObject types.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.typeNames.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "UnsignedByteType": {
    "summary": "Unsigned 8-bit integer type.",
    "path": "/api-docs#/docs/api/variables/constants.UnsignedByteType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "UnsignedInt248Type": {
    "summary": "Unsigned integer type for 24-bit depth texture data.",
    "path": "/api-docs#/docs/api/variables/constants.UnsignedInt248Type.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "UnsignedIntType": {
    "summary": "Unsigned 32-bit integer type.",
    "path": "/api-docs#/docs/api/variables/constants.UnsignedIntType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "UnsignedShort4444Type": {
    "summary": "Texture packing mode in which each ````RGBA```` channel is packed into 4 bits, for a combined total of 16 bits.",
    "path": "/api-docs#/docs/api/variables/constants.UnsignedShort4444Type.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "UnsignedShort5551Type": {
    "summary": "Texture packing mode in which the ````RGB```` channels are each packed into 5 bits, and the ````A```` channel is packed into 1 bit, for a combined total of 16 bits.",
    "path": "/api-docs#/docs/api/variables/constants.UnsignedShort5551Type.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "UnsignedShortType": {
    "summary": "Unsigned 16-bit integer type.",
    "path": "/api-docs#/docs/api/variables/constants.UnsignedShortType.html",
    "kind": "variable",
    "namespace": "constants"
  },
  "vec3ApplyQuat": {
    "summary": "Applies a quaternion rotation to a 3D vector.",
    "path": "/api-docs#/docs/api/functions/matrix.vec3ApplyQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "vec3FromMat4Scale": {
    "summary": "Creates a three-element vector from the rotation part of a 16-element matrix.",
    "path": "/api-docs#/docs/api/variables/matrix.vec3FromMat4Scale.html",
    "kind": "variable",
    "namespace": "matrix"
  },
  "vec3PairToQuat": {
    "summary": "Creates a quaternion from two vectors (u and v).",
    "path": "/api-docs#/docs/api/functions/matrix.vec3PairToQuat.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "vecToArray": {
    "summary": "Converts an n-element vector to a JSON-serializable array with values rounded to two decimal places.",
    "path": "/api-docs#/docs/api/functions/matrix.vecToArray.html",
    "kind": "function",
    "namespace": "matrix"
  },
  "View": {
    "summary": "An independent view within a Viewer, with its own Canvas, Camera and object visual states.",
    "path": "/api-docs#/docs/api/classes/viewer.View.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "Viewer": {
    "summary": "The xeokit SDK's Browser-based model viewer.",
    "path": "/api-docs#/docs/api/classes/viewer.Viewer.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "ViewerParams": {
    "summary": "Parameters for a Viewer.",
    "path": "/api-docs#/docs/api/interfaces/viewer.ViewerParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "ViewLayer": {
    "summary": "A layer of ViewObjects within a View.",
    "path": "/api-docs#/docs/api/classes/viewer.ViewLayer.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "ViewLayerParams": {
    "summary": "Parameters for a ViewLayer.",
    "path": "/api-docs#/docs/api/interfaces/viewer.ViewLayerParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "ViewObject": {
    "summary": "An object within a View.",
    "path": "/api-docs#/docs/api/classes/viewer.ViewObject.html",
    "kind": "class",
    "namespace": "viewer"
  },
  "ViewParams": {
    "summary": "Parameters for a View.",
    "path": "/api-docs#/docs/api/interfaces/viewer.ViewParams.html",
    "kind": "interface",
    "namespace": "viewer"
  },
  "WaterBody": {
    "summary": "This CityJSON type represents a body of water, such as a river, lake, or ocean.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.WaterBody.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "Waterway": {
    "summary": "This CityJSON type represents a waterway, including rivers, canals, or stormwater drains.",
    "path": "/api-docs#/docs/api/variables/cityjsontypes_1_1_3.Waterway.html",
    "kind": "variable",
    "namespace": "cityjsontypes_1_1_3"
  },
  "WebGLRenderer": {
    "summary": "A WebGL-based rendering strategy for a Viewer.",
    "path": "/api-docs#/docs/api/classes/webglrenderer.WebGLRenderer.html",
    "kind": "class",
    "namespace": "webglrenderer"
  },
  "WorkerPool": {
    "summary": "WorkerPool manages a pool of workers to efficiently handle multiple tasks in parallel.",
    "path": "/api-docs#/docs/api/classes/utils.WorkerPool.html",
    "kind": "class",
    "namespace": "utils"
  },
  "worldToRTCCenter": {
    "summary": "Converts a World-space 3D position to its RTC center.",
    "path": "/api-docs#/docs/api/functions/rtc.worldToRTCCenter.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "worldToRTCPos": {
    "summary": "Converts a 3D World-space position to RTC coordinates.",
    "path": "/api-docs#/docs/api/functions/rtc.worldToRTCPos.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "worldToRTCPositions": {
    "summary": "Converts a flat array of World-space positions to RTC positions.",
    "path": "/api-docs#/docs/api/functions/rtc.worldToRTCPositions.html",
    "kind": "function",
    "namespace": "rtc"
  },
  "XGFData_v1": {
    "summary": "The elements of a [XGF](https://xeokit.",
    "path": "/api-docs#/docs/api/interfaces/xgf.XGFData_v1.html",
    "kind": "interface",
    "namespace": "xgf"
  },
  "XKTManifest": {
    "summary": "",
    "path": "/api-docs#/docs/api/interfaces/xkt.XKTManifest.html",
    "kind": "interface",
    "namespace": "xkt"
  },
  "YardsUnit": {
    "summary": "Yards unit of measurement.",
    "path": "/api-docs#/docs/api/variables/constants.YardsUnit.html",
    "kind": "variable",
    "namespace": "constants"
  }
}